package com.david.vehicleservice;

import com.david.vehicleservice.config.SwaggerConfig__BeanDefinitions;
import com.david.vehicleservice.exceptionhandler.ExceptionHandlerGeneral__BeanDefinitions;
import com.david.vehicleservice.modal.mapper.PositionMapperImpl__BeanDefinitions;
import com.david.vehicleservice.modal.mapper.VeihicleMapperImpl__BeanDefinitions;
import com.david.vehicleservice.repository.PositionRepository__BeanDefinitions;
import com.david.vehicleservice.repository.VehicleRepository__BeanDefinitions;
import com.david.vehicleservice.resource.PositionResource__BeanDefinitions;
import com.david.vehicleservice.resource.VehicleResource__BeanDefinitions;
import com.david.vehicleservice.service.impl.PositionServiceImpl__BeanDefinitions;
import com.david.vehicleservice.service.impl.VehicleServiceImpl__BeanDefinitions;
import io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.AbstractCircuitBreakerConfigurationOnMissingBean__BeanDefinitions;
import io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerAutoConfiguration__BeanDefinitions;
import io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerConfigurationOnMissingBean__BeanDefinitions;
import io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerMetricsAutoConfiguration__BeanDefinitions;
import io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerProperties__BeanDefinitions;
import io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakersHealthIndicatorAutoConfiguration__BeanDefinitions;
import io.github.resilience4j.springboot3.fallback.autoconfigure.FallbackConfigurationOnMissingBean__BeanDefinitions;
import io.github.resilience4j.springboot3.ratelimiter.autoconfigure.AbstractRateLimiterConfigurationOnMissingBean__BeanDefinitions;
import io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterAutoConfiguration__BeanDefinitions;
import io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterConfigurationOnMissingBean__BeanDefinitions;
import io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterMetricsAutoConfiguration__BeanDefinitions;
import io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterProperties__BeanDefinitions;
import io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimitersHealthIndicatorAutoConfiguration__BeanDefinitions;
import io.github.resilience4j.springboot3.retry.autoconfigure.AbstractRetryConfigurationOnMissingBean__BeanDefinitions;
import io.github.resilience4j.springboot3.retry.autoconfigure.RetryAutoConfiguration__BeanDefinitions;
import io.github.resilience4j.springboot3.retry.autoconfigure.RetryConfigurationOnMissingBean__BeanDefinitions;
import io.github.resilience4j.springboot3.retry.autoconfigure.RetryMetricsAutoConfiguration__BeanDefinitions;
import io.github.resilience4j.springboot3.retry.autoconfigure.RetryProperties__BeanDefinitions;
import io.github.resilience4j.springboot3.spelresolver.autoconfigure.SpelResolverConfigurationOnMissingBean__BeanDefinitions;
import io.github.resilience4j.springboot3.timelimiter.autoconfigure.AbstractTimeLimiterConfigurationOnMissingBean__BeanDefinitions;
import io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterAutoConfiguration__BeanDefinitions;
import io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterConfigurationOnMissingBean__BeanDefinitions;
import io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterMetricsAutoConfiguration__BeanDefinitions;
import io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterProperties__BeanDefinitions;
import org.springdoc.core.configuration.SpringDocConfiguration__BeanDefinitions;
import org.springdoc.core.configuration.SpringDocPageableConfiguration__BeanDefinitions;
import org.springdoc.core.configuration.SpringDocSortConfiguration__BeanDefinitions;
import org.springdoc.core.configuration.SpringDocUIConfiguration__BeanDefinitions;
import org.springdoc.core.properties.SpringDocConfigProperties__BeanDefinitions;
import org.springdoc.core.properties.SwaggerUiConfigParameters__BeanDefinitions;
import org.springdoc.core.properties.SwaggerUiConfigProperties__BeanDefinitions;
import org.springdoc.core.properties.SwaggerUiOAuthProperties__BeanDefinitions;
import org.springdoc.webmvc.core.configuration.SpringDocWebMvcConfiguration__BeanDefinitions;
import org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator__BeanDefinitions;
import org.springframework.beans.factory.aot.BeanInstanceSupplier;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.beans.factory.support.DefaultListableBeanFactory;
import org.springframework.beans.factory.support.RootBeanDefinition;
import org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.health.ReactiveHealthEndpointConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthContributorAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthIndicatorProperties__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.data.RepositoryMetricsAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusMetricsExportAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.startup.StartupTimeMetricsListenerAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.task.TaskExecutorMetricsAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.web.tomcat.TomcatMetricsAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.observation.web.client.RestTemplateObservationConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.AutoConfigurationPackages__BeanDefinitions;
import org.springframework.boot.autoconfigure.aop.AopAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.context.LifecycleProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.gson.GsonProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.info.ProjectInfoProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.jackson.JacksonProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.DataSourceProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.JdbcProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.orm.jpa.JpaProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.ssl.SslProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskExecutionProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskSchedulingProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.transaction.TransactionProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.ServerProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.WebProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.MultipartProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration__BeanDefinitions;
import org.springframework.boot.context.properties.BoundConfigurationProperties__BeanDefinitions;
import org.springframework.boot.context.properties.ConfigurationPropertiesBinder__BeanDefinitions;
import org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor__BeanDefinitions;
import org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer__BeanDefinitions;
import org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter__BeanDefinitions;
import org.springframework.boot.web.server.ErrorPageRegistrarBeanPostProcessor__BeanDefinitions;
import org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor__BeanDefinitions;
import org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration__BeanDefinitions;
import org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration__BeanDefinitions;
import org.springframework.cloud.autoconfigure.PauseResumeEndpointsConfiguration__BeanDefinitions;
import org.springframework.cloud.autoconfigure.RefreshAutoConfiguration__BeanDefinitions;
import org.springframework.cloud.autoconfigure.RefreshEndpointAutoConfiguration__BeanDefinitions;
import org.springframework.cloud.autoconfigure.RestartEndpointWithoutIntegrationConfiguration__BeanDefinitions;
import org.springframework.cloud.circuitbreaker.resilience4j.Resilience4JAutoConfiguration__BeanDefinitions;
import org.springframework.cloud.circuitbreaker.resilience4j.Resilience4JConfigurationProperties__BeanDefinitions;
import org.springframework.cloud.client.CommonsClientAutoConfiguration__BeanDefinitions;
import org.springframework.cloud.client.ReactiveCommonsClientAutoConfiguration__BeanDefinitions;
import org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration__BeanDefinitions;
import org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicatorProperties__BeanDefinitions;
import org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration__BeanDefinitions;
import org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties__BeanDefinitions;
import org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration__BeanDefinitions;
import org.springframework.cloud.client.loadbalancer.LoadBalancerEagerLoadProperties__BeanDefinitions;
import org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationAutoConfiguration__BeanDefinitions;
import org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationConfiguration__BeanDefinitions;
import org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties__BeanDefinitions;
import org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration__BeanDefinitions;
import org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration__BeanDefinitions;
import org.springframework.cloud.commons.security.ResourceServerTokenRelayAutoConfiguration__BeanDefinitions;
import org.springframework.cloud.commons.util.UtilAutoConfiguration__BeanDefinitions;
import org.springframework.cloud.configuration.CompatibilityVerifierAutoConfiguration__BeanDefinitions;
import org.springframework.cloud.configuration.CompatibilityVerifierProperties__BeanDefinitions;
import org.springframework.cloud.context.scope.GenericScope;
import org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification__BeanDefinitions;
import org.springframework.cloud.loadbalancer.cache.LoadBalancerCacheProperties__BeanDefinitions;
import org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration__BeanDefinitions;
import org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration__BeanDefinitions;
import org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration__BeanDefinitions;
import org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration__BeanDefinitions;
import org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration__BeanDefinitions;
import org.springframework.cloud.netflix.eureka.RestTemplateTimeoutProperties__BeanDefinitions;
import org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration__BeanDefinitions;
import org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration__BeanDefinitions;
import org.springframework.cloud.openfeign.FeignAutoConfiguration__BeanDefinitions;
import org.springframework.cloud.openfeign.FeignClientProperties__BeanDefinitions;
import org.springframework.cloud.openfeign.loadbalancer.DefaultFeignLoadBalancerConfiguration__BeanDefinitions;
import org.springframework.cloud.openfeign.loadbalancer.FeignLoadBalancerAutoConfiguration__BeanDefinitions;
import org.springframework.cloud.openfeign.support.FeignEncoderProperties__BeanDefinitions;
import org.springframework.cloud.openfeign.support.FeignHttpClientProperties__BeanDefinitions;
import org.springframework.context.event.DefaultEventListenerFactory__BeanDefinitions;
import org.springframework.context.event.EventListenerMethodProcessor__BeanDefinitions;
import org.springframework.core.ResolvableType;
import org.springframework.data.jpa.mapping.JpaMetamodelMappingContext__BeanDefinitions;
import org.springframework.data.jpa.repository.support.DefaultJpaContext__BeanDefinitions;
import org.springframework.data.jpa.repository.support.EntityManagerBeanDefinitionRegistrarPostProcessor__BeanDefinitions;
import org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension__BeanDefinitions;
import org.springframework.data.jpa.util.JpaMetamodelCacheCleanup__BeanDefinitions;
import org.springframework.data.repository.core.support.PropertiesBasedNamedQueries__BeanDefinitions;
import org.springframework.data.repository.core.support.RepositoryComposition__BeanDefinitions;
import org.springframework.data.web.config.ProjectingArgumentResolverRegistrar__BeanDefinitions;
import org.springframework.data.web.config.SpringDataJacksonConfiguration__BeanDefinitions;
import org.springframework.data.web.config.SpringDataWebConfiguration__BeanDefinitions;
import org.springframework.orm.jpa.SharedEntityManagerCreator__BeanDefinitions;
import org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration__BeanDefinitions;
import org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration__BeanDefinitions;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport__BeanDefinitions;

/**
 * Register bean definitions for the bean factory.
 */
public class VehicleServiceApplication__BeanFactoryRegistrations {
  /**
   * Get the bean instance supplier for 'eurekaClient'.
   */
  private static BeanInstanceSupplier<GenericScope.LockedScopedProxyFactoryBean> getEurekaClientInstanceSupplier(
      ) {
    return BeanInstanceSupplier.<GenericScope.LockedScopedProxyFactoryBean>forConstructor(GenericScope.class)
            .withGenerator((registeredBean, args) -> new GenericScope.LockedScopedProxyFactoryBean(args.get(0)));
  }

  /**
   * Get the bean definition for 'eurekaClient'.
   */
  private static BeanDefinition getEurekaClientBeanDefinition() {
    RootBeanDefinition beanDefinition = new RootBeanDefinition(GenericScope.LockedScopedProxyFactoryBean.class);
    beanDefinition.setTargetType(ResolvableType.forClass(GenericScope.LockedScopedProxyFactoryBean.class));
    beanDefinition.setSynthetic(true);
    beanDefinition.getPropertyValues().addPropertyValue("targetBeanName", "scopedTarget.eurekaClient");
    beanDefinition.setInstanceSupplier(getEurekaClientInstanceSupplier());
    return beanDefinition;
  }

  /**
   * Get the bean instance supplier for 'eurekaApplicationInfoManager'.
   */
  private static BeanInstanceSupplier<GenericScope.LockedScopedProxyFactoryBean> getEurekaApplicationInfoManagerInstanceSupplier(
      ) {
    return BeanInstanceSupplier.<GenericScope.LockedScopedProxyFactoryBean>forConstructor(GenericScope.class)
            .withGenerator((registeredBean, args) -> new GenericScope.LockedScopedProxyFactoryBean(args.get(0)));
  }

  /**
   * Get the bean definition for 'eurekaApplicationInfoManager'.
   */
  private static BeanDefinition getEurekaApplicationInfoManagerBeanDefinition() {
    RootBeanDefinition beanDefinition = new RootBeanDefinition(GenericScope.LockedScopedProxyFactoryBean.class);
    beanDefinition.setTargetType(ResolvableType.forClass(GenericScope.LockedScopedProxyFactoryBean.class));
    beanDefinition.setSynthetic(true);
    beanDefinition.getPropertyValues().addPropertyValue("targetBeanName", "scopedTarget.eurekaApplicationInfoManager");
    beanDefinition.setInstanceSupplier(getEurekaApplicationInfoManagerInstanceSupplier());
    return beanDefinition;
  }

  /**
   * Get the bean instance supplier for 'eurekaRegistration'.
   */
  private static BeanInstanceSupplier<GenericScope.LockedScopedProxyFactoryBean> getEurekaRegistrationInstanceSupplier(
      ) {
    return BeanInstanceSupplier.<GenericScope.LockedScopedProxyFactoryBean>forConstructor(GenericScope.class)
            .withGenerator((registeredBean, args) -> new GenericScope.LockedScopedProxyFactoryBean(args.get(0)));
  }

  /**
   * Get the bean definition for 'eurekaRegistration'.
   */
  private static BeanDefinition getEurekaRegistrationBeanDefinition() {
    RootBeanDefinition beanDefinition = new RootBeanDefinition(GenericScope.LockedScopedProxyFactoryBean.class);
    beanDefinition.setTargetType(ResolvableType.forClass(GenericScope.LockedScopedProxyFactoryBean.class));
    beanDefinition.setSynthetic(true);
    beanDefinition.getPropertyValues().addPropertyValue("targetBeanName", "scopedTarget.eurekaRegistration");
    beanDefinition.setInstanceSupplier(getEurekaRegistrationInstanceSupplier());
    return beanDefinition;
  }

  /**
   * Register the bean definitions.
   */
  public void registerBeanDefinitions(DefaultListableBeanFactory beanFactory) {
    beanFactory.registerBeanDefinition("org.springframework.context.event.internalEventListenerProcessor", EventListenerMethodProcessor__BeanDefinitions.getInternalEventListenerProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.context.event.internalEventListenerFactory", DefaultEventListenerFactory__BeanDefinitions.getInternalEventListenerFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("vehicleServiceApplication", VehicleServiceApplication__BeanDefinitions.getVehicleServiceApplicationBeanDefinition());
    beanFactory.registerBeanDefinition("swaggerConfig", SwaggerConfig__BeanDefinitions.getSwaggerConfigBeanDefinition());
    beanFactory.registerBeanDefinition("exceptionHandlerGeneral", ExceptionHandlerGeneral__BeanDefinitions.getExceptionHandlerGeneralBeanDefinition());
    beanFactory.registerBeanDefinition("positionMapperImpl", PositionMapperImpl__BeanDefinitions.getPositionMapperImplBeanDefinition());
    beanFactory.registerBeanDefinition("veihicleMapperImpl", VeihicleMapperImpl__BeanDefinitions.getVeihicleMapperImplBeanDefinition());
    beanFactory.registerBeanDefinition("positionResource", PositionResource__BeanDefinitions.getPositionResourceBeanDefinition());
    beanFactory.registerBeanDefinition("vehicleResource", VehicleResource__BeanDefinitions.getVehicleResourceBeanDefinition());
    beanFactory.registerBeanDefinition("positionServiceImpl", PositionServiceImpl__BeanDefinitions.getPositionServiceImplBeanDefinition());
    beanFactory.registerBeanDefinition("vehicleServiceImpl", VehicleServiceImpl__BeanDefinitions.getVehicleServiceImplBeanDefinition());
    beanFactory.registerBeanDefinition("myOpenAPI", SwaggerConfig__BeanDefinitions.getMyOpenAPIBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.AutoConfigurationPackages", AutoConfigurationPackages__BeanDefinitions.BasePackages.getAutoConfigurationPackagesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration", MessageSourceAutoConfiguration__BeanDefinitions.getMessageSourceAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("messageSourceProperties", MessageSourceAutoConfiguration__BeanDefinitions.getMessageSourcePropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("messageSource", MessageSourceAutoConfiguration__BeanDefinitions.getMessageSourceBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor", ConfigurationPropertiesBindingPostProcessor__BeanDefinitions.getConfigurationPropertiesBindingPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.internalConfigurationPropertiesBinder", ConfigurationPropertiesBinder__BeanDefinitions.ConfigurationPropertiesBinderFactory.getInternalConfigurationPropertiesBinderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.properties.BoundConfigurationProperties", BoundConfigurationProperties__BeanDefinitions.getBoundConfigurationPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter", MethodValidationExcludeFilter__BeanDefinitions.getMethodValidationExcludeFilterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration", PropertyPlaceholderAutoConfiguration__BeanDefinitions.getPropertyPlaceholderAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("propertySourcesPlaceholderConfigurer", PropertyPlaceholderAutoConfiguration__BeanDefinitions.getPropertySourcesPlaceholderConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration", SslAutoConfiguration__BeanDefinitions.getSslAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("sslPropertiesSslBundleRegistrar", SslAutoConfiguration__BeanDefinitions.getSslPropertiesSslBundleRegistrarBeanDefinition());
    beanFactory.registerBeanDefinition("sslBundleRegistry", SslAutoConfiguration__BeanDefinitions.getSslBundleRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("spring.ssl-org.springframework.boot.autoconfigure.ssl.SslProperties", SslProperties__BeanDefinitions.getSslPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration", WebSocketServletAutoConfiguration__BeanDefinitions.TomcatWebSocketConfiguration.getTomcatWebSocketConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("websocketServletWebServerCustomizer", WebSocketServletAutoConfiguration__BeanDefinitions.TomcatWebSocketConfiguration.getWebsocketServletWebServerCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration", WebSocketServletAutoConfiguration__BeanDefinitions.getWebSocketServletAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat", ServletWebServerFactoryConfiguration__BeanDefinitions.EmbeddedTomcat.getEmbeddedTomcatBeanDefinition());
    beanFactory.registerBeanDefinition("tomcatServletWebServerFactory", ServletWebServerFactoryConfiguration__BeanDefinitions.EmbeddedTomcat.getTomcatServletWebServerFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration", ServletWebServerFactoryAutoConfiguration__BeanDefinitions.getServletWebServerFactoryAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("servletWebServerFactoryCustomizer", ServletWebServerFactoryAutoConfiguration__BeanDefinitions.getServletWebServerFactoryCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("tomcatServletWebServerFactoryCustomizer", ServletWebServerFactoryAutoConfiguration__BeanDefinitions.getTomcatServletWebServerFactoryCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("server-org.springframework.boot.autoconfigure.web.ServerProperties", ServerProperties__BeanDefinitions.getServerPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("webServerFactoryCustomizerBeanPostProcessor", WebServerFactoryCustomizerBeanPostProcessor__BeanDefinitions.getWebServerFactoryCustomizerBeanPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("errorPageRegistrarBeanPostProcessor", ErrorPageRegistrarBeanPostProcessor__BeanDefinitions.getErrorPageRegistrarBeanPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration", DispatcherServletAutoConfiguration__BeanDefinitions.DispatcherServletConfiguration.getDispatcherServletConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("dispatcherServlet", DispatcherServletAutoConfiguration__BeanDefinitions.DispatcherServletConfiguration.getDispatcherServletBeanDefinition());
    beanFactory.registerBeanDefinition("spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties", WebMvcProperties__BeanDefinitions.getWebMvcPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration", DispatcherServletAutoConfiguration__BeanDefinitions.DispatcherServletRegistrationConfiguration.getDispatcherServletRegistrationConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("dispatcherServletRegistration", DispatcherServletAutoConfiguration__BeanDefinitions.DispatcherServletRegistrationConfiguration.getDispatcherServletRegistrationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration", DispatcherServletAutoConfiguration__BeanDefinitions.getDispatcherServletAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration", TaskExecutionAutoConfiguration__BeanDefinitions.getTaskExecutionAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("taskExecutorBuilder", TaskExecutionAutoConfiguration__BeanDefinitions.getTaskExecutorBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("applicationTaskExecutor", TaskExecutionAutoConfiguration__BeanDefinitions.getApplicationTaskExecutorBeanDefinition());
    beanFactory.registerBeanDefinition("spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties", TaskExecutionProperties__BeanDefinitions.getTaskExecutionPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration", ValidationAutoConfiguration__BeanDefinitions.getValidationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("defaultValidator", ValidationAutoConfiguration__BeanDefinitions.getDefaultValidatorBeanDefinition());
    beanFactory.registerBeanDefinition("methodValidationPostProcessor", ValidationAutoConfiguration__BeanDefinitions.getMethodValidationPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration", ErrorMvcAutoConfiguration__BeanDefinitions.WhitelabelErrorViewConfiguration.getWhitelabelErrorViewConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("error", ErrorMvcAutoConfiguration__BeanDefinitions.WhitelabelErrorViewConfiguration.getErrorBeanDefinition());
    beanFactory.registerBeanDefinition("beanNameViewResolver", ErrorMvcAutoConfiguration__BeanDefinitions.WhitelabelErrorViewConfiguration.getBeanNameViewResolverBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration", ErrorMvcAutoConfiguration__BeanDefinitions.DefaultErrorViewResolverConfiguration.getDefaultErrorViewResolverConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("conventionErrorViewResolver", ErrorMvcAutoConfiguration__BeanDefinitions.DefaultErrorViewResolverConfiguration.getConventionErrorViewResolverBeanDefinition());
    beanFactory.registerBeanDefinition("spring.web-org.springframework.boot.autoconfigure.web.WebProperties", WebProperties__BeanDefinitions.getWebPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration", ErrorMvcAutoConfiguration__BeanDefinitions.getErrorMvcAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("errorAttributes", ErrorMvcAutoConfiguration__BeanDefinitions.getErrorAttributesBeanDefinition());
    beanFactory.registerBeanDefinition("basicErrorController", ErrorMvcAutoConfiguration__BeanDefinitions.getBasicErrorControllerBeanDefinition());
    beanFactory.registerBeanDefinition("errorPageCustomizer", ErrorMvcAutoConfiguration__BeanDefinitions.getErrorPageCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("preserveErrorControllerTargetClassPostProcessor", ErrorMvcAutoConfiguration__BeanDefinitions.getPreserveErrorControllerTargetClassPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getEnableWebMvcConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("requestMappingHandlerAdapter", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getRequestMappingHandlerAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("welcomePageHandlerMapping", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getWelcomePageHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("welcomePageNotAcceptableHandlerMapping", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getWelcomePageNotAcceptableHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("localeResolver", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getLocaleResolverBeanDefinition());
    beanFactory.registerBeanDefinition("themeResolver", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getThemeResolverBeanDefinition());
    beanFactory.registerBeanDefinition("flashMapManager", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getFlashMapManagerBeanDefinition());
    beanFactory.registerBeanDefinition("mvcConversionService", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getMvcConversionServiceBeanDefinition());
    beanFactory.registerBeanDefinition("mvcValidator", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getMvcValidatorBeanDefinition());
    beanFactory.registerBeanDefinition("mvcContentNegotiationManager", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getMvcContentNegotiationManagerBeanDefinition());
    beanFactory.registerBeanDefinition("requestMappingHandlerMapping", WebMvcConfigurationSupport__BeanDefinitions.getRequestMappingHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("mvcPatternParser", WebMvcConfigurationSupport__BeanDefinitions.getMvcPatternParserBeanDefinition());
    beanFactory.registerBeanDefinition("mvcUrlPathHelper", WebMvcConfigurationSupport__BeanDefinitions.getMvcUrlPathHelperBeanDefinition());
    beanFactory.registerBeanDefinition("mvcPathMatcher", WebMvcConfigurationSupport__BeanDefinitions.getMvcPathMatcherBeanDefinition());
    beanFactory.registerBeanDefinition("viewControllerHandlerMapping", WebMvcConfigurationSupport__BeanDefinitions.getViewControllerHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("beanNameHandlerMapping", WebMvcConfigurationSupport__BeanDefinitions.getBeanNameHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("routerFunctionMapping", WebMvcConfigurationSupport__BeanDefinitions.getRouterFunctionMappingBeanDefinition());
    beanFactory.registerBeanDefinition("resourceHandlerMapping", WebMvcConfigurationSupport__BeanDefinitions.getResourceHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("mvcResourceUrlProvider", WebMvcConfigurationSupport__BeanDefinitions.getMvcResourceUrlProviderBeanDefinition());
    beanFactory.registerBeanDefinition("defaultServletHandlerMapping", WebMvcConfigurationSupport__BeanDefinitions.getDefaultServletHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("handlerFunctionAdapter", WebMvcConfigurationSupport__BeanDefinitions.getHandlerFunctionAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("mvcUriComponentsContributor", WebMvcConfigurationSupport__BeanDefinitions.getMvcUriComponentsContributorBeanDefinition());
    beanFactory.registerBeanDefinition("httpRequestHandlerAdapter", WebMvcConfigurationSupport__BeanDefinitions.getHttpRequestHandlerAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("simpleControllerHandlerAdapter", WebMvcConfigurationSupport__BeanDefinitions.getSimpleControllerHandlerAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("handlerExceptionResolver", WebMvcConfigurationSupport__BeanDefinitions.getHandlerExceptionResolverBeanDefinition());
    beanFactory.registerBeanDefinition("mvcViewResolver", WebMvcConfigurationSupport__BeanDefinitions.getMvcViewResolverBeanDefinition());
    beanFactory.registerBeanDefinition("mvcHandlerMappingIntrospector", WebMvcConfigurationSupport__BeanDefinitions.getMvcHandlerMappingIntrospectorBeanDefinition());
    beanFactory.registerBeanDefinition("viewNameTranslator", WebMvcConfigurationSupport__BeanDefinitions.getViewNameTranslatorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter", WebMvcAutoConfiguration__BeanDefinitions.WebMvcAutoConfigurationAdapter.getWebMvcAutoConfigurationAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("defaultViewResolver", WebMvcAutoConfiguration__BeanDefinitions.WebMvcAutoConfigurationAdapter.getDefaultViewResolverBeanDefinition());
    beanFactory.registerBeanDefinition("viewResolver", WebMvcAutoConfiguration__BeanDefinitions.WebMvcAutoConfigurationAdapter.getViewResolverBeanDefinition());
    beanFactory.registerBeanDefinition("requestContextFilter", WebMvcAutoConfiguration__BeanDefinitions.WebMvcAutoConfigurationAdapter.getRequestContextFilterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration", WebMvcAutoConfiguration__BeanDefinitions.getWebMvcAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("formContentFilter", WebMvcAutoConfiguration__BeanDefinitions.getFormContentFilterBeanDefinition());
    beanFactory.registerBeanDefinition("io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerAutoConfiguration$CircuitBreakerEndpointAutoConfiguration", CircuitBreakerAutoConfiguration__BeanDefinitions.CircuitBreakerEndpointAutoConfiguration.getCircuitBreakerEndpointAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("io.github.resilience4j.springboot3.spelresolver.autoconfigure.SpelResolverConfigurationOnMissingBean", SpelResolverConfigurationOnMissingBean__BeanDefinitions.getSpelResolverConfigurationOnMissingBeanBeanDefinition());
    beanFactory.registerBeanDefinition("parameterNameDiscoverer", SpelResolverConfigurationOnMissingBean__BeanDefinitions.getParameterNameDiscovererBeanDefinition());
    beanFactory.registerBeanDefinition("spelExpressionParser", SpelResolverConfigurationOnMissingBean__BeanDefinitions.getSpelExpressionParserBeanDefinition());
    beanFactory.registerBeanDefinition("spelResolver", SpelResolverConfigurationOnMissingBean__BeanDefinitions.getSpelResolverBeanDefinition());
    beanFactory.registerBeanDefinition("io.github.resilience4j.springboot3.fallback.autoconfigure.FallbackConfigurationOnMissingBean", FallbackConfigurationOnMissingBean__BeanDefinitions.getFallbackConfigurationOnMissingBeanBeanDefinition());
    beanFactory.registerBeanDefinition("fallbackDecorators", FallbackConfigurationOnMissingBean__BeanDefinitions.getFallbackDecoratorsBeanDefinition());
    beanFactory.registerBeanDefinition("fallbackExecutor", FallbackConfigurationOnMissingBean__BeanDefinitions.getFallbackExecutorBeanDefinition());
    beanFactory.registerBeanDefinition("completionStageFallbackDecorator", FallbackConfigurationOnMissingBean__BeanDefinitions.getCompletionStageFallbackDecoratorBeanDefinition());
    beanFactory.registerBeanDefinition("io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerConfigurationOnMissingBean", CircuitBreakerConfigurationOnMissingBean__BeanDefinitions.getCircuitBreakerConfigurationOnMissingBeanBeanDefinition());
    beanFactory.registerBeanDefinition("eventConsumerRegistry", CircuitBreakerConfigurationOnMissingBean__BeanDefinitions.getEventConsumerRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("compositeCircuitBreakerCustomizer", AbstractCircuitBreakerConfigurationOnMissingBean__BeanDefinitions.getCompositeCircuitBreakerCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("circuitBreakerRegistry", AbstractCircuitBreakerConfigurationOnMissingBean__BeanDefinitions.getCircuitBreakerRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("circuitBreakerRegistryEventConsumer", AbstractCircuitBreakerConfigurationOnMissingBean__BeanDefinitions.getCircuitBreakerRegistryEventConsumerBeanDefinition());
    beanFactory.registerBeanDefinition("circuitBreakerAspect", AbstractCircuitBreakerConfigurationOnMissingBean__BeanDefinitions.getCircuitBreakerAspectBeanDefinition());
    beanFactory.registerBeanDefinition("io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerAutoConfiguration", CircuitBreakerAutoConfiguration__BeanDefinitions.getCircuitBreakerAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("resilience4j.circuitbreaker-io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerProperties", CircuitBreakerProperties__BeanDefinitions.getCircuitBreakerPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration", MetricsAutoConfiguration__BeanDefinitions.getMetricsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("micrometerClock", MetricsAutoConfiguration__BeanDefinitions.getMicrometerClockBeanDefinition());
    beanFactory.registerBeanDefinition("meterRegistryPostProcessor", MetricsAutoConfiguration__BeanDefinitions.getMeterRegistryPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("propertiesMeterFilter", MetricsAutoConfiguration__BeanDefinitions.getPropertiesMeterFilterBeanDefinition());
    beanFactory.registerBeanDefinition("management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties", MetricsProperties__BeanDefinitions.getMetricsPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusMetricsExportAutoConfiguration", PrometheusMetricsExportAutoConfiguration__BeanDefinitions.getPrometheusMetricsExportAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("prometheusConfig", PrometheusMetricsExportAutoConfiguration__BeanDefinitions.getPrometheusConfigBeanDefinition());
    beanFactory.registerBeanDefinition("prometheusMeterRegistry", PrometheusMetricsExportAutoConfiguration__BeanDefinitions.getPrometheusMeterRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("collectorRegistry", PrometheusMetricsExportAutoConfiguration__BeanDefinitions.getCollectorRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("management.prometheus.metrics.export-org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties", PrometheusProperties__BeanDefinitions.getPrometheusPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerMetricsAutoConfiguration", CircuitBreakerMetricsAutoConfiguration__BeanDefinitions.getCircuitBreakerMetricsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("taggedCircuitBreakerMetricsPublisher", CircuitBreakerMetricsAutoConfiguration__BeanDefinitions.getTaggedCircuitBreakerMetricsPublisherBeanDefinition());
    beanFactory.registerBeanDefinition("io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakersHealthIndicatorAutoConfiguration", CircuitBreakersHealthIndicatorAutoConfiguration__BeanDefinitions.getCircuitBreakersHealthIndicatorAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterAutoConfiguration$RateLimiterEndpointAutoConfiguration", RateLimiterAutoConfiguration__BeanDefinitions.RateLimiterEndpointAutoConfiguration.getRateLimiterEndpointAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterConfigurationOnMissingBean", RateLimiterConfigurationOnMissingBean__BeanDefinitions.getRateLimiterConfigurationOnMissingBeanBeanDefinition());
    beanFactory.registerBeanDefinition("rateLimiterEventsConsumerRegistry", RateLimiterConfigurationOnMissingBean__BeanDefinitions.getRateLimiterEventsConsumerRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("compositeRateLimiterCustomizer", AbstractRateLimiterConfigurationOnMissingBean__BeanDefinitions.getCompositeRateLimiterCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("rateLimiterRegistry", AbstractRateLimiterConfigurationOnMissingBean__BeanDefinitions.getRateLimiterRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("rateLimiterRegistryEventConsumer", AbstractRateLimiterConfigurationOnMissingBean__BeanDefinitions.getRateLimiterRegistryEventConsumerBeanDefinition());
    beanFactory.registerBeanDefinition("rateLimiterAspect", AbstractRateLimiterConfigurationOnMissingBean__BeanDefinitions.getRateLimiterAspectBeanDefinition());
    beanFactory.registerBeanDefinition("io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterAutoConfiguration", RateLimiterAutoConfiguration__BeanDefinitions.getRateLimiterAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("resilience4j.ratelimiter-io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterProperties", RateLimiterProperties__BeanDefinitions.getRateLimiterPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterMetricsAutoConfiguration", RateLimiterMetricsAutoConfiguration__BeanDefinitions.getRateLimiterMetricsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("taggedRateLimiterMetricsPublisher", RateLimiterMetricsAutoConfiguration__BeanDefinitions.getTaggedRateLimiterMetricsPublisherBeanDefinition());
    beanFactory.registerBeanDefinition("io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimitersHealthIndicatorAutoConfiguration", RateLimitersHealthIndicatorAutoConfiguration__BeanDefinitions.getRateLimitersHealthIndicatorAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("io.github.resilience4j.springboot3.retry.autoconfigure.RetryAutoConfiguration$RetryAutoEndpointConfiguration", RetryAutoConfiguration__BeanDefinitions.RetryAutoEndpointConfiguration.getRetryAutoEndpointConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("io.github.resilience4j.springboot3.retry.autoconfigure.RetryConfigurationOnMissingBean", RetryConfigurationOnMissingBean__BeanDefinitions.getRetryConfigurationOnMissingBeanBeanDefinition());
    beanFactory.registerBeanDefinition("retryEventConsumerRegistry", RetryConfigurationOnMissingBean__BeanDefinitions.getRetryEventConsumerRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("compositeRetryCustomizer", AbstractRetryConfigurationOnMissingBean__BeanDefinitions.getCompositeRetryCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("retryRegistry", AbstractRetryConfigurationOnMissingBean__BeanDefinitions.getRetryRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("retryRegistryEventConsumer", AbstractRetryConfigurationOnMissingBean__BeanDefinitions.getRetryRegistryEventConsumerBeanDefinition());
    beanFactory.registerBeanDefinition("retryAspect", AbstractRetryConfigurationOnMissingBean__BeanDefinitions.getRetryAspectBeanDefinition());
    beanFactory.registerBeanDefinition("io.github.resilience4j.springboot3.retry.autoconfigure.RetryAutoConfiguration", RetryAutoConfiguration__BeanDefinitions.getRetryAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("resilience4j.retry-io.github.resilience4j.springboot3.retry.autoconfigure.RetryProperties", RetryProperties__BeanDefinitions.getRetryPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("io.github.resilience4j.springboot3.retry.autoconfigure.RetryMetricsAutoConfiguration", RetryMetricsAutoConfiguration__BeanDefinitions.getRetryMetricsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("taggedRetryMetricsPublisher", RetryMetricsAutoConfiguration__BeanDefinitions.getTaggedRetryMetricsPublisherBeanDefinition());
    beanFactory.registerBeanDefinition("io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterAutoConfiguration$TimeLimiterAutoEndpointConfiguration", TimeLimiterAutoConfiguration__BeanDefinitions.TimeLimiterAutoEndpointConfiguration.getTimeLimiterAutoEndpointConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterConfigurationOnMissingBean", TimeLimiterConfigurationOnMissingBean__BeanDefinitions.getTimeLimiterConfigurationOnMissingBeanBeanDefinition());
    beanFactory.registerBeanDefinition("timeLimiterEventsConsumerRegistry", TimeLimiterConfigurationOnMissingBean__BeanDefinitions.getTimeLimiterEventsConsumerRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("compositeTimeLimiterCustomizer", AbstractTimeLimiterConfigurationOnMissingBean__BeanDefinitions.getCompositeTimeLimiterCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("timeLimiterRegistry", AbstractTimeLimiterConfigurationOnMissingBean__BeanDefinitions.getTimeLimiterRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("timeLimiterRegistryEventConsumer", AbstractTimeLimiterConfigurationOnMissingBean__BeanDefinitions.getTimeLimiterRegistryEventConsumerBeanDefinition());
    beanFactory.registerBeanDefinition("timeLimiterAspect", AbstractTimeLimiterConfigurationOnMissingBean__BeanDefinitions.getTimeLimiterAspectBeanDefinition());
    beanFactory.registerBeanDefinition("io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterAutoConfiguration", TimeLimiterAutoConfiguration__BeanDefinitions.getTimeLimiterAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("resilience4j.timelimiter-io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterProperties", TimeLimiterProperties__BeanDefinitions.getTimeLimiterPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterMetricsAutoConfiguration", TimeLimiterMetricsAutoConfiguration__BeanDefinitions.getTimeLimiterMetricsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("taggedTimeLimiterMetricsPublisher", TimeLimiterMetricsAutoConfiguration__BeanDefinitions.getTaggedTimeLimiterMetricsPublisherBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.core.configuration.SpringDocConfiguration$QuerydslProvider", SpringDocConfiguration__BeanDefinitions.QuerydslProvider.getQuerydslProviderBeanDefinition());
    beanFactory.registerBeanDefinition("queryDslQuerydslPredicateOperationCustomizer", SpringDocConfiguration__BeanDefinitions.QuerydslProvider.getQueryDslQuerydslPredicateOperationCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.core.configuration.SpringDocConfiguration$OpenApiResourceAdvice", SpringDocConfiguration__BeanDefinitions.OpenApiResourceAdvice.getOpenApiResourceAdviceBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.core.configuration.SpringDocConfiguration$SpringDocWebFluxSupportConfiguration", SpringDocConfiguration__BeanDefinitions.SpringDocWebFluxSupportConfiguration.getSpringDocWebFluxSupportConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("webFluxSupportConverter", SpringDocConfiguration__BeanDefinitions.SpringDocWebFluxSupportConfiguration.getWebFluxSupportConverterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.core.configuration.SpringDocConfiguration$SpringDocSpringDataWebPropertiesProvider", SpringDocConfiguration__BeanDefinitions.SpringDocSpringDataWebPropertiesProvider.getSpringDocSpringDataWebPropertiesProviderBeanDefinition());
    beanFactory.registerBeanDefinition("springDataWebPropertiesProvider", SpringDocConfiguration__BeanDefinitions.SpringDocSpringDataWebPropertiesProvider.getSpringDataWebPropertiesProviderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.core.configuration.SpringDocConfiguration$WebConversionServiceConfiguration", SpringDocConfiguration__BeanDefinitions.WebConversionServiceConfiguration.getWebConversionServiceConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("webConversionServiceProvider", SpringDocConfiguration__BeanDefinitions.WebConversionServiceConfiguration.getWebConversionServiceProviderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.core.configuration.SpringDocConfiguration", SpringDocConfiguration__BeanDefinitions.getSpringDocConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("localSpringDocParameterNameDiscoverer", SpringDocConfiguration__BeanDefinitions.getLocalSpringDocParameterNameDiscovererBeanDefinition());
    beanFactory.registerBeanDefinition("additionalModelsConverter", SpringDocConfiguration__BeanDefinitions.getAdditionalModelsConverterBeanDefinition());
    beanFactory.registerBeanDefinition("fileSupportConverter", SpringDocConfiguration__BeanDefinitions.getFileSupportConverterBeanDefinition());
    beanFactory.registerBeanDefinition("responseSupportConverter", SpringDocConfiguration__BeanDefinitions.getResponseSupportConverterBeanDefinition());
    beanFactory.registerBeanDefinition("schemaPropertyDeprecatingConverter", SpringDocConfiguration__BeanDefinitions.getSchemaPropertyDeprecatingConverterBeanDefinition());
    beanFactory.registerBeanDefinition("polymorphicModelConverter", SpringDocConfiguration__BeanDefinitions.getPolymorphicModelConverterBeanDefinition());
    beanFactory.registerBeanDefinition("openAPIBuilder", SpringDocConfiguration__BeanDefinitions.getOpenAPIBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("modelConverterRegistrar", SpringDocConfiguration__BeanDefinitions.getModelConverterRegistrarBeanDefinition());
    beanFactory.registerBeanDefinition("operationBuilder", SpringDocConfiguration__BeanDefinitions.getOperationBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("propertyResolverUtils", SpringDocConfiguration__BeanDefinitions.getPropertyResolverUtilsBeanDefinition());
    beanFactory.registerBeanDefinition("requestBodyBuilder", SpringDocConfiguration__BeanDefinitions.getRequestBodyBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("securityParser", SpringDocConfiguration__BeanDefinitions.getSecurityParserBeanDefinition());
    beanFactory.registerBeanDefinition("genericReturnTypeParser", SpringDocConfiguration__BeanDefinitions.getGenericReturnTypeParserBeanDefinition());
    beanFactory.registerBeanDefinition("parameterBuilder", SpringDocConfiguration__BeanDefinitions.getParameterBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("springDocProviders", SpringDocConfiguration__BeanDefinitions.getSpringDocProvidersBeanDefinition());
    beanFactory.registerBeanDefinition("springdocObjectMapperProvider", SpringDocConfiguration__BeanDefinitions.getSpringdocObjectMapperProviderBeanDefinition());
    beanFactory.registerBeanDefinition("springDocCustomizers", SpringDocConfiguration__BeanDefinitions.getSpringDocCustomizersBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.core.configuration.SpringDocPageableConfiguration", SpringDocPageableConfiguration__BeanDefinitions.getSpringDocPageableConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("pageableOpenAPIConverter", SpringDocPageableConfiguration__BeanDefinitions.getPageableOpenAPIConverterBeanDefinition());
    beanFactory.registerBeanDefinition("delegatingMethodParameterCustomizer", SpringDocPageableConfiguration__BeanDefinitions.getDelegatingMethodParameterCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.core.configuration.SpringDocSortConfiguration", SpringDocSortConfiguration__BeanDefinitions.getSpringDocSortConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("sortOpenAPIConverter", SpringDocSortConfiguration__BeanDefinitions.getSortOpenAPIConverterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.core.configuration.SpringDocUIConfiguration", SpringDocUIConfiguration__BeanDefinitions.getSpringDocUIConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.core.properties.SpringDocConfigProperties", SpringDocConfigProperties__BeanDefinitions.getSpringDocConfigPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.core.properties.SwaggerUiConfigParameters", SwaggerUiConfigParameters__BeanDefinitions.getSwaggerUiConfigParametersBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.core.properties.SwaggerUiConfigProperties", SwaggerUiConfigProperties__BeanDefinitions.getSwaggerUiConfigPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.core.properties.SwaggerUiOAuthProperties", SwaggerUiOAuthProperties__BeanDefinitions.getSwaggerUiOAuthPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.webmvc.core.configuration.SpringDocWebMvcConfiguration$SpringDocWebMvcActuatorConfiguration", SpringDocWebMvcConfiguration__BeanDefinitions.SpringDocWebMvcActuatorConfiguration.getSpringDocWebMvcActuatorConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.webmvc.core.configuration.SpringDocWebMvcConfiguration$SpringDocWebMvcRouterConfiguration", SpringDocWebMvcConfiguration__BeanDefinitions.SpringDocWebMvcRouterConfiguration.getSpringDocWebMvcRouterConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("routerFunctionProvider", SpringDocWebMvcConfiguration__BeanDefinitions.SpringDocWebMvcRouterConfiguration.getRouterFunctionProviderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.webmvc.core.configuration.SpringDocWebMvcConfiguration", SpringDocWebMvcConfiguration__BeanDefinitions.getSpringDocWebMvcConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("openApiResource", SpringDocWebMvcConfiguration__BeanDefinitions.getOpenApiResourceBeanDefinition());
    beanFactory.registerBeanDefinition("requestBuilder", SpringDocWebMvcConfiguration__BeanDefinitions.getRequestBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("springWebProvider", SpringDocWebMvcConfiguration__BeanDefinitions.getSpringWebProviderBeanDefinition());
    beanFactory.registerBeanDefinition("responseBuilder", SpringDocWebMvcConfiguration__BeanDefinitions.getResponseBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.webmvc.ui.SwaggerConfig", org.springdoc.webmvc.ui.SwaggerConfig__BeanDefinitions.getSwaggerConfigBeanDefinition());
    beanFactory.registerBeanDefinition("swaggerWelcome", org.springdoc.webmvc.ui.SwaggerConfig__BeanDefinitions.getSwaggerWelcomeBeanDefinition());
    beanFactory.registerBeanDefinition("swaggerConfigResource", org.springdoc.webmvc.ui.SwaggerConfig__BeanDefinitions.getSwaggerConfigResourceBeanDefinition());
    beanFactory.registerBeanDefinition("indexPageTransformer", org.springdoc.webmvc.ui.SwaggerConfig__BeanDefinitions.getIndexPageTransformerBeanDefinition());
    beanFactory.registerBeanDefinition("swaggerWebMvcConfigurer", org.springdoc.webmvc.ui.SwaggerConfig__BeanDefinitions.getSwaggerWebMvcConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("swaggerResourceResolver", org.springdoc.webmvc.ui.SwaggerConfig__BeanDefinitions.getSwaggerResourceResolverBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration", ApplicationAvailabilityAutoConfiguration__BeanDefinitions.getApplicationAvailabilityAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("applicationAvailability", ApplicationAvailabilityAutoConfiguration__BeanDefinitions.getApplicationAvailabilityBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration", AvailabilityHealthContributorAutoConfiguration__BeanDefinitions.getAvailabilityHealthContributorAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration", JacksonAutoConfiguration__BeanDefinitions.Jackson2ObjectMapperBuilderCustomizerConfiguration.getJacksonObjectMapperBuilderCustomizerConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("standardJacksonObjectMapperBuilderCustomizer", JacksonAutoConfiguration__BeanDefinitions.Jackson2ObjectMapperBuilderCustomizerConfiguration.getStandardJacksonObjectMapperBuilderCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties", JacksonProperties__BeanDefinitions.getJacksonPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration", JacksonAutoConfiguration__BeanDefinitions.JacksonObjectMapperBuilderConfiguration.getJacksonObjectMapperBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jacksonObjectMapperBuilder", JacksonAutoConfiguration__BeanDefinitions.JacksonObjectMapperBuilderConfiguration.getJacksonObjectMapperBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration", JacksonAutoConfiguration__BeanDefinitions.ParameterNamesModuleConfiguration.getParameterNamesModuleConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("parameterNamesModule", JacksonAutoConfiguration__BeanDefinitions.ParameterNamesModuleConfiguration.getParameterNamesModuleBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration", JacksonAutoConfiguration__BeanDefinitions.JacksonObjectMapperConfiguration.getJacksonObjectMapperConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jacksonObjectMapper", JacksonAutoConfiguration__BeanDefinitions.JacksonObjectMapperConfiguration.getJacksonObjectMapperBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration", JacksonAutoConfiguration__BeanDefinitions.JacksonMixinConfiguration.getJacksonMixinConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jsonMixinModuleEntries", JacksonAutoConfiguration__BeanDefinitions.JacksonMixinConfiguration.getJsonMixinModuleEntriesBeanDefinition());
    beanFactory.registerBeanDefinition("jsonMixinModule", JacksonAutoConfiguration__BeanDefinitions.JacksonMixinConfiguration.getJsonMixinModuleBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration", JacksonAutoConfiguration__BeanDefinitions.getJacksonAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jsonComponentModule", JacksonAutoConfiguration__BeanDefinitions.getJsonComponentModuleBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration", JtaAutoConfiguration__BeanDefinitions.getJtaAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari", DataSourceConfiguration__BeanDefinitions.Hikari.getHikariBeanDefinition());
    beanFactory.registerBeanDefinition("jdbcConnectionDetailsHikariBeanPostProcessor", DataSourceConfiguration__BeanDefinitions.Hikari.getJdbcConnectionDetailsHikariBeanPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("dataSource", DataSourceConfiguration__BeanDefinitions.Hikari.getDataSourceBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari", DataSourceJmxConfiguration__BeanDefinitions.Hikari.getHikariBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration", DataSourceJmxConfiguration__BeanDefinitions.getDataSourceJmxConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration", DataSourceAutoConfiguration__BeanDefinitions.PooledDataSourceConfiguration.getPooledDataSourceConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jdbcConnectionDetails", DataSourceAutoConfiguration__BeanDefinitions.PooledDataSourceConfiguration.getJdbcConnectionDetailsBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration", DataSourcePoolMetadataProvidersConfiguration__BeanDefinitions.HikariPoolDataSourceMetadataProviderConfiguration.getHikariPoolDataSourceMetadataProviderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("hikariPoolDataSourceMetadataProvider", DataSourcePoolMetadataProvidersConfiguration__BeanDefinitions.HikariPoolDataSourceMetadataProviderConfiguration.getHikariPoolDataSourceMetadataProviderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration", DataSourcePoolMetadataProvidersConfiguration__BeanDefinitions.getDataSourcePoolMetadataProvidersConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration", DataSourceAutoConfiguration__BeanDefinitions.getDataSourceAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties", DataSourceProperties__BeanDefinitions.getDataSourcePropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshScopeBeanDefinitionEnhancer", RefreshAutoConfiguration__BeanDefinitions.RefreshScopeBeanDefinitionEnhancer.getRefreshScopeBeanDefinitionEnhancerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.autoconfigure.RefreshAutoConfiguration", RefreshAutoConfiguration__BeanDefinitions.getRefreshAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("refreshScope", RefreshAutoConfiguration__BeanDefinitions.getRefreshScopeBeanDefinition());
    beanFactory.registerBeanDefinition("loggingRebinder", RefreshAutoConfiguration__BeanDefinitions.getLoggingRebinderBeanDefinition());
    beanFactory.registerBeanDefinition("configDataContextRefresher", RefreshAutoConfiguration__BeanDefinitions.getConfigDataContextRefresherBeanDefinition());
    beanFactory.registerBeanDefinition("refreshEventListener", RefreshAutoConfiguration__BeanDefinitions.getRefreshEventListenerBeanDefinition());
    beanFactory.registerBeanDefinition("spring.cloud.refresh-org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshProperties", RefreshAutoConfiguration__BeanDefinitions.RefreshProperties.getRefreshPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration", JpaBaseConfiguration__BeanDefinitions.JpaWebConfiguration.getJpaWebConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("openEntityManagerInViewInterceptor", JpaBaseConfiguration__BeanDefinitions.JpaWebConfiguration.getOpenEntityManagerInViewInterceptorBeanDefinition());
    beanFactory.registerBeanDefinition("openEntityManagerInViewInterceptorConfigurer", JpaBaseConfiguration__BeanDefinitions.JpaWebConfiguration.getOpenEntityManagerInViewInterceptorConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$PersistenceManagedTypesConfiguration", JpaBaseConfiguration__BeanDefinitions.PersistenceManagedTypesConfiguration.getPersistenceManagedTypesConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("persistenceManagedTypes", JpaBaseConfiguration__BeanDefinitions.PersistenceManagedTypesConfiguration.getPersistenceManagedTypesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration", HibernateJpaConfiguration__BeanDefinitions.getHibernateJpaConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("transactionManager", JpaBaseConfiguration__BeanDefinitions.getTransactionManagerBeanDefinition());
    beanFactory.registerBeanDefinition("jpaVendorAdapter", JpaBaseConfiguration__BeanDefinitions.getJpaVendorAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("entityManagerFactoryBuilder", JpaBaseConfiguration__BeanDefinitions.getEntityManagerFactoryBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("entityManagerFactory", JpaBaseConfiguration__BeanDefinitions.getEntityManagerFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties", HibernateProperties__BeanDefinitions.getHibernatePropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties", JpaProperties__BeanDefinitions.getJpaPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration", HibernateJpaAutoConfiguration__BeanDefinitions.getHibernateJpaAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration", ServletManagementContextAutoConfiguration__BeanDefinitions.getServletManagementContextAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("servletWebChildContextFactory", ServletManagementContextAutoConfiguration__BeanDefinitions.getServletWebChildContextFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("managementServletContext", ServletManagementContextAutoConfiguration__BeanDefinitions.getManagementServletContextBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration", HealthEndpointConfiguration__BeanDefinitions.getHealthEndpointConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("healthStatusAggregator", HealthEndpointConfiguration__BeanDefinitions.getHealthStatusAggregatorBeanDefinition());
    beanFactory.registerBeanDefinition("healthHttpCodeStatusMapper", HealthEndpointConfiguration__BeanDefinitions.getHealthHttpCodeStatusMapperBeanDefinition());
    beanFactory.registerBeanDefinition("healthEndpointGroups", HealthEndpointConfiguration__BeanDefinitions.getHealthEndpointGroupsBeanDefinition());
    beanFactory.registerBeanDefinition("healthContributorRegistry", HealthEndpointConfiguration__BeanDefinitions.getHealthContributorRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("healthEndpointGroupMembershipValidator", HealthEndpointConfiguration__BeanDefinitions.getHealthEndpointGroupMembershipValidatorBeanDefinition());
    beanFactory.registerBeanDefinition("healthEndpoint", HealthEndpointConfiguration__BeanDefinitions.getHealthEndpointBeanDefinition());
    beanFactory.registerBeanDefinition("healthEndpointGroupsBeanPostProcessor", HealthEndpointConfiguration__BeanDefinitions.getHealthEndpointGroupsBeanPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.health.ReactiveHealthEndpointConfiguration", ReactiveHealthEndpointConfiguration__BeanDefinitions.getReactiveHealthEndpointConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("reactiveHealthContributorRegistry", ReactiveHealthEndpointConfiguration__BeanDefinitions.getReactiveHealthContributorRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration$MvcAdditionalHealthEndpointPathsConfiguration", HealthEndpointWebExtensionConfiguration__BeanDefinitions.MvcAdditionalHealthEndpointPathsConfiguration.getMvcAdditionalHealthEndpointPathsConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("healthEndpointWebMvcHandlerMapping", HealthEndpointWebExtensionConfiguration__BeanDefinitions.MvcAdditionalHealthEndpointPathsConfiguration.getHealthEndpointWebMvcHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration", HealthEndpointWebExtensionConfiguration__BeanDefinitions.getHealthEndpointWebExtensionConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("healthEndpointWebExtension", HealthEndpointWebExtensionConfiguration__BeanDefinitions.getHealthEndpointWebExtensionBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration", HealthEndpointAutoConfiguration__BeanDefinitions.getHealthEndpointAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("management.endpoint.health-org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties", HealthEndpointProperties__BeanDefinitions.getHealthEndpointPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration", ProjectInfoAutoConfiguration__BeanDefinitions.getProjectInfoAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties", ProjectInfoProperties__BeanDefinitions.getProjectInfoPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration", InfoContributorAutoConfiguration__BeanDefinitions.getInfoContributorAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("management.info-org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties", InfoContributorProperties__BeanDefinitions.getInfoContributorPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration", EndpointAutoConfiguration__BeanDefinitions.getEndpointAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("endpointOperationParameterMapper", EndpointAutoConfiguration__BeanDefinitions.getEndpointOperationParameterMapperBeanDefinition());
    beanFactory.registerBeanDefinition("endpointCachingOperationInvokerAdvisor", EndpointAutoConfiguration__BeanDefinitions.getEndpointCachingOperationInvokerAdvisorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration", JacksonEndpointAutoConfiguration__BeanDefinitions.getJacksonEndpointAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("endpointObjectMapper", JacksonEndpointAutoConfiguration__BeanDefinitions.getEndpointObjectMapperBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration$WebEndpointServletConfiguration", WebEndpointAutoConfiguration__BeanDefinitions.WebEndpointServletConfiguration.getWebEndpointServletConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("servletEndpointDiscoverer", WebEndpointAutoConfiguration__BeanDefinitions.WebEndpointServletConfiguration.getServletEndpointDiscovererBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration", WebEndpointAutoConfiguration__BeanDefinitions.getWebEndpointAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("webEndpointPathMapper", WebEndpointAutoConfiguration__BeanDefinitions.getWebEndpointPathMapperBeanDefinition());
    beanFactory.registerBeanDefinition("endpointMediaTypes", WebEndpointAutoConfiguration__BeanDefinitions.getEndpointMediaTypesBeanDefinition());
    beanFactory.registerBeanDefinition("webEndpointDiscoverer", WebEndpointAutoConfiguration__BeanDefinitions.getWebEndpointDiscovererBeanDefinition());
    beanFactory.registerBeanDefinition("controllerEndpointDiscoverer", WebEndpointAutoConfiguration__BeanDefinitions.getControllerEndpointDiscovererBeanDefinition());
    beanFactory.registerBeanDefinition("pathMappedEndpoints", WebEndpointAutoConfiguration__BeanDefinitions.getPathMappedEndpointsBeanDefinition());
    beanFactory.registerBeanDefinition("webExposeExcludePropertyEndpointFilter", WebEndpointAutoConfiguration__BeanDefinitions.getWebExposeExcludePropertyEndpointFilterBeanDefinition());
    beanFactory.registerBeanDefinition("controllerExposeExcludePropertyEndpointFilter", WebEndpointAutoConfiguration__BeanDefinitions.getControllerExposeExcludePropertyEndpointFilterBeanDefinition());
    beanFactory.registerBeanDefinition("management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties", WebEndpointProperties__BeanDefinitions.getWebEndpointPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration", LifecycleMvcEndpointAutoConfiguration__BeanDefinitions.getLifecycleMvcEndpointAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("environmentManager", LifecycleMvcEndpointAutoConfiguration__BeanDefinitions.getEnvironmentManagerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration", DiskSpaceHealthContributorAutoConfiguration__BeanDefinitions.getDiskSpaceHealthContributorAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("diskSpaceHealthIndicator", DiskSpaceHealthContributorAutoConfiguration__BeanDefinitions.getDiskSpaceHealthIndicatorBeanDefinition());
    beanFactory.registerBeanDefinition("management.health.diskspace-org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties", DiskSpaceHealthIndicatorProperties__BeanDefinitions.getDiskSpaceHealthIndicatorPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration", HealthContributorAutoConfiguration__BeanDefinitions.getHealthContributorAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("pingHealthContributor", HealthContributorAutoConfiguration__BeanDefinitions.getPingHealthContributorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthContributorAutoConfiguration", DataSourceHealthContributorAutoConfiguration__BeanDefinitions.getDataSourceHealthContributorAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("dbHealthContributor", DataSourceHealthContributorAutoConfiguration__BeanDefinitions.getDbHealthContributorBeanDefinition());
    beanFactory.registerBeanDefinition("management.health.db-org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthIndicatorProperties", DataSourceHealthIndicatorProperties__BeanDefinitions.getDataSourceHealthIndicatorPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration", CompositeMeterRegistryAutoConfiguration__BeanDefinitions.getCompositeMeterRegistryAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration", JvmMetricsAutoConfiguration__BeanDefinitions.getJvmMetricsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jvmGcMetrics", JvmMetricsAutoConfiguration__BeanDefinitions.getJvmGcMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("jvmHeapPressureMetrics", JvmMetricsAutoConfiguration__BeanDefinitions.getJvmHeapPressureMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("jvmMemoryMetrics", JvmMetricsAutoConfiguration__BeanDefinitions.getJvmMemoryMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("jvmThreadMetrics", JvmMetricsAutoConfiguration__BeanDefinitions.getJvmThreadMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("classLoaderMetrics", JvmMetricsAutoConfiguration__BeanDefinitions.getClassLoaderMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("jvmInfoMetrics", JvmMetricsAutoConfiguration__BeanDefinitions.getJvmInfoMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("jvmCompilationMetrics", JvmMetricsAutoConfiguration__BeanDefinitions.getJvmCompilationMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration", LogbackMetricsAutoConfiguration__BeanDefinitions.getLogbackMetricsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("logbackMetrics", LogbackMetricsAutoConfiguration__BeanDefinitions.getLogbackMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration", SystemMetricsAutoConfiguration__BeanDefinitions.getSystemMetricsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("uptimeMetrics", SystemMetricsAutoConfiguration__BeanDefinitions.getUptimeMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("processorMetrics", SystemMetricsAutoConfiguration__BeanDefinitions.getProcessorMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("fileDescriptorMetrics", SystemMetricsAutoConfiguration__BeanDefinitions.getFileDescriptorMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("diskSpaceMetrics", SystemMetricsAutoConfiguration__BeanDefinitions.getDiskSpaceMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.data.RepositoryMetricsAutoConfiguration", RepositoryMetricsAutoConfiguration__BeanDefinitions.getRepositoryMetricsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("repositoryTagsProvider", RepositoryMetricsAutoConfiguration__BeanDefinitions.getRepositoryTagsProviderBeanDefinition());
    beanFactory.registerBeanDefinition("metricsRepositoryMethodInvocationListener", RepositoryMetricsAutoConfiguration__BeanDefinitions.getMetricsRepositoryMethodInvocationListenerBeanDefinition());
    beanFactory.registerBeanDefinition("metricsRepositoryMethodInvocationListenerBeanPostProcessor", RepositoryMetricsAutoConfiguration__BeanDefinitions.getMetricsRepositoryMethodInvocationListenerBeanPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration", IntegrationMetricsAutoConfiguration__BeanDefinitions.getIntegrationMetricsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$HikariDataSourceMetricsConfiguration", DataSourcePoolMetricsAutoConfiguration__BeanDefinitions.HikariDataSourceMetricsConfiguration.getHikariDataSourceMetricsConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("hikariDataSourceMeterBinder", DataSourcePoolMetricsAutoConfiguration__BeanDefinitions.HikariDataSourceMetricsConfiguration.getHikariDataSourceMeterBinderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration", DataSourcePoolMetricsAutoConfiguration__BeanDefinitions.DataSourcePoolMetadataMetricsConfiguration.getDataSourcePoolMetadataMetricsConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("dataSourcePoolMetadataMeterBinder", DataSourcePoolMetricsAutoConfiguration__BeanDefinitions.DataSourcePoolMetadataMetricsConfiguration.getDataSourcePoolMetadataMeterBinderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration", DataSourcePoolMetricsAutoConfiguration__BeanDefinitions.getDataSourcePoolMetricsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.startup.StartupTimeMetricsListenerAutoConfiguration", StartupTimeMetricsListenerAutoConfiguration__BeanDefinitions.getStartupTimeMetricsListenerAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("startupTimeMetrics", StartupTimeMetricsListenerAutoConfiguration__BeanDefinitions.getStartupTimeMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration", TaskSchedulingAutoConfiguration__BeanDefinitions.getTaskSchedulingAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("taskSchedulerBuilder", TaskSchedulingAutoConfiguration__BeanDefinitions.getTaskSchedulerBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties", TaskSchedulingProperties__BeanDefinitions.getTaskSchedulingPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.task.TaskExecutorMetricsAutoConfiguration", TaskExecutorMetricsAutoConfiguration__BeanDefinitions.getTaskExecutorMetricsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("eagerTaskExecutorMetrics", TaskExecutorMetricsAutoConfiguration__BeanDefinitions.getEagerTaskExecutorMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.web.tomcat.TomcatMetricsAutoConfiguration", TomcatMetricsAutoConfiguration__BeanDefinitions.getTomcatMetricsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("tomcatMetricsBinder", TomcatMetricsAutoConfiguration__BeanDefinitions.getTomcatMetricsBinderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration$OnlyMetricsMeterObservationHandlerConfiguration", ObservationAutoConfiguration__BeanDefinitions.MeterObservationHandlerConfiguration.OnlyMetricsMeterObservationHandlerConfiguration.getOnlyMetricsMeterObservationHandlerConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("defaultMeterObservationHandler", ObservationAutoConfiguration__BeanDefinitions.MeterObservationHandlerConfiguration.OnlyMetricsMeterObservationHandlerConfiguration.getDefaultMeterObservationHandlerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration", ObservationAutoConfiguration__BeanDefinitions.MeterObservationHandlerConfiguration.getMeterObservationHandlerConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$OnlyMetricsConfiguration", ObservationAutoConfiguration__BeanDefinitions.OnlyMetricsConfiguration.getOnlyMetricsConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("metricsObservationHandlerGrouping", ObservationAutoConfiguration__BeanDefinitions.OnlyMetricsConfiguration.getMetricsObservationHandlerGroupingBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration", ObservationAutoConfiguration__BeanDefinitions.getObservationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("observationRegistryPostProcessor", ObservationAutoConfiguration__BeanDefinitions.getObservationRegistryPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("observationRegistry", ObservationAutoConfiguration__BeanDefinitions.getObservationRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("management.observations-org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties", ObservationProperties__BeanDefinitions.getObservationPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration", GsonAutoConfiguration__BeanDefinitions.getGsonAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("gsonBuilder", GsonAutoConfiguration__BeanDefinitions.getGsonBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("gson", GsonAutoConfiguration__BeanDefinitions.getGsonBeanDefinition());
    beanFactory.registerBeanDefinition("standardGsonBuilderCustomizer", GsonAutoConfiguration__BeanDefinitions.getStandardGsonBuilderCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties", GsonProperties__BeanDefinitions.getGsonPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration", HttpMessageConvertersAutoConfiguration__BeanDefinitions.StringHttpMessageConverterConfiguration.getStringHttpMessageConverterConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("stringHttpMessageConverter", HttpMessageConvertersAutoConfiguration__BeanDefinitions.StringHttpMessageConverterConfiguration.getStringHttpMessageConverterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration", JacksonHttpMessageConvertersConfiguration__BeanDefinitions.MappingJackson2HttpMessageConverterConfiguration.getMappingJacksonHttpMessageConverterConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("mappingJackson2HttpMessageConverter", JacksonHttpMessageConvertersConfiguration__BeanDefinitions.MappingJackson2HttpMessageConverterConfiguration.getMappingJacksonHttpMessageConverterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration", JacksonHttpMessageConvertersConfiguration__BeanDefinitions.getJacksonHttpMessageConvertersConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration", GsonHttpMessageConvertersConfiguration__BeanDefinitions.getGsonHttpMessageConvertersConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration", HttpMessageConvertersAutoConfiguration__BeanDefinitions.getHttpMessageConvertersAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("messageConverters", HttpMessageConvertersAutoConfiguration__BeanDefinitions.getMessageConvertersBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration", RestTemplateAutoConfiguration__BeanDefinitions.getRestTemplateAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("restTemplateBuilderConfigurer", RestTemplateAutoConfiguration__BeanDefinitions.getRestTemplateBuilderConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("restTemplateBuilder", RestTemplateAutoConfiguration__BeanDefinitions.getRestTemplateBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration$MeterFilterConfiguration", HttpClientObservationsAutoConfiguration__BeanDefinitions.MeterFilterConfiguration.getMeterFilterConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("metricsHttpClientUriTagFilter", HttpClientObservationsAutoConfiguration__BeanDefinitions.MeterFilterConfiguration.getMetricsHttpClientUriTagFilterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.observation.web.client.RestTemplateObservationConfiguration", RestTemplateObservationConfiguration__BeanDefinitions.getRestTemplateObservationConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("observationRestTemplateCustomizer", RestTemplateObservationConfiguration__BeanDefinitions.getObservationRestTemplateCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration", HttpClientObservationsAutoConfiguration__BeanDefinitions.getHttpClientObservationsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration$MeterFilterConfiguration", WebMvcObservationAutoConfiguration__BeanDefinitions.MeterFilterConfiguration.getMeterFilterConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("metricsHttpServerUriTagFilter", WebMvcObservationAutoConfiguration__BeanDefinitions.MeterFilterConfiguration.getMetricsHttpServerUriTagFilterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration", WebMvcObservationAutoConfiguration__BeanDefinitions.getWebMvcObservationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("webMvcObservationFilter", WebMvcObservationAutoConfiguration__BeanDefinitions.getWebMvcObservationFilterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration", AopAutoConfiguration__BeanDefinitions.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration.getCglibAutoProxyConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.aop.config.internalAutoProxyCreator", AnnotationAwareAspectJAutoProxyCreator__BeanDefinitions.getInternalAutoProxyCreatorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration", AopAutoConfiguration__BeanDefinitions.AspectJAutoProxyingConfiguration.getAspectJAutoProxyingConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.aop.AopAutoConfiguration", AopAutoConfiguration__BeanDefinitions.getAopAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration", ConfigurationPropertiesAutoConfiguration__BeanDefinitions.getConfigurationPropertiesAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration", LifecycleAutoConfiguration__BeanDefinitions.getLifecycleAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("lifecycleProcessor", LifecycleAutoConfiguration__BeanDefinitions.getLifecycleProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties", LifecycleProperties__BeanDefinitions.getLifecyclePropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration", PersistenceExceptionTranslationAutoConfiguration__BeanDefinitions.getPersistenceExceptionTranslationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("persistenceExceptionTranslationPostProcessor", PersistenceExceptionTranslationAutoConfiguration__BeanDefinitions.getPersistenceExceptionTranslationPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration", JpaRepositoriesAutoConfiguration__BeanDefinitions.getJpaRepositoriesAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jpaSharedEM_entityManagerFactory", SharedEntityManagerCreator__BeanDefinitions.getJpaSharedEMentityManagerFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("emBeanDefinitionRegistrarPostProcessor", EntityManagerBeanDefinitionRegistrarPostProcessor__BeanDefinitions.getEmBeanDefinitionRegistrarPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("jpaMappingContext", JpaMetamodelMappingContext__BeanDefinitions.getJpaMappingContextBeanDefinition());
    beanFactory.registerBeanDefinition("jpaContext", DefaultJpaContext__BeanDefinitions.getJpaContextBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.data.jpa.util.JpaMetamodelCacheCleanup", JpaMetamodelCacheCleanup__BeanDefinitions.getJpaMetamodelCacheCleanupBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension", JpaEvaluationContextExtension__BeanDefinitions.getJpaEvaluationContextExtensionBeanDefinition());
    beanFactory.registerBeanDefinition("jpa.named-queries#0", PropertiesBasedNamedQueries__BeanDefinitions.getNamedqueriesBeanDefinition());
    beanFactory.registerBeanDefinition("jpa.PositionRepository.fragments#0", RepositoryComposition__BeanDefinitions.RepositoryFragments.getFragmentsBeanDefinition());
    beanFactory.registerBeanDefinition("positionRepository", PositionRepository__BeanDefinitions.getPositionRepositoryBeanDefinition());
    beanFactory.registerBeanDefinition("jpa.named-queries#1", PropertiesBasedNamedQueries__BeanDefinitions.getNamedqueriesBeanDefinition1());
    beanFactory.registerBeanDefinition("jpa.VehicleRepository.fragments#0", RepositoryComposition__BeanDefinitions.RepositoryFragments.getFragmentsBeanDefinition1());
    beanFactory.registerBeanDefinition("vehicleRepository", VehicleRepository__BeanDefinitions.getVehicleRepositoryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.data.web.config.ProjectingArgumentResolverRegistrar", ProjectingArgumentResolverRegistrar__BeanDefinitions.getProjectingArgumentResolverRegistrarBeanDefinition());
    beanFactory.registerBeanDefinition("projectingArgumentResolverBeanPostProcessor", ProjectingArgumentResolverRegistrar__BeanDefinitions.getProjectingArgumentResolverBeanPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.data.web.config.SpringDataWebConfiguration", SpringDataWebConfiguration__BeanDefinitions.getSpringDataWebConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("pageableResolver", SpringDataWebConfiguration__BeanDefinitions.getPageableResolverBeanDefinition());
    beanFactory.registerBeanDefinition("sortResolver", SpringDataWebConfiguration__BeanDefinitions.getSortResolverBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.data.web.config.SpringDataJacksonConfiguration", SpringDataJacksonConfiguration__BeanDefinitions.getSpringDataJacksonConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jacksonGeoModule", SpringDataJacksonConfiguration__BeanDefinitions.getJacksonGeoModuleBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration", SpringDataWebAutoConfiguration__BeanDefinitions.getSpringDataWebAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("pageableCustomizer", SpringDataWebAutoConfiguration__BeanDefinitions.getPageableCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("sortCustomizer", SpringDataWebAutoConfiguration__BeanDefinitions.getSortCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties", SpringDataWebProperties__BeanDefinitions.getSpringDataWebPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration", JdbcTemplateConfiguration__BeanDefinitions.getJdbcTemplateConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jdbcTemplate", JdbcTemplateConfiguration__BeanDefinitions.getJdbcTemplateBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration", NamedParameterJdbcTemplateConfiguration__BeanDefinitions.getNamedParameterJdbcTemplateConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("namedParameterJdbcTemplate", NamedParameterJdbcTemplateConfiguration__BeanDefinitions.getNamedParameterJdbcTemplateBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration", JdbcTemplateAutoConfiguration__BeanDefinitions.getJdbcTemplateAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties", JdbcProperties__BeanDefinitions.getJdbcPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor", DatabaseInitializationDependencyConfigurer__BeanDefinitions.DependsOnDatabaseInitializationPostProcessor.getDependsOnDatabaseInitializationPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration", DataSourceInitializationConfiguration__BeanDefinitions.getDataSourceInitializationConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("dataSourceScriptDatabaseInitializer", DataSourceInitializationConfiguration__BeanDefinitions.getDataSourceScriptDatabaseInitializerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration", SqlInitializationAutoConfiguration__BeanDefinitions.getSqlInitializationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties", SqlInitializationProperties__BeanDefinitions.getSqlInitializationPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration", DataSourceTransactionManagerAutoConfiguration__BeanDefinitions.JdbcTransactionManagerConfiguration.getJdbcTransactionManagerConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration", DataSourceTransactionManagerAutoConfiguration__BeanDefinitions.getDataSourceTransactionManagerAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration", ProxyTransactionManagementConfiguration__BeanDefinitions.getProxyTransactionManagementConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.transaction.config.internalTransactionAdvisor", ProxyTransactionManagementConfiguration__BeanDefinitions.getInternalTransactionAdvisorBeanDefinition());
    beanFactory.registerBeanDefinition("transactionAttributeSource", ProxyTransactionManagementConfiguration__BeanDefinitions.getTransactionAttributeSourceBeanDefinition());
    beanFactory.registerBeanDefinition("transactionInterceptor", ProxyTransactionManagementConfiguration__BeanDefinitions.getTransactionInterceptorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.transaction.config.internalTransactionalEventListenerFactory", AbstractTransactionManagementConfiguration__BeanDefinitions.getInternalTransactionalEventListenerFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration", TransactionAutoConfiguration__BeanDefinitions.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration.getCglibAutoProxyConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration", TransactionAutoConfiguration__BeanDefinitions.EnableTransactionManagementConfiguration.getEnableTransactionManagementConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration", TransactionAutoConfiguration__BeanDefinitions.TransactionTemplateConfiguration.getTransactionTemplateConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("transactionTemplate", TransactionAutoConfiguration__BeanDefinitions.TransactionTemplateConfiguration.getTransactionTemplateBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration", TransactionAutoConfiguration__BeanDefinitions.getTransactionAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("platformTransactionManagerCustomizers", TransactionAutoConfiguration__BeanDefinitions.getPlatformTransactionManagerCustomizersBeanDefinition());
    beanFactory.registerBeanDefinition("spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties", TransactionProperties__BeanDefinitions.getTransactionPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration", EmbeddedWebServerFactoryCustomizerAutoConfiguration__BeanDefinitions.TomcatWebServerFactoryCustomizerConfiguration.getTomcatWebServerFactoryCustomizerConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("tomcatWebServerFactoryCustomizer", EmbeddedWebServerFactoryCustomizerAutoConfiguration__BeanDefinitions.TomcatWebServerFactoryCustomizerConfiguration.getTomcatWebServerFactoryCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration", EmbeddedWebServerFactoryCustomizerAutoConfiguration__BeanDefinitions.getEmbeddedWebServerFactoryCustomizerAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration", HttpEncodingAutoConfiguration__BeanDefinitions.getHttpEncodingAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("characterEncodingFilter", HttpEncodingAutoConfiguration__BeanDefinitions.getCharacterEncodingFilterBeanDefinition());
    beanFactory.registerBeanDefinition("localeCharsetMappingsCustomizer", HttpEncodingAutoConfiguration__BeanDefinitions.getLocaleCharsetMappingsCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration", MultipartAutoConfiguration__BeanDefinitions.getMultipartAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("multipartConfigElement", MultipartAutoConfiguration__BeanDefinitions.getMultipartConfigElementBeanDefinition());
    beanFactory.registerBeanDefinition("multipartResolver", MultipartAutoConfiguration__BeanDefinitions.getMultipartResolverBeanDefinition());
    beanFactory.registerBeanDefinition("spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties", MultipartProperties__BeanDefinitions.getMultipartPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration", ConfigurationPropertiesRebinderAutoConfiguration__BeanDefinitions.getConfigurationPropertiesRebinderAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("configurationPropertiesBeans", ConfigurationPropertiesRebinderAutoConfiguration__BeanDefinitions.getConfigurationPropertiesBeansBeanDefinition());
    beanFactory.registerBeanDefinition("configurationPropertiesRebinder", ConfigurationPropertiesRebinderAutoConfiguration__BeanDefinitions.getConfigurationPropertiesRebinderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.autoconfigure.RefreshEndpointAutoConfiguration$RefreshEndpointConfiguration", RefreshEndpointAutoConfiguration__BeanDefinitions.RefreshEndpointConfiguration.getRefreshEndpointConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.autoconfigure.RestartEndpointWithoutIntegrationConfiguration", RestartEndpointWithoutIntegrationConfiguration__BeanDefinitions.getRestartEndpointWithoutIntegrationConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.autoconfigure.PauseResumeEndpointsConfiguration", PauseResumeEndpointsConfiguration__BeanDefinitions.getPauseResumeEndpointsConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.autoconfigure.RefreshEndpointAutoConfiguration", RefreshEndpointAutoConfiguration__BeanDefinitions.getRefreshEndpointAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("refreshScopeHealthIndicator", RefreshEndpointAutoConfiguration__BeanDefinitions.getRefreshScopeHealthIndicatorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.circuitbreaker.resilience4j.Resilience4JAutoConfiguration$ObservationRegistryCustomizerResilience4jCustomizer", Resilience4JAutoConfiguration__BeanDefinitions.ObservationRegistryCustomizerResilience4jCustomizer.getObservationRegistryCustomizerResiliencejCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.circuitbreaker.resilience4j.Resilience4JAutoConfiguration$MicrometerResilience4JGroupCustomizerConfiguration", Resilience4JAutoConfiguration__BeanDefinitions.MicrometerResilience4JGroupCustomizerConfiguration.getMicrometerResilienceJGroupCustomizerConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("resilience4JMeterFilter", Resilience4JAutoConfiguration__BeanDefinitions.MicrometerResilience4JGroupCustomizerConfiguration.getResilienceJMeterFilterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.circuitbreaker.resilience4j.Resilience4JAutoConfiguration", Resilience4JAutoConfiguration__BeanDefinitions.getResilienceJAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("resilience4jCircuitBreakerFactory", Resilience4JAutoConfiguration__BeanDefinitions.getResiliencejCircuitBreakerFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("spring.cloud.circuitbreaker.resilience4j-org.springframework.cloud.circuitbreaker.resilience4j.Resilience4JConfigurationProperties", Resilience4JConfigurationProperties__BeanDefinitions.getResilienceJConfigurationPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration", CompositeDiscoveryClientAutoConfiguration__BeanDefinitions.getCompositeDiscoveryClientAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("compositeDiscoveryClient", CompositeDiscoveryClientAutoConfiguration__BeanDefinitions.getCompositeDiscoveryClientBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration", SimpleDiscoveryClientAutoConfiguration__BeanDefinitions.getSimpleDiscoveryClientAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("simpleDiscoveryProperties", SimpleDiscoveryClientAutoConfiguration__BeanDefinitions.getSimpleDiscoveryPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("simpleDiscoveryClient", SimpleDiscoveryClientAutoConfiguration__BeanDefinitions.getSimpleDiscoveryClientBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration", DiscoveryClientOptionalArgsConfiguration__BeanDefinitions.getDiscoveryClientOptionalArgsConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("tlsProperties", DiscoveryClientOptionalArgsConfiguration__BeanDefinitions.getTlsPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("restTemplateDiscoveryClientOptionalArgs", DiscoveryClientOptionalArgsConfiguration__BeanDefinitions.getRestTemplateDiscoveryClientOptionalArgsBeanDefinition());
    beanFactory.registerBeanDefinition("restTemplateTransportClientFactories", DiscoveryClientOptionalArgsConfiguration__BeanDefinitions.getRestTemplateTransportClientFactoriesBeanDefinition());
    beanFactory.registerBeanDefinition("defaultEurekaClientHttpRequestFactorySupplier", DiscoveryClientOptionalArgsConfiguration__BeanDefinitions.getDefaultEurekaClientHttpRequestFactorySupplierBeanDefinition());
    beanFactory.registerBeanDefinition("eureka.client.rest-template-timeout-org.springframework.cloud.netflix.eureka.RestTemplateTimeoutProperties", RestTemplateTimeoutProperties__BeanDefinitions.getRestTemplateTimeoutPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration$EurekaClientConfigurationRefresher", EurekaDiscoveryClientConfiguration__BeanDefinitions.EurekaClientConfigurationRefresher.getEurekaClientConfigurationRefresherBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration", EurekaDiscoveryClientConfiguration__BeanDefinitions.getEurekaDiscoveryClientConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("discoveryClient", EurekaDiscoveryClientConfiguration__BeanDefinitions.getDiscoveryClientBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationConfiguration", AutoServiceRegistrationConfiguration__BeanDefinitions.getAutoServiceRegistrationConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.cloud.service-registry.auto-registration-org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties", AutoServiceRegistrationProperties__BeanDefinitions.getAutoServiceRegistrationPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationAutoConfiguration", AutoServiceRegistrationAutoConfiguration__BeanDefinitions.getAutoServiceRegistrationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$EurekaHealthIndicatorConfiguration", EurekaClientAutoConfiguration__BeanDefinitions.EurekaHealthIndicatorConfiguration.getEurekaHealthIndicatorConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("eurekaHealthIndicator", EurekaClientAutoConfiguration__BeanDefinitions.EurekaHealthIndicatorConfiguration.getEurekaHealthIndicatorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration", EurekaClientAutoConfiguration__BeanDefinitions.RefreshableEurekaClientConfiguration.getRefreshableEurekaClientConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("scopedTarget.eurekaClient", EurekaClientAutoConfiguration__BeanDefinitions.RefreshableEurekaClientConfiguration.getEurekaClientBeanDefinition());
    beanFactory.registerBeanDefinition("eurekaClient", getEurekaClientBeanDefinition());
    beanFactory.registerBeanDefinition("scopedTarget.eurekaApplicationInfoManager", EurekaClientAutoConfiguration__BeanDefinitions.RefreshableEurekaClientConfiguration.getEurekaApplicationInfoManagerBeanDefinition());
    beanFactory.registerBeanDefinition("eurekaApplicationInfoManager", getEurekaApplicationInfoManagerBeanDefinition());
    beanFactory.registerBeanDefinition("scopedTarget.eurekaRegistration", EurekaClientAutoConfiguration__BeanDefinitions.RefreshableEurekaClientConfiguration.getEurekaRegistrationBeanDefinition());
    beanFactory.registerBeanDefinition("eurekaRegistration", getEurekaRegistrationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration", EurekaClientAutoConfiguration__BeanDefinitions.getEurekaClientAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("eurekaFeature", EurekaClientAutoConfiguration__BeanDefinitions.getEurekaFeatureBeanDefinition());
    beanFactory.registerBeanDefinition("eurekaClientConfigBean", EurekaClientAutoConfiguration__BeanDefinitions.getEurekaClientConfigBeanBeanDefinition());
    beanFactory.registerBeanDefinition("serviceManagementMetadataProvider", EurekaClientAutoConfiguration__BeanDefinitions.getServiceManagementMetadataProviderBeanDefinition());
    beanFactory.registerBeanDefinition("eurekaInstanceConfigBean", EurekaClientAutoConfiguration__BeanDefinitions.getEurekaInstanceConfigBeanBeanDefinition());
    beanFactory.registerBeanDefinition("eurekaServiceRegistry", EurekaClientAutoConfiguration__BeanDefinitions.getEurekaServiceRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("eurekaAutoServiceRegistration", EurekaClientAutoConfiguration__BeanDefinitions.getEurekaAutoServiceRegistrationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.client.CommonsClientAutoConfiguration$ActuatorConfiguration", CommonsClientAutoConfiguration__BeanDefinitions.ActuatorConfiguration.getActuatorConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.client.CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration", CommonsClientAutoConfiguration__BeanDefinitions.DiscoveryLoadBalancerConfiguration.getDiscoveryLoadBalancerConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("discoveryClientHealthIndicator", CommonsClientAutoConfiguration__BeanDefinitions.DiscoveryLoadBalancerConfiguration.getDiscoveryClientHealthIndicatorBeanDefinition());
    beanFactory.registerBeanDefinition("discoveryCompositeHealthContributor", CommonsClientAutoConfiguration__BeanDefinitions.DiscoveryLoadBalancerConfiguration.getDiscoveryCompositeHealthContributorBeanDefinition());
    beanFactory.registerBeanDefinition("springCloudCommonsFeatures", CommonsClientAutoConfiguration__BeanDefinitions.DiscoveryLoadBalancerConfiguration.getSpringCloudCommonsFeaturesBeanDefinition());
    beanFactory.registerBeanDefinition("spring.cloud.discovery.client.health-indicator-org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicatorProperties", DiscoveryClientHealthIndicatorProperties__BeanDefinitions.getDiscoveryClientHealthIndicatorPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.client.CommonsClientAutoConfiguration", CommonsClientAutoConfiguration__BeanDefinitions.getCommonsClientAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.client.ReactiveCommonsClientAutoConfiguration", ReactiveCommonsClientAutoConfiguration__BeanDefinitions.getReactiveCommonsClientAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration", LoadBalancerAutoConfiguration__BeanDefinitions.getLoadBalancerAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("zoneConfig", LoadBalancerAutoConfiguration__BeanDefinitions.getZoneConfigBeanDefinition());
    beanFactory.registerBeanDefinition("loadBalancerClientFactory", LoadBalancerAutoConfiguration__BeanDefinitions.getLoadBalancerClientFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("loadBalancerEagerContextInitializer", LoadBalancerAutoConfiguration__BeanDefinitions.getLoadBalancerEagerContextInitializerBeanDefinition());
    beanFactory.registerBeanDefinition("default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification", LoadBalancerClientSpecification__BeanDefinitions.getLoadBalancerClientSpecificationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.cloud.loadbalancer.eager-load-org.springframework.cloud.client.loadbalancer.LoadBalancerEagerLoadProperties", LoadBalancerEagerLoadProperties__BeanDefinitions.getLoadBalancerEagerLoadPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties", LoadBalancerClientsProperties__BeanDefinitions.getLoadBalancerClientsPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration", BlockingLoadBalancerClientAutoConfiguration__BeanDefinitions.getBlockingLoadBalancerClientAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("blockingLoadBalancerClient", BlockingLoadBalancerClientAutoConfiguration__BeanDefinitions.getBlockingLoadBalancerClientBeanDefinition());
    beanFactory.registerBeanDefinition("loadBalancerServiceInstanceCookieTransformer", BlockingLoadBalancerClientAutoConfiguration__BeanDefinitions.getLoadBalancerServiceInstanceCookieTransformerBeanDefinition());
    beanFactory.registerBeanDefinition("xForwarderHeadersTransformer", BlockingLoadBalancerClientAutoConfiguration__BeanDefinitions.getXForwarderHeadersTransformerBeanDefinition());
    beanFactory.registerBeanDefinition("default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification", LoadBalancerClientSpecification__BeanDefinitions.getLoadBalancerClientSpecificationBeanDefinition1());
    beanFactory.registerBeanDefinition("org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig", org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration__BeanDefinitions.LoadBalancerInterceptorConfig.getLoadBalancerInterceptorConfigBeanDefinition());
    beanFactory.registerBeanDefinition("loadBalancerInterceptor", org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration__BeanDefinitions.LoadBalancerInterceptorConfig.getLoadBalancerInterceptorBeanDefinition());
    beanFactory.registerBeanDefinition("restTemplateCustomizer", org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration__BeanDefinitions.LoadBalancerInterceptorConfig.getRestTemplateCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration", org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration__BeanDefinitions.getLoadBalancerAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("loadBalancedRestTemplateInitializerDeprecated", org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration__BeanDefinitions.getLoadBalancedRestTemplateInitializerDeprecatedBeanDefinition());
    beanFactory.registerBeanDefinition("loadBalancerRequestFactory", org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration__BeanDefinitions.getLoadBalancerRequestFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration", LoadBalancerDefaultMappingsProviderAutoConfiguration__BeanDefinitions.getLoadBalancerDefaultMappingsProviderAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("loadBalancerClientsDefaultsMappingsProvider", LoadBalancerDefaultMappingsProviderAutoConfiguration__BeanDefinitions.getLoadBalancerClientsDefaultsMappingsProviderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration$ServiceRegistryEndpointConfiguration", ServiceRegistryAutoConfiguration__BeanDefinitions.ServiceRegistryEndpointConfiguration.getServiceRegistryEndpointConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration", ServiceRegistryAutoConfiguration__BeanDefinitions.getServiceRegistryAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration", CommonsConfigAutoConfiguration__BeanDefinitions.getCommonsConfigAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("defaultsBindHandlerAdvisor", CommonsConfigAutoConfiguration__BeanDefinitions.getDefaultsBindHandlerAdvisorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.commons.security.ResourceServerTokenRelayAutoConfiguration$ResourceServerTokenRelayRegistrationAutoConfiguration", ResourceServerTokenRelayAutoConfiguration__BeanDefinitions.ResourceServerTokenRelayRegistrationAutoConfiguration.getResourceServerTokenRelayRegistrationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.commons.security.ResourceServerTokenRelayAutoConfiguration", ResourceServerTokenRelayAutoConfiguration__BeanDefinitions.getResourceServerTokenRelayAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.commons.util.UtilAutoConfiguration", UtilAutoConfiguration__BeanDefinitions.getUtilAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("inetUtilsProperties", UtilAutoConfiguration__BeanDefinitions.getInetUtilsPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("inetUtils", UtilAutoConfiguration__BeanDefinitions.getInetUtilsBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.configuration.CompatibilityVerifierAutoConfiguration", CompatibilityVerifierAutoConfiguration__BeanDefinitions.getCompatibilityVerifierAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("compositeCompatibilityVerifier", CompatibilityVerifierAutoConfiguration__BeanDefinitions.getCompositeCompatibilityVerifierBeanDefinition());
    beanFactory.registerBeanDefinition("springBootVersionVerifier", CompatibilityVerifierAutoConfiguration__BeanDefinitions.getSpringBootVersionVerifierBeanDefinition());
    beanFactory.registerBeanDefinition("sleuthPresentVerifier", CompatibilityVerifierAutoConfiguration__BeanDefinitions.getSleuthPresentVerifierBeanDefinition());
    beanFactory.registerBeanDefinition("spring.cloud.compatibility-verifier-org.springframework.cloud.configuration.CompatibilityVerifierProperties", CompatibilityVerifierProperties__BeanDefinitions.getCompatibilityVerifierPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$DefaultLoadBalancerCacheManagerConfiguration", LoadBalancerCacheAutoConfiguration__BeanDefinitions.DefaultLoadBalancerCacheManagerConfiguration.getDefaultLoadBalancerCacheManagerConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("defaultLoadBalancerCacheManager", LoadBalancerCacheAutoConfiguration__BeanDefinitions.DefaultLoadBalancerCacheManagerConfiguration.getDefaultLoadBalancerCacheManagerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCacheManagerWarnConfiguration", LoadBalancerCacheAutoConfiguration__BeanDefinitions.LoadBalancerCacheManagerWarnConfiguration.getLoadBalancerCacheManagerWarnConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("caffeineWarnLogger", LoadBalancerCacheAutoConfiguration__BeanDefinitions.LoadBalancerCacheManagerWarnConfiguration.getCaffeineWarnLoggerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration", LoadBalancerCacheAutoConfiguration__BeanDefinitions.getLoadBalancerCacheAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.cloud.loadbalancer.cache-org.springframework.cloud.loadbalancer.cache.LoadBalancerCacheProperties", LoadBalancerCacheProperties__BeanDefinitions.getLoadBalancerCachePropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration", LoadBalancerEurekaAutoConfiguration__BeanDefinitions.getLoadBalancerEurekaAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("eurekaLoadBalancerProperties", LoadBalancerEurekaAutoConfiguration__BeanDefinitions.getEurekaLoadBalancerPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification", LoadBalancerClientSpecification__BeanDefinitions.getLoadBalancerClientSpecificationBeanDefinition2());
    beanFactory.registerBeanDefinition("org.springframework.cloud.openfeign.loadbalancer.DefaultFeignLoadBalancerConfiguration", DefaultFeignLoadBalancerConfiguration__BeanDefinitions.getDefaultFeignLoadBalancerConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("feignClient", DefaultFeignLoadBalancerConfiguration__BeanDefinitions.getFeignClientBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.openfeign.loadbalancer.FeignLoadBalancerAutoConfiguration", FeignLoadBalancerAutoConfiguration__BeanDefinitions.getFeignLoadBalancerAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("xForwarderHeadersFeignTransformer", FeignLoadBalancerAutoConfiguration__BeanDefinitions.getXForwarderHeadersFeignTransformerBeanDefinition());
    beanFactory.registerBeanDefinition("spring.cloud.openfeign.httpclient-org.springframework.cloud.openfeign.support.FeignHttpClientProperties", FeignHttpClientProperties__BeanDefinitions.getFeignHttpClientPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.openfeign.FeignAutoConfiguration$DefaultFeignTargeterConfiguration", FeignAutoConfiguration__BeanDefinitions.DefaultFeignTargeterConfiguration.getDefaultFeignTargeterConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("feignTargeter", FeignAutoConfiguration__BeanDefinitions.DefaultFeignTargeterConfiguration.getFeignTargeterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.openfeign.FeignAutoConfiguration$FeignJacksonConfiguration", FeignAutoConfiguration__BeanDefinitions.FeignJacksonConfiguration.getFeignJacksonConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("pageJacksonModule", FeignAutoConfiguration__BeanDefinitions.FeignJacksonConfiguration.getPageJacksonModuleBeanDefinition());
    beanFactory.registerBeanDefinition("sortModule", FeignAutoConfiguration__BeanDefinitions.FeignJacksonConfiguration.getSortModuleBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.openfeign.FeignAutoConfiguration", FeignAutoConfiguration__BeanDefinitions.getFeignAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("feignFeature", FeignAutoConfiguration__BeanDefinitions.getFeignFeatureBeanDefinition());
    beanFactory.registerBeanDefinition("feignContext", FeignAutoConfiguration__BeanDefinitions.getFeignContextBeanDefinition());
    beanFactory.registerBeanDefinition("spring.cloud.openfeign.encoder-org.springframework.cloud.openfeign.support.FeignEncoderProperties", FeignEncoderProperties__BeanDefinitions.getFeignEncoderPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("spring.cloud.openfeign.client-org.springframework.cloud.openfeign.FeignClientProperties", FeignClientProperties__BeanDefinitions.getFeignClientPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration", ServletEndpointManagementContextConfiguration__BeanDefinitions.WebMvcServletEndpointManagementContextConfiguration.getWebMvcServletEndpointManagementContextConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("servletEndpointRegistrar", ServletEndpointManagementContextConfiguration__BeanDefinitions.WebMvcServletEndpointManagementContextConfiguration.getServletEndpointRegistrarBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration", ServletEndpointManagementContextConfiguration__BeanDefinitions.getServletEndpointManagementContextConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("servletExposeExcludePropertyEndpointFilter", ServletEndpointManagementContextConfiguration__BeanDefinitions.getServletExposeExcludePropertyEndpointFilterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration", WebMvcEndpointManagementContextConfiguration__BeanDefinitions.getWebMvcEndpointManagementContextConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("webEndpointServletHandlerMapping", WebMvcEndpointManagementContextConfiguration__BeanDefinitions.getWebEndpointServletHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("controllerEndpointHandlerMapping", WebMvcEndpointManagementContextConfiguration__BeanDefinitions.getControllerEndpointHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("endpointObjectMapperWebMvcConfigurer", WebMvcEndpointManagementContextConfiguration__BeanDefinitions.getEndpointObjectMapperWebMvcConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("management.endpoints.web.cors-org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties", CorsEndpointProperties__BeanDefinitions.getCorsEndpointPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration", ManagementContextAutoConfiguration__BeanDefinitions.SameManagementContextConfiguration.EnableSameManagementContextConfiguration.getEnableSameManagementContextConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration", ManagementContextAutoConfiguration__BeanDefinitions.SameManagementContextConfiguration.getSameManagementContextConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration", ManagementContextAutoConfiguration__BeanDefinitions.getManagementContextAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("management.server-org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties", ManagementServerProperties__BeanDefinitions.getManagementServerPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("jpaSharedEM_AWC_entityManagerFactory", SharedEntityManagerCreator__BeanDefinitions.getJpaSharedEMAWCentityManagerFactoryBeanDefinition());
  }

  /**
   * Register the aliases.
   */
  public void registerAliases(DefaultListableBeanFactory beanFactory) {
    beanFactory.registerAlias("applicationTaskExecutor", "taskExecutor");
  }
}
