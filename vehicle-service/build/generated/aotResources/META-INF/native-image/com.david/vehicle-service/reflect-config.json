[
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterMetricsAutoConfiguration$$SpringCGLIB$$FastClass$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterMetricsAutoConfiguration$$SpringCGLIB$$FastClass$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "io.swagger.v3.oas.models.media.Content",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.interceptor.TransactionInterceptor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "stringHttpMessageConverter",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmHeapPressureMetrics",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.openfeign.FeignClientProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setDefaultConfig",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDefaultToProperties",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getConfig",
        "parameterTypes": [ ]
      },
      {
        "name": "setDecodeSlash",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isDefaultToProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "isDecodeSlash",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultConfig",
        "parameterTypes": [ ]
      },
      {
        "name": "setConfig",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.openfeign.support.FeignHttpClientProperties$OkHttp",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getReadTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getProtocols",
        "parameterTypes": [ ]
      },
      {
        "name": "setProtocols",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setReadTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "discoveryClientHealthIndicator",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicatorProperties"
        ]
      },
      {
        "name": "springCloudCommonsFeatures",
        "parameterTypes": [ ]
      },
      {
        "name": "discoveryCompositeHealthContributor",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Build",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocation",
        "parameterTypes": [ ]
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "org.springframework.core.io.Resource"
        ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "eurekaLoadBalancerProperties",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.context.environment.EnvironmentManager",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslBundleProperties$Key",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setAlias",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAlias",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.expose.IncludeExcludeEndpointFilter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.LifecycleProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setTimeoutPerShutdownPhase",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getTimeoutPerShutdownPhase",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.zaxxer.hikari.HikariDataSource",
    "queryAllDeclaredMethods": true,
    "allPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getHikariPoolMXBean",
        "parameterTypes": [ ]
      },
      {
        "name": "isClosed",
        "parameterTypes": [ ]
      },
      {
        "name": "setLoginTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getConnection",
        "parameterTypes": [ ]
      },
      {
        "name": "getParentLogger",
        "parameterTypes": [ ]
      },
      {
        "name": "getLogWriter",
        "parameterTypes": [ ]
      },
      {
        "name": "getHikariConfigMXBean",
        "parameterTypes": [ ]
      },
      {
        "name": "getLoginTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "close",
        "parameterTypes": [ ]
      },
      {
        "name": "setLogWriter",
        "parameterTypes": [
          "java.io.PrintWriter"
        ]
      },
      {
        "name": "isRunning",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties$Git",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setMode",
        "parameterTypes": [
          "org.springframework.boot.actuate.info.InfoPropertiesInfoContributor$Mode"
        ]
      },
      {
        "name": "getMode",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.core.io.InputStreamSource[]",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.PingHealthIndicator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.core.service.RequestBodyService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.annotation.Isolation",
    "allDeclaredFields": true
  },
  {
    "name": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterAutoConfiguration$RateLimiterEndpointAutoConfiguration$$SpringCGLIB$$FastClass$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springdoc.webmvc.ui.SwaggerResourceResolver",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springdoc.core.providers.SpringDataWebPropertiesProvider",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterAutoConfiguration$RateLimiterEndpointAutoConfiguration$$SpringCGLIB$$FastClass$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryBeanCreationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.transaction.TransactionDefinition",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.config.DelegatingApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "java.lang.ModuleLayer",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.swagger.v3.oas.models.media.PasswordSchema",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.headers.Header",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.context.scope.refresh.RefreshScope",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.core.configuration.SpringDocSortConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "sortOpenAPIConverter",
        "parameterTypes": [
          "org.springdoc.core.providers.ObjectMapperProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.loadbalancer.cache.LoadBalancerCacheManager",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.info.License",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties"
        ]
      },
      {
        "name": "multipartResolver",
        "parameterTypes": [ ]
      },
      {
        "name": "multipartConfigElement",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.properties.SpringDocConfigProperties$ModelConverters$PolymorphicConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterConfigurationOnMissingBean$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.IncompatibleConfigurationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "transactionTemplate",
        "parameterTypes": [
          "org.springframework.transaction.PlatformTransactionManager"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$HikariDataSourceMetricsConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "hikariDataSourceMeterBinder",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.common.timelimiter.configuration.CommonTimeLimiterConfigurationProperties",
    "methods": [
      {
        "name": "getConfigs",
        "parameterTypes": [ ]
      },
      {
        "name": "getInstances",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.springboot3.fallback.autoconfigure.FallbackConfigurationOnMissingBean$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.common.ratelimiter.configuration.CommonRateLimiterConfigurationProperties$InstanceProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getLimitRefreshPeriod",
        "parameterTypes": [ ]
      },
      {
        "name": "setLimitRefreshPeriod",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getLimitForPeriod",
        "parameterTypes": [ ]
      },
      {
        "name": "getEventConsumerBufferSize",
        "parameterTypes": [ ]
      },
      {
        "name": "setBaseConfig",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTimeoutDuration",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getTimeoutDuration",
        "parameterTypes": [ ]
      },
      {
        "name": "getSubscribeForEvents",
        "parameterTypes": [ ]
      },
      {
        "name": "getBaseConfig",
        "parameterTypes": [ ]
      },
      {
        "name": "setRegisterHealthIndicator",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setLimitForPeriod",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setAllowHealthIndicatorToFail",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getRegisterHealthIndicator",
        "parameterTypes": [ ]
      },
      {
        "name": "setWritableStackTraceEnabled",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getWritableStackTraceEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setSubscribeForEvents",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setEventConsumerBufferSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getAllowHealthIndicatorToFail",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"
        ]
      },
      {
        "name": "endpointMediaTypes",
        "parameterTypes": [ ]
      },
      {
        "name": "controllerExposeExcludePropertyEndpointFilter",
        "parameterTypes": [ ]
      },
      {
        "name": "webEndpointPathMapper",
        "parameterTypes": [ ]
      },
      {
        "name": "webEndpointDiscoverer",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper",
          "org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "controllerEndpointDiscoverer",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "pathMappedEndpoints",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "webExposeExcludePropertyEndpointFilter",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.consumer.EventConsumerRegistry",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.github.resilience4j.common.retry.configuration.CommonRetryConfigurationProperties$InstanceProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getRetryExceptionPredicate",
        "parameterTypes": [ ]
      },
      {
        "name": "setRandomizedWaitFactor",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setExponentialBackoffMultiplier",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setMaxAttempts",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setEnableRandomizedWait",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setFailAfterMaxAttempts",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getExponentialBackoffMultiplier",
        "parameterTypes": [ ]
      },
      {
        "name": "getIgnoreExceptions",
        "parameterTypes": [ ]
      },
      {
        "name": "getConsumeResultBeforeRetryAttempt",
        "parameterTypes": [ ]
      },
      {
        "name": "setConsumeResultBeforeRetryAttempt",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getEnableRandomizedWait",
        "parameterTypes": [ ]
      },
      {
        "name": "setResultPredicate",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getResultPredicate",
        "parameterTypes": [ ]
      },
      {
        "name": "setExponentialMaxWaitDuration",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getRetryExceptions",
        "parameterTypes": [ ]
      },
      {
        "name": "setIntervalBiFunction",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getMaxAttempts",
        "parameterTypes": [ ]
      },
      {
        "name": "getEventConsumerBufferSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getBaseConfig",
        "parameterTypes": [ ]
      },
      {
        "name": "setIgnoreExceptions",
        "parameterTypes": [
          "java.lang.Class[]"
        ]
      },
      {
        "name": "getExponentialMaxWaitDuration",
        "parameterTypes": [ ]
      },
      {
        "name": "getFailAfterMaxAttempts",
        "parameterTypes": [ ]
      },
      {
        "name": "setBaseConfig",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEnableExponentialBackoff",
        "parameterTypes": [ ]
      },
      {
        "name": "setWaitDuration",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setEnableExponentialBackoff",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setRetryExceptions",
        "parameterTypes": [
          "java.lang.Class[]"
        ]
      },
      {
        "name": "getIntervalBiFunction",
        "parameterTypes": [ ]
      },
      {
        "name": "setEventConsumerBufferSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setRetryExceptionPredicate",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getWaitDuration",
        "parameterTypes": [ ]
      },
      {
        "name": "getRandomizedWaitFactor",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.core.properties.SpringDocConfigProperties$Groups",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "endpointObjectMapperWebMvcConfigurer",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.jackson.EndpointObjectMapper"
        ]
      },
      {
        "name": "controllerEndpointHandlerMapping",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier",
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"
        ]
      },
      {
        "name": "webEndpointServletHandlerMapping",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier",
          "org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier",
          "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier",
          "org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "com.netflix.discovery.TimedSupervisorTask",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.circuitbreaker.resilience4j.Resilience4JAutoConfiguration$MicrometerResilience4JGroupCustomizerConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "resilience4JMeterFilter",
        "parameterTypes": [
          "org.springframework.cloud.circuitbreaker.resilience4j.Resilience4JConfigurationProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "gsonBuilder",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "standardGsonBuilderCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.gson.GsonProperties"
        ]
      },
      {
        "name": "gson",
        "parameterTypes": [
          "com.google.gson.GsonBuilder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "applicationAvailability",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.jackson.JsonComponentModule",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.List",
          "org.springframework.boot.context.config.ConfigDataProperties$Activate"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.JdbcIndexedSessionRepositoryDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springdoc.core.converters.WebFluxSupportConverter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.openfeign.FeignAutoConfiguration$FeignJacksonConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "sortModule",
        "parameterTypes": [ ]
      },
      {
        "name": "pageJacksonModule",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.Module",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Accesslog",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setRotate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDir",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSuffix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isRotate",
        "parameterTypes": [ ]
      },
      {
        "name": "getPattern",
        "parameterTypes": [ ]
      },
      {
        "name": "setPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "getSuffix",
        "parameterTypes": [ ]
      },
      {
        "name": "getDir",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.LoggerContext"
  },
  {
    "name": "org.springframework.cloud.client.DefaultServiceInstance",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getMetadata",
        "parameterTypes": [ ]
      },
      {
        "name": "setHost",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSecure",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setInstanceId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isSecure",
        "parameterTypes": [ ]
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getServiceId",
        "parameterTypes": [ ]
      },
      {
        "name": "setServiceId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUri",
        "parameterTypes": [ ]
      },
      {
        "name": "getHost",
        "parameterTypes": [ ]
      },
      {
        "name": "setUri",
        "parameterTypes": [
          "java.net.URI"
        ]
      },
      {
        "name": "getInstanceId",
        "parameterTypes": [ ]
      },
      {
        "name": "getPort",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getLogging",
        "parameterTypes": [ ]
      },
      {
        "name": "setShowDetails",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.Show"
        ]
      },
      {
        "name": "getShowDetails",
        "parameterTypes": [ ]
      },
      {
        "name": "getGroup",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslProperties$Bundles",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getJks",
        "parameterTypes": [ ]
      },
      {
        "name": "getPem",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.http.codec.support.DefaultClientCodecConfigurer",
    "condition": {
      "typeReachable": "org.springframework.http.codec.CodecConfigurerFactory"
    },
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.web.embedded.tomcat.TomcatProtocolHandlerCustomizer[]"
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$PersistenceManagedTypesConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "java.util.Properties",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setFailFast",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRegisterManagement",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isFailFast",
        "parameterTypes": [ ]
      },
      {
        "name": "isRegisterManagement",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setTargetBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.cloud.context.scope.GenericScope"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.Clock",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springdoc.webmvc.core.service.RequestService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties$Pushgateway",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setPushRate",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getBaseUrl",
        "parameterTypes": [ ]
      },
      {
        "name": "getJob",
        "parameterTypes": [ ]
      },
      {
        "name": "getGroupingKey",
        "parameterTypes": [ ]
      },
      {
        "name": "setShutdownOperation",
        "parameterTypes": [
          "org.springframework.boot.actuate.metrics.export.prometheus.PrometheusPushGatewayManager$ShutdownOperation"
        ]
      },
      {
        "name": "getUsername",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getPushRate",
        "parameterTypes": [ ]
      },
      {
        "name": "getShutdownOperation",
        "parameterTypes": [ ]
      },
      {
        "name": "setJob",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGroupingKey",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "setBaseUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.HttpHeaders",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "setUpgrade",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAccept",
        "parameterTypes": [ ]
      },
      {
        "name": "getAccessControlAllowMethods",
        "parameterTypes": [ ]
      },
      {
        "name": "setAll",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setAcceptLanguage",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAccessControlMaxAge",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setDate",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setLastModified",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setCacheControl",
        "parameterTypes": [
          "org.springframework.http.CacheControl"
        ]
      },
      {
        "name": "getAccessControlAllowOrigin",
        "parameterTypes": [ ]
      },
      {
        "name": "setLastModified",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setETag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getCacheControl",
        "parameterTypes": [ ]
      },
      {
        "name": "setAccept",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getAccessControlAllowHeaders",
        "parameterTypes": [ ]
      },
      {
        "name": "setCacheControl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getIfUnmodifiedSince",
        "parameterTypes": [ ]
      },
      {
        "name": "setIfUnmodifiedSince",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setContentLength",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setConnection",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIfModifiedSince",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "getContentLength",
        "parameterTypes": [ ]
      },
      {
        "name": "setAccessControlExposeHeaders",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getAccessControlRequestHeaders",
        "parameterTypes": [ ]
      },
      {
        "name": "setContentDisposition",
        "parameterTypes": [
          "org.springframework.http.ContentDisposition"
        ]
      },
      {
        "name": "setDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setAccessControlRequestMethod",
        "parameterTypes": [
          "org.springframework.http.HttpMethod"
        ]
      },
      {
        "name": "setAccessControlAllowMethods",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAccessControlRequestHeaders",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setIfModifiedSince",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setPragma",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getETag",
        "parameterTypes": [ ]
      },
      {
        "name": "setIfUnmodifiedSince",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getAcceptPatch",
        "parameterTypes": [ ]
      },
      {
        "name": "getAccessControlRequestMethod",
        "parameterTypes": [ ]
      },
      {
        "name": "getAllow",
        "parameterTypes": [ ]
      },
      {
        "name": "setContentType",
        "parameterTypes": [
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "setAcceptPatch",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getIfMatch",
        "parameterTypes": [ ]
      },
      {
        "name": "getAcceptCharset",
        "parameterTypes": [ ]
      },
      {
        "name": "getLastModified",
        "parameterTypes": [ ]
      },
      {
        "name": "getContentType",
        "parameterTypes": [ ]
      },
      {
        "name": "setDate",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setConnection",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getDate",
        "parameterTypes": [ ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "java.net.URI"
        ]
      },
      {
        "name": "setExpires",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "getContentLanguage",
        "parameterTypes": [ ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": [ ]
      },
      {
        "name": "setAllow",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setVary",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAccessControlAllowOrigin",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIfMatch",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setIfUnmodifiedSince",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "setIfNoneMatch",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOrigin",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIfNoneMatch",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setHost",
        "parameterTypes": [
          "java.net.InetSocketAddress"
        ]
      },
      {
        "name": "getAccessControlMaxAge",
        "parameterTypes": [ ]
      },
      {
        "name": "getAcceptLanguageAsLocales",
        "parameterTypes": [ ]
      },
      {
        "name": "setAcceptCharset",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getAccessControlExposeHeaders",
        "parameterTypes": [ ]
      },
      {
        "name": "getRange",
        "parameterTypes": [ ]
      },
      {
        "name": "getAccessControlAllowCredentials",
        "parameterTypes": [ ]
      },
      {
        "name": "setBasicAuth",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastModified",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setIfModifiedSince",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "getIfModifiedSince",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnection",
        "parameterTypes": [ ]
      },
      {
        "name": "getAcceptLanguage",
        "parameterTypes": [ ]
      },
      {
        "name": "setAccessControlAllowCredentials",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getPragma",
        "parameterTypes": [ ]
      },
      {
        "name": "setAccessControlAllowHeaders",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getVary",
        "parameterTypes": [ ]
      },
      {
        "name": "getHost",
        "parameterTypes": [ ]
      },
      {
        "name": "setIfMatch",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExpires",
        "parameterTypes": [
          "java.time.ZonedDateTime"
        ]
      },
      {
        "name": "getUpgrade",
        "parameterTypes": [ ]
      },
      {
        "name": "getIfNoneMatch",
        "parameterTypes": [ ]
      },
      {
        "name": "setAccessControlMaxAge",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setContentLanguage",
        "parameterTypes": [
          "java.util.Locale"
        ]
      },
      {
        "name": "setBearerAuth",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExpires",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getExpires",
        "parameterTypes": [ ]
      },
      {
        "name": "getContentDisposition",
        "parameterTypes": [ ]
      },
      {
        "name": "setAcceptLanguageAsLocales",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getOrigin",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocation",
        "parameterTypes": [ ]
      },
      {
        "name": "setRange",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.support.SimpleJpaRepository",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getPageable",
        "parameterTypes": [ ]
      },
      {
        "name": "getSort",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.client.RestTemplateBuilder",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.client.HttpComponentsClientHttpRequestFactory",
    "methods": [
      {
        "name": "setBufferRequestBody",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setReadTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setConnectTimeout",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.FailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCacheManagerWarnConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "caffeineWarnLogger",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.ClearCachesApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterAutoConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.info.ProjectInfoProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataLocationResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.commons.util.InetUtils",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.jdbc.datasource.SimpleDriverDataSource",
    "allPublicConstructors": true
  },
  {
    "name": "org.springdoc.core.properties.SpringDocConfigProperties$Cache",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isDisabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setDisabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.jdbc.core.JdbcTemplate",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.github.resilience4j.common.circuitbreaker.configuration.CommonCircuitBreakerConfigurationProperties",
    "methods": [
      {
        "name": "getConfigs",
        "parameterTypes": [ ]
      },
      {
        "name": "getBackends",
        "parameterTypes": [ ]
      },
      {
        "name": "getInstances",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem$Factory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springdoc.core.properties.SpringDocConfigProperties$Webjars",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "setPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jacksonObjectMapperBuilder",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.configuration.SpringDocConfiguration$OpenApiResourceAdvice",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "handleNoHandlerFound",
        "parameterTypes": [
          "org.springdoc.api.OpenApiResourceNotFoundException"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springdoc.core.configuration.SpringDocConfiguration"
        ]
      }
    ]
  },
  {
    "name": "io.swagger.v3.oas.models.media.BooleanSchema",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.david.vehicleservice.repository.VehicleRepository",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "io.swagger.v3.oas.models.links.LinkParameter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcProperties$Template",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxRows",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setFetchSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setQueryTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getQueryTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getFetchSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxRows",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "java.lang.Class[]"
  },
  {
    "name": "org.springdoc.webmvc.ui.SwaggerWelcomeWebMvc",
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "mvcServletPath"
      }
    ],
    "methods": [
      {
        "name": "redirectToUi",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.webmvc.ui.SwaggerConfig",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "swaggerWebMvcConfigurer",
        "parameterTypes": [
          "org.springdoc.core.properties.SwaggerUiConfigParameters",
          "org.springdoc.webmvc.ui.SwaggerIndexTransformer",
          "java.util.Optional",
          "org.springdoc.webmvc.ui.SwaggerResourceResolver"
        ]
      },
      {
        "name": "indexPageTransformer",
        "parameterTypes": [
          "org.springdoc.core.properties.SwaggerUiConfigProperties",
          "org.springdoc.core.properties.SwaggerUiOAuthProperties",
          "org.springdoc.core.properties.SwaggerUiConfigParameters",
          "org.springdoc.webmvc.ui.SwaggerWelcomeCommon",
          "org.springdoc.core.providers.ObjectMapperProvider"
        ]
      },
      {
        "name": "swaggerConfigResource",
        "parameterTypes": [
          "org.springdoc.webmvc.ui.SwaggerWelcomeCommon"
        ]
      },
      {
        "name": "swaggerResourceResolver",
        "parameterTypes": [
          "org.springdoc.core.properties.SwaggerUiConfigProperties"
        ]
      },
      {
        "name": "swaggerWelcome",
        "parameterTypes": [
          "org.springdoc.core.properties.SwaggerUiConfigProperties",
          "org.springdoc.core.properties.SpringDocConfigProperties",
          "org.springdoc.core.properties.SwaggerUiConfigParameters",
          "org.springdoc.core.providers.SpringWebProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.openfeign.support.SortJacksonModule",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Data",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getRepository",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.netflix.eureka.metadata.ManagementMetadataProvider",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.YamlPropertySourceLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter",
    "allPublicConstructors": true
  },
  {
    "name": "com.david.vehicleservice.modal.VehicleModal",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getId",
        "parameterTypes": [ ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getPlaca",
        "parameterTypes": [ ]
      },
      {
        "name": "setPlaca",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "char"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.AnnotationDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.CompositeHealth",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDetails",
        "parameterTypes": [ ]
      },
      {
        "name": "getStatus",
        "parameterTypes": [ ]
      },
      {
        "name": "getComponents",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping$WebMvcLinksHandler",
    "methods": [
      {
        "name": "links",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse"
        ]
      }
    ]
  },
  {
    "name": "io.swagger.v3.core.jackson.mixin.ComponentsMixin",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBinder$ConfigurationPropertiesBinderFactory",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "tomcatServletWebServerFactoryCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      },
      {
        "name": "servletWebServerFactoryCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterConfigurationOnMissingBean$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.annotation.Propagation",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.boot.SpringApplication",
    "methods": [
      {
        "name": "getWebApplicationType",
        "parameterTypes": [ ]
      },
      {
        "name": "setMainApplicationClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setEnvironmentPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWebApplicationType",
        "parameterTypes": [
          "org.springframework.boot.WebApplicationType"
        ]
      },
      {
        "name": "getInitializers",
        "parameterTypes": [ ]
      },
      {
        "name": "setAdditionalProfiles",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setAddCommandLineProperties",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getResourceLoader",
        "parameterTypes": [ ]
      },
      {
        "name": "setAllowCircularReferences",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAllowBeanDefinitionOverriding",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getApplicationStartup",
        "parameterTypes": [ ]
      },
      {
        "name": "setListeners",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "setRegisterShutdownHook",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setHeadless",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setApplicationStartup",
        "parameterTypes": [
          "org.springframework.core.metrics.ApplicationStartup"
        ]
      },
      {
        "name": "setBannerMode",
        "parameterTypes": [
          "org.springframework.boot.Banner$Mode"
        ]
      },
      {
        "name": "getAdditionalProfiles",
        "parameterTypes": [ ]
      },
      {
        "name": "setApplicationContextFactory",
        "parameterTypes": [
          "org.springframework.boot.ApplicationContextFactory"
        ]
      },
      {
        "name": "getEnvironmentPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "setBanner",
        "parameterTypes": [
          "org.springframework.boot.Banner"
        ]
      },
      {
        "name": "getClassLoader",
        "parameterTypes": [ ]
      },
      {
        "name": "setInitializers",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "setSources",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setResourceLoader",
        "parameterTypes": [
          "org.springframework.core.io.ResourceLoader"
        ]
      },
      {
        "name": "setAddConversionService",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getSources",
        "parameterTypes": [ ]
      },
      {
        "name": "getAllSources",
        "parameterTypes": [ ]
      },
      {
        "name": "getMainApplicationClass",
        "parameterTypes": [ ]
      },
      {
        "name": "setLogStartupInfo",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setBeanNameGenerator",
        "parameterTypes": [
          "org.springframework.beans.factory.support.BeanNameGenerator"
        ]
      },
      {
        "name": "setEnvironment",
        "parameterTypes": [
          "org.springframework.core.env.ConfigurableEnvironment"
        ]
      },
      {
        "name": "getSpringBootExceptionHandler",
        "parameterTypes": [ ]
      },
      {
        "name": "setLazyInitialization",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getListeners",
        "parameterTypes": [ ]
      },
      {
        "name": "setDefaultProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Reactive$Session",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getCookie",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.Compression",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getMinResponseSize",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "getMimeTypes",
        "parameterTypes": [ ]
      },
      {
        "name": "getExcludedUserAgents",
        "parameterTypes": [ ]
      },
      {
        "name": "setMinResponseSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setExcludedUserAgents",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setMimeTypes",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.aspectj.AnnotationBeanConfigurerAspect",
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.autoconfigure.RestartEndpointWithoutIntegrationConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getBasePath",
        "parameterTypes": [ ]
      },
      {
        "name": "getPathMapping",
        "parameterTypes": [ ]
      },
      {
        "name": "setBasePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getExposure",
        "parameterTypes": [ ]
      },
      {
        "name": "getDiscovery",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.springboot3.spelresolver.autoconfigure.SpelResolverConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "io.swagger.v3.core.jackson.mixin.ExampleMixin",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.github.resilience4j.common.ratelimiter.configuration.CommonRateLimiterConfigurationProperties",
    "methods": [
      {
        "name": "getConfigs",
        "parameterTypes": [ ]
      },
      {
        "name": "getInstances",
        "parameterTypes": [ ]
      },
      {
        "name": "getLimiters",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.UnboundConfigurationPropertyFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$PreserveErrorControllerTargetClassPostProcessor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.github.resilience4j.springboot3.spelresolver.autoconfigure.SpelResolverConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.context.event.EventListenerMethodProcessor",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.netflix.appinfo.MyDataCenterInfo",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryPostProcessor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.ApplicationContextInitializer[]"
  },
  {
    "name": "com.david.vehicleservice.modal.VehicleDataSearchModal",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "setPlaca",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getStartDatePostion",
        "parameterTypes": [ ]
      },
      {
        "name": "getEndDatePosition",
        "parameterTypes": [ ]
      },
      {
        "name": "setEndDatePosition",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "getPlaca",
        "parameterTypes": [ ]
      },
      {
        "name": "setStartDatePostion",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy$Content",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getPaths",
        "parameterTypes": [ ]
      },
      {
        "name": "setPaths",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.NoUniqueBeanDefinitionFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Jsp",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setRegistered",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRegistered",
        "parameterTypes": [ ]
      },
      {
        "name": "getClassName",
        "parameterTypes": [ ]
      },
      {
        "name": "getInitParameters",
        "parameterTypes": [ ]
      },
      {
        "name": "setInitParameters",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "io.swagger.v3.oas.models.media.Encoding",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$System",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDiskspace",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDistribution",
        "parameterTypes": [ ]
      },
      {
        "name": "getSystem",
        "parameterTypes": [ ]
      },
      {
        "name": "setUseGlobalRegistry",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isUseGlobalRegistry",
        "parameterTypes": [ ]
      },
      {
        "name": "getData",
        "parameterTypes": [ ]
      },
      {
        "name": "getEnable",
        "parameterTypes": [ ]
      },
      {
        "name": "getTags",
        "parameterTypes": [ ]
      },
      {
        "name": "getWeb",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.util.CustomCollections$VavrCollections",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.commons.security.ResourceServerTokenRelayAutoConfiguration$ResourceServerTokenRelayRegistrationAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Shutdown",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setAwaitTermination",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAwaitTerminationPeriod",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getAwaitTerminationPeriod",
        "parameterTypes": [ ]
      },
      {
        "name": "isAwaitTermination",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.web.config.SpringDataJacksonConfiguration",
    "queryAllDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jacksonGeoModule",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "java.nio.charset.Charset"
  },
  {
    "name": "org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Data$Repository",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAutotime",
        "parameterTypes": [ ]
      },
      {
        "name": "setMetricName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMetricName",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.datatype.jdk8.Jdk8Module",
    "condition": {
      "typeReachable": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.servlet.ViewResolver",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.bootstrap.encrypt.RsaProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setSalt",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAlgorithm",
        "parameterTypes": [ ]
      },
      {
        "name": "setAlgorithm",
        "parameterTypes": [
          "org.springframework.security.rsa.crypto.RsaAlgorithm"
        ]
      },
      {
        "name": "isStrong",
        "parameterTypes": [ ]
      },
      {
        "name": "setStrong",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getSalt",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.properties.SpringDocConfigProperties$ApiDocs$OpenApiVersion",
    "methods": [
      {
        "name": "getVersion",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getBundle",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterConfigurationOnMissingBean",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "rateLimiterEventsConsumerRegistry",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.PemSslBundleProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getTruststore",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeystore",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.query.FluentQuery$FetchableFluentQuery",
    "allPublicMethods": true
  },
  {
    "name": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "java.time.Instant"
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getGit",
        "parameterTypes": [ ]
      },
      {
        "name": "getBuild",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$XForwarded",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.swagger.v3.oas.models.servers.Server",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.PlatformTransactionManager",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.util.UrlPathHelper",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler",
    "methods": [
      {
        "name": "handleException",
        "parameterTypes": [
          "java.lang.Exception",
          "org.springframework.web.context.request.WebRequest"
        ]
      }
    ]
  },
  {
    "name": "com.david.vehicleservice.modal.PositionModal",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getLongitude",
        "parameterTypes": [ ]
      },
      {
        "name": "getVehicle",
        "parameterTypes": [ ]
      },
      {
        "name": "setVelociadde",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "getVelociadde",
        "parameterTypes": [ ]
      },
      {
        "name": "getDataPosicao",
        "parameterTypes": [ ]
      },
      {
        "name": "setLatitude",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setIgnicao",
        "parameterTypes": [
          "com.david.vehicleservice.enumeration.BooleanEnum"
        ]
      },
      {
        "name": "getIgnicao",
        "parameterTypes": [ ]
      },
      {
        "name": "setVehicle",
        "parameterTypes": [
          "com.david.vehicleservice.modal.VehicleModal"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setLongitude",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "getLatitude",
        "parameterTypes": [ ]
      },
      {
        "name": "getId",
        "parameterTypes": [ ]
      },
      {
        "name": "setDataPosicao",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isPreferIpAddress",
        "parameterTypes": [ ]
      },
      {
        "name": "getLeaseExpirationDurationInSeconds",
        "parameterTypes": [ ]
      },
      {
        "name": "getSecureVirtualHostName",
        "parameterTypes": [ ]
      },
      {
        "name": "getHomePageUrl",
        "parameterTypes": [ ]
      },
      {
        "name": "setHomePageUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHealthCheckUrlPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isInstanceEnabledOnit",
        "parameterTypes": [ ]
      },
      {
        "name": "setDataCenterInfo",
        "parameterTypes": [
          "com.netflix.appinfo.DataCenterInfo"
        ]
      },
      {
        "name": "getHealthCheckUrl",
        "parameterTypes": [ ]
      },
      {
        "name": "getNonSecurePort",
        "parameterTypes": [ ]
      },
      {
        "name": "setIpAddress",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isNonSecurePortEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "getHostname",
        "parameterTypes": [ ]
      },
      {
        "name": "getSecurePortEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setNonSecurePort",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getSecureHealthCheckUrl",
        "parameterTypes": [ ]
      },
      {
        "name": "setInstanceId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getNamespace",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultAddressResolutionOrder",
        "parameterTypes": [ ]
      },
      {
        "name": "getSecurePort",
        "parameterTypes": [ ]
      },
      {
        "name": "setSecurePortEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getMetadataMap",
        "parameterTypes": [ ]
      },
      {
        "name": "setSecureHealthCheckUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNamespace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setASGName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLeaseRenewalIntervalInSeconds",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getAppGroupName",
        "parameterTypes": [ ]
      },
      {
        "name": "setHomePageUrlPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getHomePageUrlPath",
        "parameterTypes": [ ]
      },
      {
        "name": "setMetadataMap",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setAppGroupName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getInstanceId",
        "parameterTypes": [ ]
      },
      {
        "name": "setStatusPageUrlPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHostname",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVirtualHostName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSecurePort",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setInitialStatus",
        "parameterTypes": [
          "com.netflix.appinfo.InstanceInfo$InstanceStatus"
        ]
      },
      {
        "name": "setNonSecurePortEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getIpAddress",
        "parameterTypes": [ ]
      },
      {
        "name": "getStatusPageUrlPath",
        "parameterTypes": [ ]
      },
      {
        "name": "setAppname",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEnvironment",
        "parameterTypes": [ ]
      },
      {
        "name": "getStatusPageUrl",
        "parameterTypes": [ ]
      },
      {
        "name": "getLeaseRenewalIntervalInSeconds",
        "parameterTypes": [ ]
      },
      {
        "name": "setDefaultAddressResolutionOrder",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "getInitialStatus",
        "parameterTypes": [ ]
      },
      {
        "name": "getASGName",
        "parameterTypes": [ ]
      },
      {
        "name": "getHealthCheckUrlPath",
        "parameterTypes": [ ]
      },
      {
        "name": "setLeaseExpirationDurationInSeconds",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setSecureVirtualHostName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getVirtualHostName",
        "parameterTypes": [ ]
      },
      {
        "name": "getAppname",
        "parameterTypes": [ ]
      },
      {
        "name": "setStatusPageUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHealthCheckUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnvironment",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      },
      {
        "name": "setInstanceEnabledOnit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPreferIpAddress",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDataCenterInfo",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.swagger.v3.oas.models.parameters.PathParameter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.netflix.discovery.converters.jackson.builder.ApplicationsJacksonBuilder",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springdoc.core.converters.PageableOpenAPIConverter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration",
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "optionalArgs"
      },
      {
        "name": "context"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "eurekaApplicationInfoManager",
        "parameterTypes": [
          "com.netflix.appinfo.EurekaInstanceConfig"
        ]
      },
      {
        "name": "eurekaRegistration",
        "parameterTypes": [
          "com.netflix.discovery.EurekaClient",
          "org.springframework.cloud.netflix.eureka.CloudEurekaInstanceConfig",
          "com.netflix.appinfo.ApplicationInfoManager",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "eurekaClient",
        "parameterTypes": [
          "com.netflix.appinfo.ApplicationInfoManager",
          "com.netflix.discovery.EurekaClientConfig",
          "com.netflix.appinfo.EurekaInstanceConfig",
          "com.netflix.discovery.shared.transport.jersey.TransportClientFactories",
          "com.netflix.appinfo.HealthCheckHandler"
        ]
      }
    ]
  },
  {
    "name": "com.netflix.appinfo.DataCenterInfo$Name",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointDiscoverer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "javax.sql.DataSource",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.bootstrap.TextEncryptorConfigBootstrapper",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.client.discovery.DiscoveryClient",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Client",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxUriTags",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getRequest",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxUriTags",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.client.CommonsClientAutoConfiguration$ActuatorConfiguration",
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "hasFeatures"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.configuration.SpringDocConfiguration$SpringDocWebFluxSupportConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "webFluxSupportConverter",
        "parameterTypes": [
          "org.springdoc.core.providers.ObjectMapperProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration$EurekaClientConfigurationRefresher",
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "eurekaClient"
      },
      {
        "name": "autoRegistration"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterAutoConfiguration$TimeLimiterAutoEndpointConfiguration",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "messageSource",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.context.MessageSourceProperties"
        ]
      },
      {
        "name": "messageSourceProperties",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setDispatchTraceRequest",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "getWebjarsPathPattern",
        "parameterTypes": [ ]
      },
      {
        "name": "getProblemdetails",
        "parameterTypes": [ ]
      },
      {
        "name": "setLogRequestDetails",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setWebjarsPathPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getStaticPathPattern",
        "parameterTypes": [ ]
      },
      {
        "name": "setIgnoreDefaultModelOnRedirect",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getMessageCodesResolverFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "getContentnegotiation",
        "parameterTypes": [ ]
      },
      {
        "name": "getServlet",
        "parameterTypes": [ ]
      },
      {
        "name": "setThrowExceptionIfNoHandlerFound",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDispatchOptionsRequest",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isDispatchOptionsRequest",
        "parameterTypes": [ ]
      },
      {
        "name": "isLogRequestDetails",
        "parameterTypes": [ ]
      },
      {
        "name": "setLogResolvedException",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isPublishRequestHandledEvents",
        "parameterTypes": [ ]
      },
      {
        "name": "isDispatchTraceRequest",
        "parameterTypes": [ ]
      },
      {
        "name": "isThrowExceptionIfNoHandlerFound",
        "parameterTypes": [ ]
      },
      {
        "name": "setMessageCodesResolverFormat",
        "parameterTypes": [
          "org.springframework.validation.DefaultMessageCodesResolver$Format"
        ]
      },
      {
        "name": "getAsync",
        "parameterTypes": [ ]
      },
      {
        "name": "isLogResolvedException",
        "parameterTypes": [ ]
      },
      {
        "name": "getPathmatch",
        "parameterTypes": [ ]
      },
      {
        "name": "isIgnoreDefaultModelOnRedirect",
        "parameterTypes": [ ]
      },
      {
        "name": "getView",
        "parameterTypes": [ ]
      },
      {
        "name": "setStaticPathPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPublishRequestHandledEvents",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.micrometer.tagged.TaggedRateLimiterMetricsPublisher",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.TokenBufferSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.web.context.MissingWebServerFactoryBeanFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.context.properties.ConfigurationPropertiesBeans",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.github.resilience4j.springboot3.retry.autoconfigure.RetryAutoConfiguration$RetryAutoEndpointConfiguration$$SpringCGLIB$$FastClass$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataNotFoundFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.servlet.view.BeanNameViewResolver",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.github.resilience4j.springboot3.retry.autoconfigure.RetryAutoConfiguration$RetryAutoEndpointConfiguration$$SpringCGLIB$$FastClass$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "java.util.List"
  },
  {
    "name": "org.springdoc.core.properties.SwaggerUiConfigProperties$Csrf",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isUseLocalStorage",
        "parameterTypes": [ ]
      },
      {
        "name": "setSessionStorageKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUseLocalStorage",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getCookieName",
        "parameterTypes": [ ]
      },
      {
        "name": "isUseSessionStorage",
        "parameterTypes": [ ]
      },
      {
        "name": "setLocalStorageKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getHeaderName",
        "parameterTypes": [ ]
      },
      {
        "name": "setHeaderName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLocalStorageKey",
        "parameterTypes": [ ]
      },
      {
        "name": "getSessionStorageKey",
        "parameterTypes": [ ]
      },
      {
        "name": "setUseSessionStorage",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCookieName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.swagger.v3.oas.models.media.ObjectSchema",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterAutoConfiguration$RateLimiterEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Threads",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getMax",
        "parameterTypes": [ ]
      },
      {
        "name": "setMax",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getMinSpare",
        "parameterTypes": [ ]
      },
      {
        "name": "setMinSpare",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.timelimiter.TimeLimiterRegistry",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.david.vehicleservice.VehicleServiceApplication__ApplicationContextInitializer",
    "condition": {
      "typeReachable": "com.david.vehicleservice.VehicleServiceApplication"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.embedded.tomcat.ConnectorStartFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.PemSslBundleProperties$Store",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCertificate",
        "parameterTypes": [ ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPrivateKey",
        "parameterTypes": [ ]
      },
      {
        "name": "getType",
        "parameterTypes": [ ]
      },
      {
        "name": "setPrivateKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPrivateKeyPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "setPrivateKeyPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCertificate",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthIndicatorProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setIgnoreRoutingDataSources",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isIgnoreRoutingDataSources",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "java.util.Map[]"
  },
  {
    "name": "org.springframework.cloud.autoconfigure.RefreshAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "configDataContextRefresher",
        "parameterTypes": [
          "org.springframework.context.ConfigurableApplicationContext",
          "org.springframework.cloud.context.scope.refresh.RefreshScope",
          "org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshProperties"
        ]
      },
      {
        "name": "loggingRebinder",
        "parameterTypes": [ ]
      },
      {
        "name": "refreshEventListener",
        "parameterTypes": [
          "org.springframework.cloud.context.refresh.ContextRefresher"
        ]
      },
      {
        "name": "refreshScope",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.ContextIdApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "java.lang.String"
  },
  {
    "name": "com.david.vehicleservice.resource.VehicleResource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "save",
        "parameterTypes": [
          "com.david.vehicleservice.modal.VehicleModal"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.Long",
          "com.david.vehicleservice.modal.VehicleModal"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "search",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "savePosition",
        "parameterTypes": [
          "java.lang.Long",
          "com.david.vehicleservice.modal.PositionModal"
        ]
      },
      {
        "name": "findAllByVehicleId",
        "parameterTypes": [
          "java.lang.Long",
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findById",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.david.vehicleservice.service.VehicleService",
          "com.david.vehicleservice.modal.mapper.VeihicleMapper",
          "com.david.vehicleservice.modal.mapper.PositionMapper"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getTemplate",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.netflix.eureka.EurekaClientConfigBean",
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "propertyResolver"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setRegistryFetchIntervalSeconds",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isUseDnsForFetchingServiceUrls",
        "parameterTypes": [ ]
      },
      {
        "name": "isDisableDelta",
        "parameterTypes": [ ]
      },
      {
        "name": "getProxyUserName",
        "parameterTypes": [ ]
      },
      {
        "name": "getRegistryRefreshSingleVipAddress",
        "parameterTypes": [ ]
      },
      {
        "name": "getDollarReplacement",
        "parameterTypes": [ ]
      },
      {
        "name": "getCacheRefreshExecutorExponentialBackOffBound",
        "parameterTypes": [ ]
      },
      {
        "name": "setCacheRefreshExecutorThreadPoolSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getDecoderName",
        "parameterTypes": [ ]
      },
      {
        "name": "setHeartbeatExecutorThreadPoolSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isOnDemandUpdateStatusChange",
        "parameterTypes": [ ]
      },
      {
        "name": "isShouldEnforceRegistrationAtInit",
        "parameterTypes": [ ]
      },
      {
        "name": "getEurekaServerReadTimeoutSeconds",
        "parameterTypes": [ ]
      },
      {
        "name": "getEurekaServerTotalConnectionsPerHost",
        "parameterTypes": [ ]
      },
      {
        "name": "setEurekaServerReadTimeoutSeconds",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getProxyHost",
        "parameterTypes": [ ]
      },
      {
        "name": "setProxyHost",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFetchRemoteRegionsRegistry",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRegistryFetchIntervalSeconds",
        "parameterTypes": [ ]
      },
      {
        "name": "setProxyUserName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getProxyPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "isPreferSameZoneEureka",
        "parameterTypes": [ ]
      },
      {
        "name": "getHeartbeatExecutorExponentialBackOffBound",
        "parameterTypes": [ ]
      },
      {
        "name": "isRegisterWithEureka",
        "parameterTypes": [ ]
      },
      {
        "name": "setShouldEnforceRegistrationAtInit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPropertyResolver",
        "parameterTypes": [
          "org.springframework.core.env.PropertyResolver"
        ]
      },
      {
        "name": "setOnDemandUpdateStatusChange",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRegisterWithEureka",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setClientDataAccept",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getHeartbeatExecutorThreadPoolSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getEurekaServerURLContext",
        "parameterTypes": [ ]
      },
      {
        "name": "getEscapeCharReplacement",
        "parameterTypes": [ ]
      },
      {
        "name": "setProxyPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHeartbeatExecutorExponentialBackOffBound",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": [ ]
      },
      {
        "name": "getEurekaServiceUrlPollIntervalSeconds",
        "parameterTypes": [ ]
      },
      {
        "name": "setEurekaConnectionIdleTimeoutSeconds",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setEncoderName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEurekaServerConnectTimeoutSeconds",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setgZipContent",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getRegion",
        "parameterTypes": [ ]
      },
      {
        "name": "isFetchRegistry",
        "parameterTypes": [ ]
      },
      {
        "name": "getEurekaConnectionIdleTimeoutSeconds",
        "parameterTypes": [ ]
      },
      {
        "name": "getCacheRefreshExecutorThreadPoolSize",
        "parameterTypes": [ ]
      },
      {
        "name": "isAllowRedirects",
        "parameterTypes": [ ]
      },
      {
        "name": "getAvailabilityZones",
        "parameterTypes": [ ]
      },
      {
        "name": "setEurekaServerURLContext",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEurekaServerDNSName",
        "parameterTypes": [ ]
      },
      {
        "name": "setShouldUnregisterOnShutdown",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRegion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getProxyPort",
        "parameterTypes": [ ]
      },
      {
        "name": "getTransport",
        "parameterTypes": [ ]
      },
      {
        "name": "setInitialInstanceInfoReplicationIntervalSeconds",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isLogDeltaDiff",
        "parameterTypes": [ ]
      },
      {
        "name": "getEncoderName",
        "parameterTypes": [ ]
      },
      {
        "name": "setServiceUrl",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setProxyPort",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAvailabilityZones",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "isgZipContent",
        "parameterTypes": [ ]
      },
      {
        "name": "setEscapeCharReplacement",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRegistryRefreshSingleVipAddress",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTransportConfig",
        "parameterTypes": [ ]
      },
      {
        "name": "setInstanceInfoReplicationIntervalSeconds",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setDisableDelta",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getInitialInstanceInfoReplicationIntervalSeconds",
        "parameterTypes": [ ]
      },
      {
        "name": "getClientDataAccept",
        "parameterTypes": [ ]
      },
      {
        "name": "setBackupRegistryImpl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "getInstanceInfoReplicationIntervalSeconds",
        "parameterTypes": [ ]
      },
      {
        "name": "getBackupRegistryImpl",
        "parameterTypes": [ ]
      },
      {
        "name": "setAllowRedirects",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseDnsForFetchingServiceUrls",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isShouldUnregisterOnShutdown",
        "parameterTypes": [ ]
      },
      {
        "name": "setDecoderName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isFilterOnlyUpInstances",
        "parameterTypes": [ ]
      },
      {
        "name": "setEurekaServerTotalConnectionsPerHost",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPreferSameZoneEureka",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getEurekaServerPort",
        "parameterTypes": [ ]
      },
      {
        "name": "setEurekaServiceUrlPollIntervalSeconds",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setLogDeltaDiff",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDollarReplacement",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEurekaServerTotalConnections",
        "parameterTypes": [ ]
      },
      {
        "name": "getFetchRemoteRegionsRegistry",
        "parameterTypes": [ ]
      },
      {
        "name": "getServiceUrl",
        "parameterTypes": [ ]
      },
      {
        "name": "setFetchRegistry",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEurekaServerTotalConnections",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setEurekaServerPort",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getPropertyResolver",
        "parameterTypes": [ ]
      },
      {
        "name": "setTransport",
        "parameterTypes": [
          "com.netflix.discovery.shared.transport.EurekaTransportConfig"
        ]
      },
      {
        "name": "setCacheRefreshExecutorExponentialBackOffBound",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setEurekaServerDNSName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFilterOnlyUpInstances",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getEurekaServerConnectTimeoutSeconds",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$Retry",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setRetryOnAllOperations",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getMaxRetriesOnSameServiceInstance",
        "parameterTypes": [ ]
      },
      {
        "name": "setRetryOnAllExceptions",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getRetryableExceptions",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isRetryOnAllOperations",
        "parameterTypes": [ ]
      },
      {
        "name": "setRetryableExceptions",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "isRetryOnAllExceptions",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxRetriesOnNextServiceInstance",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setBackoff",
        "parameterTypes": [
          "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$Retry$Backoff"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getBackoff",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxRetriesOnNextServiceInstance",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxRetriesOnSameServiceInstance",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getRetryableStatusCodes",
        "parameterTypes": [ ]
      },
      {
        "name": "setRetryableStatusCodes",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.github.resilience4j.spring6.timelimiter.configure.TimeLimiterAspect",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": [ ]
      },
      {
        "name": "timeLimiterAroundAdvice",
        "parameterTypes": [
          "org.aspectj.lang.ProceedingJoinPoint",
          "io.github.resilience4j.timelimiter.annotation.TimeLimiter"
        ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.spring6.ratelimiter.configure.RateLimiterConfigurationProperties",
    "methods": [
      {
        "name": "setRateLimiterAspectOrder",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getRateLimiterAspectOrder",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.data.RepositoryMetricsAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
        ]
      },
      {
        "name": "metricsRepositoryMethodInvocationListenerBeanPostProcessor",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "metricsRepositoryMethodInvocationListener",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.boot.actuate.metrics.data.RepositoryTagsProvider"
        ]
      },
      {
        "name": "repositoryTagsProvider",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Threads",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getIdleTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "setMax",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSelectors",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setAcceptors",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getMaxQueueCapacity",
        "parameterTypes": [ ]
      },
      {
        "name": "getAcceptors",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxQueueCapacity",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getSelectors",
        "parameterTypes": [ ]
      },
      {
        "name": "getMin",
        "parameterTypes": [ ]
      },
      {
        "name": "setMin",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getMax",
        "parameterTypes": [ ]
      },
      {
        "name": "setIdleTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.util.pattern.PathPatternParser",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.media.IntegerSchema",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.jpa.domain.AbstractAuditable",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.context.ConfigurableWebApplicationContext"
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties$Sort",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setSortParameter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSortParameter",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnClassCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Resource",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isAllowCaching",
        "parameterTypes": [ ]
      },
      {
        "name": "setCacheTtl",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setAllowCaching",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getCacheTtl",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.swagger.v3.oas.models.info.Contact",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.SystemHealth",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getGroups",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.springboot3.fallback.autoconfigure.FallbackConfigurationOnMissingBean",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "fallbackExecutor",
        "parameterTypes": [
          "io.github.resilience4j.spring6.spelresolver.SpelResolver",
          "io.github.resilience4j.spring6.fallback.FallbackDecorators"
        ]
      },
      {
        "name": "completionStageFallbackDecorator",
        "parameterTypes": [ ]
      },
      {
        "name": "fallbackDecorators",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setPlatform",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPlatform",
        "parameterTypes": [ ]
      },
      {
        "name": "isContinueOnError",
        "parameterTypes": [ ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": [ ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getSeparator",
        "parameterTypes": [ ]
      },
      {
        "name": "setDataLocations",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getDataLocations",
        "parameterTypes": [ ]
      },
      {
        "name": "getMode",
        "parameterTypes": [ ]
      },
      {
        "name": "getSchemaLocations",
        "parameterTypes": [ ]
      },
      {
        "name": "getUsername",
        "parameterTypes": [ ]
      },
      {
        "name": "setSeparator",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMode",
        "parameterTypes": [
          "org.springframework.boot.sql.init.DatabaseInitializationMode"
        ]
      },
      {
        "name": "setContinueOnError",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSchemaLocations",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      }
    ]
  },
  {
    "name": "com.netflix.discovery.shared.resolver.AsyncResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jdbcTemplate",
        "parameterTypes": [
          "javax.sql.DataSource",
          "org.springframework.boot.autoconfigure.jdbc.JdbcProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.orm.jpa.SharedEntityManagerCreator",
    "queriedMethods": [
      {
        "name": "createSharedEntityManager",
        "parameterTypes": [
          "jakarta.persistence.EntityManagerFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.configuration.SpringDocConfiguration$WebConversionServiceConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "webConversionServiceProvider",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.io.ResourceEditor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.DelegatingApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthEndpointWebExtension",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "health",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.ApiVersion",
          "org.springframework.boot.actuate.endpoint.web.WebServerNamespace",
          "org.springframework.boot.actuate.endpoint.SecurityContext"
        ]
      },
      {
        "name": "health",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.ApiVersion",
          "org.springframework.boot.actuate.endpoint.web.WebServerNamespace",
          "org.springframework.boot.actuate.endpoint.SecurityContext",
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthProperties$Status",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getHttpMapping",
        "parameterTypes": [ ]
      },
      {
        "name": "getOrder",
        "parameterTypes": [ ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.micrometer.tagged.TaggedRetryMetricsPublisher",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.config.SpringDataWebConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.beans.factory.ObjectFactory"
        ]
      },
      {
        "name": "pageableResolver",
        "parameterTypes": [ ]
      },
      {
        "name": "sortResolver",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.PropertiesJdbcConnectionDetails",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.support.PropertySourcesPlaceholderConfigurer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.aop.framework.ProxyProcessorSupport",
    "methods": [
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration$WebEndpointServletConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "servletEndpointDiscoverer",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.AbstractTimeLimiterConfigurationOnMissingBean",
    "queriedMethods": [
      {
        "name": "timeLimiterAspect",
        "parameterTypes": [
          "io.github.resilience4j.spring6.timelimiter.configure.TimeLimiterConfigurationProperties",
          "io.github.resilience4j.timelimiter.TimeLimiterRegistry",
          "java.util.List",
          "io.github.resilience4j.spring6.fallback.FallbackExecutor",
          "io.github.resilience4j.spring6.spelresolver.SpelResolver",
          "io.github.resilience4j.core.ContextAwareScheduledThreadPoolExecutor"
        ]
      },
      {
        "name": "timeLimiterRegistry",
        "parameterTypes": [
          "io.github.resilience4j.spring6.timelimiter.configure.TimeLimiterConfigurationProperties",
          "io.github.resilience4j.consumer.EventConsumerRegistry",
          "io.github.resilience4j.core.registry.RegistryEventConsumer",
          "io.github.resilience4j.common.CompositeCustomizer"
        ]
      },
      {
        "name": "compositeTimeLimiterCustomizer",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "timeLimiterRegistryEventConsumer",
        "parameterTypes": [
          "java.util.Optional"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.StandardConfigDataLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "io.swagger.v3.oas.models.servers.ServerVariables",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "discoveryClient",
        "parameterTypes": [
          "com.netflix.discovery.EurekaClient",
          "com.netflix.discovery.EurekaClientConfig"
        ]
      }
    ]
  },
  {
    "name": "com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.AbstractRateLimiterConfigurationOnMissingBean",
    "queriedMethods": [
      {
        "name": "rateLimiterRegistry",
        "parameterTypes": [
          "io.github.resilience4j.spring6.ratelimiter.configure.RateLimiterConfigurationProperties",
          "io.github.resilience4j.consumer.EventConsumerRegistry",
          "io.github.resilience4j.core.registry.RegistryEventConsumer",
          "io.github.resilience4j.common.CompositeCustomizer"
        ]
      },
      {
        "name": "rateLimiterAspect",
        "parameterTypes": [
          "io.github.resilience4j.spring6.ratelimiter.configure.RateLimiterConfigurationProperties",
          "io.github.resilience4j.ratelimiter.RateLimiterRegistry",
          "java.util.List",
          "io.github.resilience4j.spring6.fallback.FallbackExecutor",
          "io.github.resilience4j.spring6.spelresolver.SpelResolver"
        ]
      },
      {
        "name": "compositeRateLimiterCustomizer",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "rateLimiterRegistryEventConsumer",
        "parameterTypes": [
          "java.util.Optional"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceBeanCreationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "io.swagger.v3.oas.models.PathItem",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties$Http",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getServer",
        "parameterTypes": [ ]
      },
      {
        "name": "getClient",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.david.vehicleservice.config.SwaggerConfig$$SpringCGLIB$$FastClass$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springdoc.webmvc.ui.SwaggerConfigResource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "openapiJson",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "configurationPropertiesBeans",
        "parameterTypes": [ ]
      },
      {
        "name": "configurationPropertiesRebinder",
        "parameterTypes": [
          "org.springframework.cloud.context.properties.ConfigurationPropertiesBeans"
        ]
      }
    ]
  },
  {
    "name": "com.david.vehicleservice.config.SwaggerConfig$$SpringCGLIB$$FastClass$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ErrorProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isIncludeException",
        "parameterTypes": [ ]
      },
      {
        "name": "setIncludeException",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getPath",
        "parameterTypes": [ ]
      },
      {
        "name": "setIncludeStacktrace",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"
        ]
      },
      {
        "name": "getWhitelabel",
        "parameterTypes": [ ]
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIncludeMessage",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"
        ]
      },
      {
        "name": "getIncludeMessage",
        "parameterTypes": [ ]
      },
      {
        "name": "getIncludeBindingErrors",
        "parameterTypes": [ ]
      },
      {
        "name": "setIncludeBindingErrors",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"
        ]
      },
      {
        "name": "getIncludeStacktrace",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.View",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.david.vehicleservice.config.SwaggerConfig$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.swagger.v3.oas.models.parameters.HeaderParameter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.core.jackson.mixin.Discriminator31Mixin",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.metrics.startup.StartupTimeMetricsListener",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Async",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setRequestTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getRequestTimeout",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.NoConnectionFactoryBeanFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "observationRegistry",
        "parameterTypes": [ ]
      },
      {
        "name": "observationRegistryPostProcessor",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "jakarta.inject.Qualifier"
  },
  {
    "name": "org.springdoc.core.configuration.SpringDocUIConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.Optional"
        ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerAutoConfiguration$CircuitBreakerEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.view.InternalResourceViewResolver",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.security.SecurityRequirement",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.liquibase.LiquibaseDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.http.CacheControl",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getHeaderValue",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.configuration.CompatibilityVerifierProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setCompatibleBootVersions",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getCompatibleBootVersions",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration",
    "queriedMethods": [
      {
        "name": "setConfigurers",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration$MvcAdditionalHealthEndpointPathsConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "healthEndpointWebMvcHandlerMapping",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier",
          "org.springframework.boot.actuate.health.HealthEndpointGroups"
        ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.springboot3.spelresolver.autoconfigure.SpelResolverConfigurationOnMissingBean$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterConfigurationOnMissingBean",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "timeLimiterEventsConsumerRegistry",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.domain.Example",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "defaultsBindHandlerAdvisor",
        "parameterTypes": [
          "org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor$MappingsProvider[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.startup.StartupTimeMetricsListenerAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "startupTimeMetrics",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.bootstrap.BootstrapConfigFileApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerAutoConfiguration$CircuitBreakerEndpointAutoConfiguration$$SpringCGLIB$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Servlet",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getLoadOnStartup",
        "parameterTypes": [ ]
      },
      {
        "name": "getServletPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "getPath",
        "parameterTypes": [ ]
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getServletMapping",
        "parameterTypes": [ ]
      },
      {
        "name": "setLoadOnStartup",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerMetricsAutoConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.jackson.JsonMixinModuleEntries",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.openfeign.loadbalancer.DefaultFeignLoadBalancerConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "feignClient",
        "parameterTypes": [
          "org.springframework.cloud.client.loadbalancer.LoadBalancerClient",
          "org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory",
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.validation.beanvalidation.MethodValidationPostProcessor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContextFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.http.client.AbstractClientHttpRequestFactoryWrapper",
    "fields": [
      {
        "name": "requestFactory"
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "errorHtml",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse"
        ]
      },
      {
        "name": "mediaTypeNotAcceptable",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "error",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "classLoaderMetrics",
        "parameterTypes": [ ]
      },
      {
        "name": "jvmInfoMetrics",
        "parameterTypes": [ ]
      },
      {
        "name": "jvmHeapPressureMetrics",
        "parameterTypes": [ ]
      },
      {
        "name": "jvmGcMetrics",
        "parameterTypes": [ ]
      },
      {
        "name": "jvmCompilationMetrics",
        "parameterTypes": [ ]
      },
      {
        "name": "jvmThreadMetrics",
        "parameterTypes": [ ]
      },
      {
        "name": "jvmMemoryMetrics",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.swagger.v3.oas.models.media.BinarySchema",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthProperties",
    "methods": [
      {
        "name": "getRoles",
        "parameterTypes": [ ]
      },
      {
        "name": "getShowComponents",
        "parameterTypes": [ ]
      },
      {
        "name": "setShowComponents",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.Show"
        ]
      },
      {
        "name": "setRoles",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "getStatus",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.springboot3.spelresolver.autoconfigure.SpelResolverConfigurationOnMissingBean",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "spelResolver",
        "parameterTypes": [
          "org.springframework.expression.spel.standard.SpelExpressionParser",
          "org.springframework.core.ParameterNameDiscoverer",
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "parameterNameDiscoverer",
        "parameterTypes": [ ]
      },
      {
        "name": "spelExpressionParser",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.logging.LoggingRebinder",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "servletEndpointRegistrar",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
          "org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier",
          "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.bootstrap.encrypt.KeyProperties$KeyStore",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "org.springframework.core.io.Resource"
        ]
      },
      {
        "name": "getLocation",
        "parameterTypes": [ ]
      },
      {
        "name": "getAlias",
        "parameterTypes": [ ]
      },
      {
        "name": "getType",
        "parameterTypes": [ ]
      },
      {
        "name": "getSecret",
        "parameterTypes": [ ]
      },
      {
        "name": "setSecret",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAlias",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisUrlSyntaxFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancerClient",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationHandlerGrouping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Pool",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getSize",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$DefaultLoadBalancerCacheManagerConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "defaultLoadBalancerCacheManager",
        "parameterTypes": [
          "org.springframework.cloud.loadbalancer.cache.LoadBalancerCacheProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.BootstrapRegistryInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "io.swagger.v3.oas.models.media.DateTimeSchema",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setSsl",
        "parameterTypes": [
          "org.springframework.boot.web.server.Ssl"
        ]
      },
      {
        "name": "getTomcat",
        "parameterTypes": [ ]
      },
      {
        "name": "getForwardHeadersStrategy",
        "parameterTypes": [ ]
      },
      {
        "name": "setShutdown",
        "parameterTypes": [
          "org.springframework.boot.web.server.Shutdown"
        ]
      },
      {
        "name": "getMaxHttpHeaderSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getNetty",
        "parameterTypes": [ ]
      },
      {
        "name": "setForwardHeadersStrategy",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties$ForwardHeadersStrategy"
        ]
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getReactive",
        "parameterTypes": [ ]
      },
      {
        "name": "getAddress",
        "parameterTypes": [ ]
      },
      {
        "name": "getHttp2",
        "parameterTypes": [ ]
      },
      {
        "name": "getCompression",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxHttpRequestHeaderSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getUndertow",
        "parameterTypes": [ ]
      },
      {
        "name": "getServerHeader",
        "parameterTypes": [ ]
      },
      {
        "name": "setServerHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMaxHttpHeaderSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getSsl",
        "parameterTypes": [ ]
      },
      {
        "name": "setAddress",
        "parameterTypes": [
          "java.net.InetAddress"
        ]
      },
      {
        "name": "getShutdown",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxHttpRequestHeaderSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getPort",
        "parameterTypes": [ ]
      },
      {
        "name": "getJetty",
        "parameterTypes": [ ]
      },
      {
        "name": "getServlet",
        "parameterTypes": [ ]
      },
      {
        "name": "getError",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.Cookie",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setSecure",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getSameSite",
        "parameterTypes": [ ]
      },
      {
        "name": "getPath",
        "parameterTypes": [ ]
      },
      {
        "name": "getDomain",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxAge",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMaxAge",
        "parameterTypes": [ ]
      },
      {
        "name": "setSameSite",
        "parameterTypes": [
          "org.springframework.boot.web.server.Cookie$SameSite"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "getSecure",
        "parameterTypes": [ ]
      },
      {
        "name": "getHttpOnly",
        "parameterTypes": [ ]
      },
      {
        "name": "setHttpOnly",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.DefaultErrorViewResolver",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.webmvc.core.configuration.SpringDocWebMvcConfiguration$SpringDocWebMvcRouterConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "routerFunctionProvider",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.jpa.util.HibernateProxyDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "processorMetrics",
        "parameterTypes": [ ]
      },
      {
        "name": "uptimeMetrics",
        "parameterTypes": [ ]
      },
      {
        "name": "fileDescriptorMetrics",
        "parameterTypes": [ ]
      },
      {
        "name": "diskSpaceMetrics",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
        ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.orm.jpa.JpaDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "java.lang.module.Configuration",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.logging.logback.ColorConverter",
    "allPublicConstructors": true
  },
  {
    "name": "io.micrometer.core.instrument.binder.system.FileDescriptorMetrics",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.MethodParameter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.client.CommonsClientAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "java.util.UUID"
  },
  {
    "name": "com.david.vehicleservice.enumeration.BooleanEnum",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getValue",
        "parameterTypes": [ ]
      },
      {
        "name": "fromString",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.AbstractTimeLimiterConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.loadbalancer.cache.LoadBalancerCacheProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setCapacity",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getTtl",
        "parameterTypes": [ ]
      },
      {
        "name": "setCaffeine",
        "parameterTypes": [
          "org.springframework.cloud.loadbalancer.cache.LoadBalancerCacheProperties$Caffeine"
        ]
      },
      {
        "name": "getCapacity",
        "parameterTypes": [ ]
      },
      {
        "name": "getCaffeine",
        "parameterTypes": [ ]
      },
      {
        "name": "setTtl",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.core.support.TransactionalRepositoryFactoryBeanSupport",
    "allPublicMethods": true,
    "methods": [
      {
        "name": "setTransactionManager",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnableDefaultTransactions",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.springboot3.retry.autoconfigure.RetryConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "io.github.resilience4j.springboot3.retry.autoconfigure.RetryConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "io.micrometer.core.instrument.binder.logging.LogbackMetrics",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.http.MediaTypeEditor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFragment",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.HikariJdbcConnectionDetailsBeanPostProcessor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.netflix.appinfo.ApplicationInfoManager$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.bootstrap.encrypt.KeyProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setSalt",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFailOnError",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isFailOnError",
        "parameterTypes": [ ]
      },
      {
        "name": "getKey",
        "parameterTypes": [ ]
      },
      {
        "name": "setKeyStore",
        "parameterTypes": [
          "org.springframework.cloud.bootstrap.encrypt.KeyProperties$KeyStore"
        ]
      },
      {
        "name": "setKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getKeyStore",
        "parameterTypes": [ ]
      },
      {
        "name": "getSalt",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnBeanCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "namedParameterJdbcTemplate",
        "parameterTypes": [
          "org.springframework.jdbc.core.JdbcTemplate"
        ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimitersHealthIndicatorAutoConfiguration$$SpringCGLIB$$FastClass$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.netflix.appinfo.LeaseInfo",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.data.MetricsRepositoryMethodInvocationListenerBeanPostProcessor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "applicationTaskExecutor",
        "parameterTypes": [
          "org.springframework.boot.task.TaskExecutorBuilder"
        ]
      },
      {
        "name": "taskExecutorBuilder",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimitersHealthIndicatorAutoConfiguration$$SpringCGLIB$$FastClass$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.util.CustomCollections$EclipseCollections",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.slf4j.bridge.SLF4JBridgeHandler"
  },
  {
    "name": "org.springframework.boot.logging.LoggingSystemFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.multipart.support.StandardServletMultipartResolver",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.DispatcherServlet",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmGcMetrics",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Shutdown",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isAwaitTermination",
        "parameterTypes": [ ]
      },
      {
        "name": "setAwaitTerminationPeriod",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getAwaitTerminationPeriod",
        "parameterTypes": [ ]
      },
      {
        "name": "setAwaitTermination",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.codec.support.DefaultServerCodecConfigurer",
    "condition": {
      "typeReachable": "org.springframework.http.codec.CodecConfigurerFactory"
    },
    "allPublicConstructors": true
  },
  {
    "name": "java.util.Locale"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.web.tomcat.TomcatMetricsAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "tomcatMetricsBinder",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties",
          "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
        ]
      },
      {
        "name": "webMvcObservationFilter",
        "parameterTypes": [
          "io.micrometer.observation.ObservationRegistry",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.r2dbc.init.R2dbcScriptDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.servlet.handler.HandlerMappingIntrospector",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.david.vehicleservice.service.impl.VehicleServiceImpl",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "deleteById",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.Long",
          "com.david.vehicleservice.model.Vehicle"
        ]
      },
      {
        "name": "findById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Object"
        ]
      },
      {
        "name": "findById",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "deleteById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.david.vehicleservice.repository.VehicleRepository",
          "com.david.vehicleservice.service.PositionService"
        ]
      }
    ]
  },
  {
    "name": "io.swagger.v3.oas.models.media.Schema",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
          "org.springframework.boot.autoconfigure.web.WebProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ListableBeanFactory"
        ]
      },
      {
        "name": "themeResolver",
        "parameterTypes": [ ]
      },
      {
        "name": "mvcConversionService",
        "parameterTypes": [ ]
      },
      {
        "name": "localeResolver",
        "parameterTypes": [ ]
      },
      {
        "name": "mvcContentNegotiationManager",
        "parameterTypes": [ ]
      },
      {
        "name": "welcomePageHandlerMapping",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "flashMapManager",
        "parameterTypes": [ ]
      },
      {
        "name": "requestMappingHandlerAdapter",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.validation.Validator"
        ]
      },
      {
        "name": "welcomePageNotAcceptableHandlerMapping",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "mvcValidator",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "dataSourcePoolMetadataMeterBinder",
        "parameterTypes": [
          "java.util.Map",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.core.io.support.PropertiesLoaderSupport",
    "methods": [
      {
        "name": "setIgnoreResourceNotFound",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLocations",
        "parameterTypes": [
          "org.springframework.core.io.Resource[]"
        ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.AbstractCircuitBreakerConfigurationOnMissingBean",
    "queriedMethods": [
      {
        "name": "circuitBreakerRegistry",
        "parameterTypes": [
          "io.github.resilience4j.consumer.EventConsumerRegistry",
          "io.github.resilience4j.core.registry.RegistryEventConsumer",
          "io.github.resilience4j.common.CompositeCustomizer"
        ]
      },
      {
        "name": "circuitBreakerRegistryEventConsumer",
        "parameterTypes": [
          "java.util.Optional"
        ]
      },
      {
        "name": "compositeCircuitBreakerCustomizer",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "circuitBreakerAspect",
        "parameterTypes": [
          "io.github.resilience4j.circuitbreaker.CircuitBreakerRegistry",
          "java.util.List",
          "io.github.resilience4j.spring6.fallback.FallbackExecutor",
          "io.github.resilience4j.spring6.spelresolver.SpelResolver"
        ]
      }
    ]
  },
  {
    "name": "io.swagger.v3.oas.models.media.ByteArraySchema",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setInstances",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "getLocal",
        "parameterTypes": [ ]
      },
      {
        "name": "getOrder",
        "parameterTypes": [ ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getInstances",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerMetricsAutoConfiguration$$SpringCGLIB$$FastClass$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerMetricsAutoConfiguration$$SpringCGLIB$$FastClass$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration$StandardGsonBuilderCustomizer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.core.annotations.ParameterObject",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionEvaluationReportAutoConfigurationImportListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.PortInUseFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "jakarta.persistence.EntityManagerFactory",
    "condition": {
      "typeReachable": "org.springframework.orm.jpa.SharedEntityManagerCreator"
    },
    "methods": [
      {
        "name": "getMetamodel",
        "parameterTypes": [ ]
      },
      {
        "name": "getCriteriaBuilder",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.module.paramnames.ParameterNamesModule",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.netflix.eureka.EurekaHealthIndicator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.github.resilience4j.spring6.circuitbreaker.configure.CircuitBreakerAspect",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "circuitBreakerAroundAdvice",
        "parameterTypes": [
          "org.aspectj.lang.ProceedingJoinPoint",
          "io.github.resilience4j.circuitbreaker.annotation.CircuitBreaker"
        ]
      }
    ]
  },
  {
    "name": "java.lang.Void"
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "taskSchedulerBuilder",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.ServletRegistrationBean[]"
  },
  {
    "name": "io.github.resilience4j.common.retry.configuration.CommonRetryConfigurationProperties",
    "methods": [
      {
        "name": "getInstances",
        "parameterTypes": [ ]
      },
      {
        "name": "getBackends",
        "parameterTypes": [ ]
      },
      {
        "name": "getConfigs",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "loadBalancerClientsDefaultsMappingsProvider",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.web.config.SpringDataJacksonModules",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.domain.AbstractPersistable",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration$DataSourcePoolMetadataMeterBinder",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.webmvc.ui.SwaggerIndexTransformer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setAddMappings",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isAddMappings",
        "parameterTypes": [ ]
      },
      {
        "name": "getChain",
        "parameterTypes": [ ]
      },
      {
        "name": "setStaticLocations",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "getStaticLocations",
        "parameterTypes": [ ]
      },
      {
        "name": "getCache",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.jooq.JooqDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.client.RestTemplateObservationConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "observationRestTemplateCustomizer",
        "parameterTypes": [
          "io.micrometer.observation.ObservationRegistry",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties",
          "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.resource.ResourceUrlProvider",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      },
      {
        "name": "localeCharsetMappingsCustomizer",
        "parameterTypes": [ ]
      },
      {
        "name": "characterEncodingFilter",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.web.accept.ContentNegotiationManager",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BindValidationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "methodValidationPostProcessor",
        "parameterTypes": [
          "org.springframework.core.env.Environment",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "defaultValidator",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "io.swagger.v3.oas.models.media.UUIDSchema",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setDecodeUrl",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "isPreservePathOnForward",
        "parameterTypes": [ ]
      },
      {
        "name": "getOptions",
        "parameterTypes": [ ]
      },
      {
        "name": "setNoRequestTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getAccesslog",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxHttpPostSize",
        "parameterTypes": [ ]
      },
      {
        "name": "setEagerFilterInit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isEagerFilterInit",
        "parameterTypes": [ ]
      },
      {
        "name": "isAllowEncodedSlash",
        "parameterTypes": [ ]
      },
      {
        "name": "setPreservePathOnForward",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getNoRequestTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getDecodeSlash",
        "parameterTypes": [ ]
      },
      {
        "name": "setAllowEncodedSlash",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getUrlCharset",
        "parameterTypes": [ ]
      },
      {
        "name": "getThreads",
        "parameterTypes": [ ]
      },
      {
        "name": "setDirectBuffers",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setMaxHeaders",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getMaxHeaders",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxCookies",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "isAlwaysSetKeepAlive",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxParameters",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setBufferSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getMaxCookies",
        "parameterTypes": [ ]
      },
      {
        "name": "setAlwaysSetKeepAlive",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMaxHttpPostSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getDirectBuffers",
        "parameterTypes": [ ]
      },
      {
        "name": "getBufferSize",
        "parameterTypes": [ ]
      },
      {
        "name": "isDecodeUrl",
        "parameterTypes": [ ]
      },
      {
        "name": "setDecodeSlash",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getMaxParameters",
        "parameterTypes": [ ]
      },
      {
        "name": "setUrlCharset",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthContributor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.core.configuration.SpringDocConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "localSpringDocParameterNameDiscoverer",
        "parameterTypes": [ ]
      },
      {
        "name": "genericReturnTypeParser",
        "parameterTypes": [ ]
      },
      {
        "name": "schemaPropertyDeprecatingConverter",
        "parameterTypes": [ ]
      },
      {
        "name": "responseSupportConverter",
        "parameterTypes": [
          "org.springdoc.core.providers.ObjectMapperProvider"
        ]
      },
      {
        "name": "additionalModelsConverter",
        "parameterTypes": [
          "org.springdoc.core.providers.ObjectMapperProvider"
        ]
      },
      {
        "name": "operationBuilder",
        "parameterTypes": [
          "org.springdoc.core.service.GenericParameterService",
          "org.springdoc.core.service.RequestBodyService",
          "org.springdoc.core.service.SecurityService",
          "org.springdoc.core.utils.PropertyResolverUtils"
        ]
      },
      {
        "name": "fileSupportConverter",
        "parameterTypes": [
          "org.springdoc.core.providers.ObjectMapperProvider"
        ]
      },
      {
        "name": "springdocObjectMapperProvider",
        "parameterTypes": [
          "org.springdoc.core.properties.SpringDocConfigProperties"
        ]
      },
      {
        "name": "springDocProviders",
        "parameterTypes": [
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "org.springdoc.core.providers.ObjectMapperProvider"
        ]
      },
      {
        "name": "polymorphicModelConverter",
        "parameterTypes": [
          "org.springdoc.core.providers.ObjectMapperProvider"
        ]
      },
      {
        "name": "requestBodyBuilder",
        "parameterTypes": [
          "org.springdoc.core.service.GenericParameterService"
        ]
      },
      {
        "name": "propertyResolverUtils",
        "parameterTypes": [
          "org.springframework.beans.factory.config.ConfigurableBeanFactory",
          "org.springframework.context.MessageSource",
          "org.springdoc.core.properties.SpringDocConfigProperties"
        ]
      },
      {
        "name": "modelConverterRegistrar",
        "parameterTypes": [
          "java.util.Optional"
        ]
      },
      {
        "name": "parameterBuilder",
        "parameterTypes": [
          "org.springdoc.core.utils.PropertyResolverUtils",
          "java.util.Optional",
          "java.util.Optional",
          "org.springdoc.core.providers.ObjectMapperProvider",
          "java.util.Optional"
        ]
      },
      {
        "name": "openAPIBuilder",
        "parameterTypes": [
          "java.util.Optional",
          "org.springdoc.core.service.SecurityService",
          "org.springdoc.core.properties.SpringDocConfigProperties",
          "org.springdoc.core.utils.PropertyResolverUtils",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional"
        ]
      },
      {
        "name": "springDocCustomizers",
        "parameterTypes": [
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional"
        ]
      },
      {
        "name": "securityParser",
        "parameterTypes": [
          "org.springdoc.core.utils.PropertyResolverUtils"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setDirectory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isRotate",
        "parameterTypes": [ ]
      },
      {
        "name": "getFileDateFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMaxDays",
        "parameterTypes": [ ]
      },
      {
        "name": "setPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSuffix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBuffered",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIpv6Canonical",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isRequestAttributesEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setRotate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCheckExists",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getSuffix",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isIpv6Canonical",
        "parameterTypes": [ ]
      },
      {
        "name": "setConditionIf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getConditionUnless",
        "parameterTypes": [ ]
      },
      {
        "name": "setFileDateFormat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMaxDays",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setConditionUnless",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLocale",
        "parameterTypes": [ ]
      },
      {
        "name": "setRequestAttributesEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isCheckExists",
        "parameterTypes": [ ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": [ ]
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isRenameOnRotate",
        "parameterTypes": [ ]
      },
      {
        "name": "getConditionIf",
        "parameterTypes": [ ]
      },
      {
        "name": "getPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "isBuffered",
        "parameterTypes": [ ]
      },
      {
        "name": "setRenameOnRotate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getPattern",
        "parameterTypes": [ ]
      },
      {
        "name": "getDirectory",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$System$Diskspace",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getPaths",
        "parameterTypes": [ ]
      },
      {
        "name": "setPaths",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.domain.Sort",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "isUnsorted",
        "parameterTypes": [ ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": [ ]
      },
      {
        "name": "isSorted",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.validation.beanvalidation.LocalValidatorFactoryBean",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.github.resilience4j.retry.RetryRegistry",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.webmvc.core.configuration.SpringDocWebMvcConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "springWebProvider",
        "parameterTypes": [ ]
      },
      {
        "name": "responseBuilder",
        "parameterTypes": [
          "org.springdoc.core.service.OperationService",
          "java.util.List",
          "org.springdoc.core.properties.SpringDocConfigProperties",
          "org.springdoc.core.utils.PropertyResolverUtils"
        ]
      },
      {
        "name": "openApiResource",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectFactory",
          "org.springdoc.core.service.AbstractRequestService",
          "org.springdoc.core.service.GenericResponseService",
          "org.springdoc.core.service.OperationService",
          "org.springdoc.core.properties.SpringDocConfigProperties",
          "org.springdoc.core.providers.SpringDocProviders",
          "org.springdoc.core.customizers.SpringDocCustomizers"
        ]
      },
      {
        "name": "requestBuilder",
        "parameterTypes": [
          "org.springdoc.core.service.GenericParameterService",
          "org.springdoc.core.service.RequestBodyService",
          "org.springdoc.core.service.OperationService",
          "java.util.Optional",
          "org.springdoc.core.discoverer.SpringDocParameterNameDiscoverer"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.client.SimpleClientHttpRequestFactory",
    "condition": {
      "typeReachable": "java.net.HttpURLConnection"
    },
    "methods": [
      {
        "name": "setReadTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setConnectTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setBufferRequestBody",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$EurekaHealthIndicatorConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "eurekaHealthIndicator",
        "parameterTypes": [
          "com.netflix.discovery.EurekaClient",
          "com.netflix.appinfo.EurekaInstanceConfig",
          "com.netflix.discovery.EurekaClientConfig"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmCompilationMetrics",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.converter.json.MappingJackson2HttpMessageConverter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.configuration.CompatibilityNotMetFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.configuration.CompatibilityVerifierAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "springBootVersionVerifier",
        "parameterTypes": [
          "org.springframework.cloud.configuration.CompatibilityVerifierProperties"
        ]
      },
      {
        "name": "sleuthPresentVerifier",
        "parameterTypes": [ ]
      },
      {
        "name": "compositeCompatibilityVerifier",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.expression.spel.standard.SpelExpressionParser",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "restTemplateBuilderConfigurer",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "restTemplateBuilder",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration",
    "queriedMethods": [
      {
        "name": "setConfigurers",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "transactionalEventListenerFactory",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.netflix.eureka.EurekaDiscoveryClient",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setServer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      },
      {
        "name": "setInet",
        "parameterTypes": [
          "org.springframework.cloud.commons.util.InetUtils"
        ]
      },
      {
        "name": "simpleDiscoveryProperties",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "simpleDiscoveryClient",
        "parameterTypes": [
          "org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Mbeanregistry",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.availability.ApplicationAvailabilityBean",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.mapping.context.MappingContext",
    "allPublicMethods": true
  },
  {
    "name": "org.springdoc.core.converters.ModelConverterRegistrar",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterMetricsAutoConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "autoServiceRegistration"
      },
      {
        "name": "properties"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.ClassSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "jakarta.persistence.NamedEntityGraph",
    "condition": {
      "typeReachable": "org.springframework.data.jpa.repository.EntityGraph"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springdoc.webmvc.core.configuration.SpringDocWebMvcConfiguration$SpringDocWebMvcActuatorConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusMetricsExportAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "prometheusConfig",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties"
        ]
      },
      {
        "name": "collectorRegistry",
        "parameterTypes": [ ]
      },
      {
        "name": "prometheusMeterRegistry",
        "parameterTypes": [
          "io.micrometer.prometheus.PrometheusConfig",
          "io.prometheus.client.CollectorRegistry",
          "io.micrometer.core.instrument.Clock",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.flyway.FlywayDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "io.swagger.v3.core.jackson.PathsSerializer",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslBundleProperties",
    "methods": [
      {
        "name": "setProtocol",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getKey",
        "parameterTypes": [ ]
      },
      {
        "name": "getOptions",
        "parameterTypes": [ ]
      },
      {
        "name": "getProtocol",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.swagger.v3.oas.models.tags.Tag",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.core.jackson.mixin.OpenAPI31Mixin",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.hc.client5.http.impl.classic.HttpClients",
    "condition": {
      "typeReachable": "org.apache.hc.client5.http.impl.classic.HttpClients"
    }
  },
  {
    "name": "com.david.vehicleservice.modal.mapper.PositionMapperImpl",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.ServiceLevelObjectiveBoundary",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.metrics.MeterValue"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.metrics.web.tomcat.TomcatMetricsBinder",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.RestTemplateCustomizer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.logging.java.JavaLoggingSystem$Factory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springdoc.core.converters.models.Pageable",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.servlet.ControllerEndpointHandlerMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.util.PathMatcher",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.HttpEntity",
    "methods": [
      {
        "name": "getBody",
        "parameterTypes": [ ]
      },
      {
        "name": "getHeaders",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimitersHealthIndicatorAutoConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.swagger.v3.oas.models.parameters.QueryParameter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.observation.DefaultMeterObservationHandler",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.core.configuration.SpringDocConfiguration$QuerydslProvider",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "queryDslQuerydslPredicateOperationCustomizer",
        "parameterTypes": [
          "java.util.Optional"
        ]
      }
    ]
  },
  {
    "name": "com.netflix.discovery.converters.jackson.mixin.InstanceInfoJsonMixIn",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.HandlerMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.SortHandlerMethodArgumentResolver",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setMappingContext",
        "parameterTypes": [
          "org.springframework.data.mapping.context.MappingContext"
        ]
      },
      {
        "name": "setEntityManager",
        "parameterTypes": [
          "jakarta.persistence.EntityManager"
        ]
      },
      {
        "name": "setEscapeCharacter",
        "parameterTypes": [
          "char"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setEntityPathResolver",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "setQueryMethodFactory",
        "parameterTypes": [
          "org.springframework.data.jpa.repository.query.JpaQueryMethodFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.openfeign.FeignClientFactory",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.env.PropertiesPropertySourceLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.ApplicationContextFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.postgresql.ds.PGSimpleDataSource",
    "allPublicConstructors": true
  },
  {
    "name": "org.springdoc.core.properties.SpringDocConfigProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setPathsToExclude",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setRemoveBrokenReferenceDefinitions",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnableKotlin",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setApiDocs",
        "parameterTypes": [
          "org.springdoc.core.properties.SpringDocConfigProperties$ApiDocs"
        ]
      },
      {
        "name": "setUseFqn",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setModelConverters",
        "parameterTypes": [
          "org.springdoc.core.properties.SpringDocConfigProperties$ModelConverters"
        ]
      },
      {
        "name": "setConsumesToMatch",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setProducesToMatch",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setWriterWithDefaultPrettyPrinter",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getPackagesToExclude",
        "parameterTypes": [ ]
      },
      {
        "name": "setPackagesToScan",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "isModelAndViewAllowed",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnableSpringSecurity",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDefaultProducesMediaType",
        "parameterTypes": [ ]
      },
      {
        "name": "setDisableI18n",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getApiDocs",
        "parameterTypes": [ ]
      },
      {
        "name": "setPathsToMatch",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "isUseManagementPort",
        "parameterTypes": [ ]
      },
      {
        "name": "isWriterWithOrderByKeys",
        "parameterTypes": [ ]
      },
      {
        "name": "isShowSpringCloudFunctions",
        "parameterTypes": [ ]
      },
      {
        "name": "isDefaultOverrideWithGenericResponse",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnableDataRest",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getPreLoadingLocales",
        "parameterTypes": [ ]
      },
      {
        "name": "setDefaultFlatParamObject",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getPathsToExclude",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnableHateoas",
        "parameterTypes": [ ]
      },
      {
        "name": "getCache",
        "parameterTypes": [ ]
      },
      {
        "name": "isShowLoginEndpoint",
        "parameterTypes": [ ]
      },
      {
        "name": "getGroupConfigs",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnableJavadoc",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseManagementPort",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPreLoadingEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getSortConverter",
        "parameterTypes": [ ]
      },
      {
        "name": "getOverrideWithGenericResponse",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnableGroovy",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setShowSpringCloudFunctions",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isRemoveBrokenReferenceDefinitions",
        "parameterTypes": [ ]
      },
      {
        "name": "getModelConverters",
        "parameterTypes": [ ]
      },
      {
        "name": "isCacheDisabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setGroupConfigs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "isDefaultFlatParamObject",
        "parameterTypes": [ ]
      },
      {
        "name": "isPreLoadingEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnableKotlin",
        "parameterTypes": [ ]
      },
      {
        "name": "setDefaultSupportFormData",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isEnableJavadoc",
        "parameterTypes": [ ]
      },
      {
        "name": "setWriterWithOrderByKeys",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getPackagesToScan",
        "parameterTypes": [ ]
      },
      {
        "name": "getWebjars",
        "parameterTypes": [ ]
      },
      {
        "name": "setAutoTagClasses",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPreLoadingLocales",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "isDisableI18n",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnableSpringSecurity",
        "parameterTypes": [ ]
      },
      {
        "name": "isWriterWithDefaultPrettyPrinter",
        "parameterTypes": [ ]
      },
      {
        "name": "setNullableRequestParameterEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setShowActuator",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setHeadersToMatch",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getDefaultConsumesMediaType",
        "parameterTypes": [ ]
      },
      {
        "name": "setSortConverter",
        "parameterTypes": [
          "org.springdoc.core.properties.SpringDocConfigProperties$SortConverter"
        ]
      },
      {
        "name": "getHeadersToMatch",
        "parameterTypes": [ ]
      },
      {
        "name": "setOverrideWithGenericResponse",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setEnableHateoas",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCache",
        "parameterTypes": [
          "org.springdoc.core.properties.SpringDocConfigProperties$Cache"
        ]
      },
      {
        "name": "isShowOauth2Endpoints",
        "parameterTypes": [ ]
      },
      {
        "name": "getConsumesToMatch",
        "parameterTypes": [ ]
      },
      {
        "name": "isUseFqn",
        "parameterTypes": [ ]
      },
      {
        "name": "isDefaultSupportFormData",
        "parameterTypes": [ ]
      },
      {
        "name": "isShowActuator",
        "parameterTypes": [ ]
      },
      {
        "name": "setDefaultConsumesMediaType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isNullableRequestParameterEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnableGroovy",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnableDataRest",
        "parameterTypes": [ ]
      },
      {
        "name": "setWebjars",
        "parameterTypes": [
          "org.springdoc.core.properties.SpringDocConfigProperties$Webjars"
        ]
      },
      {
        "name": "isAutoTagClasses",
        "parameterTypes": [ ]
      },
      {
        "name": "setShowLoginEndpoint",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getPathsToMatch",
        "parameterTypes": [ ]
      },
      {
        "name": "setDefaultProducesMediaType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPackagesToExclude",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getProducesToMatch",
        "parameterTypes": [ ]
      },
      {
        "name": "setShowOauth2Endpoints",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setModelAndViewAllowed",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "io.swagger.v3.oas.models.media.ComposedSchema",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springdoc.core.providers.SpringDocProviders",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.david.vehicleservice.model.Position",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "vehicle"
      }
    ],
    "methods": [
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setVelociadde",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": [ ]
      },
      {
        "name": "setLongitude",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "getLongitude",
        "parameterTypes": [ ]
      },
      {
        "name": "getVehicle",
        "parameterTypes": [ ]
      },
      {
        "name": "getDataPosicao",
        "parameterTypes": [ ]
      },
      {
        "name": "setIgnicao",
        "parameterTypes": [
          "com.david.vehicleservice.enumeration.BooleanEnum"
        ]
      },
      {
        "name": "setLatitude",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setDataPosicao",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "getIgnicao",
        "parameterTypes": [ ]
      },
      {
        "name": "getVelociadde",
        "parameterTypes": [ ]
      },
      {
        "name": "getLatitude",
        "parameterTypes": [ ]
      },
      {
        "name": "setVehicle",
        "parameterTypes": [
          "com.david.vehicleservice.model.Vehicle"
        ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterAutoConfiguration$TimeLimiterAutoEndpointConfiguration$$SpringCGLIB$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.metrics.data.DefaultRepositoryTagsProvider",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Session$Cookie",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getComment",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.ReactiveCommonsClientAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setPropertyNamingStrategy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getConstructorDetector",
        "parameterTypes": [ ]
      },
      {
        "name": "getParser",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocale",
        "parameterTypes": [ ]
      },
      {
        "name": "getGenerator",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultPropertyInclusion",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultLeniency",
        "parameterTypes": [ ]
      },
      {
        "name": "getDeserialization",
        "parameterTypes": [ ]
      },
      {
        "name": "setDateFormat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMapper",
        "parameterTypes": [ ]
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "java.util.Locale"
        ]
      },
      {
        "name": "getPropertyNamingStrategy",
        "parameterTypes": [ ]
      },
      {
        "name": "getTimeZone",
        "parameterTypes": [ ]
      },
      {
        "name": "setTimeZone",
        "parameterTypes": [
          "java.util.TimeZone"
        ]
      },
      {
        "name": "setDefaultLeniency",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getVisibility",
        "parameterTypes": [ ]
      },
      {
        "name": "setConstructorDetector",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.jackson.JacksonProperties$ConstructorDetectorStrategy"
        ]
      },
      {
        "name": "getDateFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "setDefaultPropertyInclusion",
        "parameterTypes": [
          "com.fasterxml.jackson.annotation.JsonInclude$Include"
        ]
      },
      {
        "name": "getSerialization",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.context.refresh.ConfigDataContextRefresher",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "parameterNamesModule",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.SyslogStartConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.MultipleConnectionPoolConfigurationsFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration$OnlyMetricsMeterObservationHandlerConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "defaultMeterObservationHandler",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthEndpoint",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "healthForPath",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "health",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.context.ApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Problemdetails",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.swagger.v3.oas.models.Paths",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$HikariDataSourceMetricsConfiguration$HikariDataSourceMeterBinder",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.SpringBootExceptionReporter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Git",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "org.springframework.core.io.Resource"
        ]
      },
      {
        "name": "getLocation",
        "parameterTypes": [ ]
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.openfeign.FeignClientProperties$MicrometerProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getEnabled",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.client.RestTemplateRequestCustomizer[]"
  },
  {
    "name": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterMetricsAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "taggedTimeLimiterMetricsPublisher",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointFilter",
    "allDeclaredConstructors": true
  },
  {
    "name": "jakarta.persistence.EntityManager",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmInfoMetrics",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthContributorAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "dbHealthContributor",
        "parameterTypes": [
          "java.util.Map",
          "org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthIndicatorProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.netflix.eureka.http.EurekaClientHttpRequestFactorySupplier",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.NoSuchMethodFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterAutoConfiguration$TimeLimiterAutoEndpointConfiguration$$SpringCGLIB$$FastClass$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterAutoConfiguration$TimeLimiterAutoEndpointConfiguration$$SpringCGLIB$$FastClass$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "java.lang.Throwable",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "java.time.LocalDateTime"
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties"
        ]
      },
      {
        "name": "sortCustomizer",
        "parameterTypes": [ ]
      },
      {
        "name": "pageableCustomizer",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$HealthCheck",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getPath",
        "parameterTypes": [ ]
      },
      {
        "name": "setRepeatHealthCheck",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRefetchInstancesInterval",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "isUpdateResultsList",
        "parameterTypes": [ ]
      },
      {
        "name": "getRefetchInstances",
        "parameterTypes": [ ]
      },
      {
        "name": "setRefetchInstances",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "getPort",
        "parameterTypes": [ ]
      },
      {
        "name": "getInterval",
        "parameterTypes": [ ]
      },
      {
        "name": "setInitialDelay",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getRefetchInstancesInterval",
        "parameterTypes": [ ]
      },
      {
        "name": "getRepeatHealthCheck",
        "parameterTypes": [ ]
      },
      {
        "name": "setUpdateResultsList",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getInitialDelay",
        "parameterTypes": [ ]
      },
      {
        "name": "setInterval",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.StandardConfigDataLocationResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.loadbalancer.config.LoadBalancerZoneConfig",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.netflix.appinfo.DataCenterInfo",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "tomcatWebServerFactoryCustomizer",
        "parameterTypes": [
          "org.springframework.core.env.Environment",
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.openfeign.support.FeignHttpClientProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectionTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "setConnectionTimerRepeat",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getMaxConnections",
        "parameterTypes": [ ]
      },
      {
        "name": "setFollowRedirects",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isFollowRedirects",
        "parameterTypes": [ ]
      },
      {
        "name": "setOkHttp",
        "parameterTypes": [
          "org.springframework.cloud.openfeign.support.FeignHttpClientProperties$OkHttp"
        ]
      },
      {
        "name": "setMaxConnectionsPerRoute",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getHc5",
        "parameterTypes": [ ]
      },
      {
        "name": "setTimeToLiveUnit",
        "parameterTypes": [
          "java.util.concurrent.TimeUnit"
        ]
      },
      {
        "name": "setDisableSslValidation",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getTimeToLiveUnit",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxConnectionsPerRoute",
        "parameterTypes": [ ]
      },
      {
        "name": "setHc5",
        "parameterTypes": [
          "org.springframework.cloud.openfeign.support.FeignHttpClientProperties$Hc5Properties"
        ]
      },
      {
        "name": "getOkHttp",
        "parameterTypes": [ ]
      },
      {
        "name": "setTimeToLive",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setMaxConnections",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isDisableSslValidation",
        "parameterTypes": [ ]
      },
      {
        "name": "getTimeToLive",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectionTimerRepeat",
        "parameterTypes": [ ]
      },
      {
        "name": "setConnectionTimeout",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointFilter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.EnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.core.customizers.QuerydslPredicateOperationCustomizer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakersHealthIndicatorAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.openfeign.loadbalancer.FeignLoadBalancerAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "xForwarderHeadersFeignTransformer",
        "parameterTypes": [
          "org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.jdbc.SpringJdbcDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "io.github.resilience4j.common.circuitbreaker.configuration.CommonCircuitBreakerConfigurationProperties$InstanceProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getSlowCallRateThreshold",
        "parameterTypes": [ ]
      },
      {
        "name": "setBaseConfig",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMaxWaitDurationInHalfOpenState",
        "parameterTypes": [ ]
      },
      {
        "name": "setRandomizedWaitFactor",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setMaxWaitDurationInHalfOpenState",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setEnableExponentialBackoff",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSlowCallDurationThreshold",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getEnableRandomizedWait",
        "parameterTypes": [ ]
      },
      {
        "name": "setEventConsumerBufferSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setExponentialBackoffMultiplier",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "getRecordResultPredicate",
        "parameterTypes": [ ]
      },
      {
        "name": "setFailureRateThreshold",
        "parameterTypes": [
          "java.lang.Float"
        ]
      },
      {
        "name": "setPermittedNumberOfCallsInHalfOpenState",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getSlidingWindowType",
        "parameterTypes": [ ]
      },
      {
        "name": "getSlidingWindowSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getAllowHealthIndicatorToFail",
        "parameterTypes": [ ]
      },
      {
        "name": "getExponentialMaxWaitDurationInOpenState",
        "parameterTypes": [ ]
      },
      {
        "name": "setAutomaticTransitionFromOpenToHalfOpenEnabled",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setEnableRandomizedWait",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSlidingWindowType",
        "parameterTypes": [
          "io.github.resilience4j.circuitbreaker.CircuitBreakerConfig$SlidingWindowType"
        ]
      },
      {
        "name": "setMinimumNumberOfCalls",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setWritableStackTraceEnabled",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setIgnoreExceptionPredicate",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getPermittedNumberOfCallsInHalfOpenState",
        "parameterTypes": [ ]
      },
      {
        "name": "getMinimumNumberOfCalls",
        "parameterTypes": [ ]
      },
      {
        "name": "setRecordExceptions",
        "parameterTypes": [
          "java.lang.Class[]"
        ]
      },
      {
        "name": "getRandomizedWaitFactor",
        "parameterTypes": [ ]
      },
      {
        "name": "setSlowCallRateThreshold",
        "parameterTypes": [
          "java.lang.Float"
        ]
      },
      {
        "name": "getFailureRateThreshold",
        "parameterTypes": [ ]
      },
      {
        "name": "getEventConsumerBufferSize",
        "parameterTypes": [ ]
      },
      {
        "name": "setSlidingWindowSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setExponentialMaxWaitDurationInOpenState",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getEnableExponentialBackoff",
        "parameterTypes": [ ]
      },
      {
        "name": "getWritableStackTraceEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "getIgnoreExceptions",
        "parameterTypes": [ ]
      },
      {
        "name": "setRecordResultPredicate",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setWaitDurationInOpenState",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getSlowCallDurationThreshold",
        "parameterTypes": [ ]
      },
      {
        "name": "getWaitDurationInOpenState",
        "parameterTypes": [ ]
      },
      {
        "name": "setRegisterHealthIndicator",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setIgnoreExceptions",
        "parameterTypes": [
          "java.lang.Class[]"
        ]
      },
      {
        "name": "getAutomaticTransitionFromOpenToHalfOpenEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "getRegisterHealthIndicator",
        "parameterTypes": [ ]
      },
      {
        "name": "getRecordFailurePredicate",
        "parameterTypes": [ ]
      },
      {
        "name": "getIgnoreExceptionPredicate",
        "parameterTypes": [ ]
      },
      {
        "name": "setRecordFailurePredicate",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getBaseConfig",
        "parameterTypes": [ ]
      },
      {
        "name": "getExponentialBackoffMultiplier",
        "parameterTypes": [ ]
      },
      {
        "name": "getRecordExceptions",
        "parameterTypes": [ ]
      },
      {
        "name": "setAllowHealthIndicatorToFail",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "io.swagger.v3.oas.models.parameters.CookieParameter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getGit",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.support.TransactionTemplate",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.github.resilience4j.micrometer.tagged.TaggedCircuitBreakerMetricsPublisher",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.MeterRegistry",
    "methods": [
      {
        "name": "close",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.DependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy",
    "allDeclaredConstructors": true
  },
  {
    "name": "io.swagger.v3.core.jackson.mixin.MediaTypeMixin",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.micrometer.prometheus.PrometheusConfig",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.core.converter.ModelConverter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Server",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxUriTags",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getMaxUriTags",
        "parameterTypes": [ ]
      },
      {
        "name": "getRequest",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.swagger.v3.oas.models.media.EncodingProperty",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "feign.Client",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.MissingR2dbcPoolDependencyFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration$HealthEndpointGroupsBeanPostProcessor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "transformers"
      },
      {
        "name": "restTemplates"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "loadBalancedRestTemplateInitializerDeprecated",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "loadBalancerRequestFactory",
        "parameterTypes": [
          "org.springframework.cloud.client.loadbalancer.LoadBalancerClient"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.ContentDisposition",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getFilename",
        "parameterTypes": [ ]
      },
      {
        "name": "getCharset",
        "parameterTypes": [ ]
      },
      {
        "name": "isFormData",
        "parameterTypes": [ ]
      },
      {
        "name": "getType",
        "parameterTypes": [ ]
      },
      {
        "name": "getModificationDate",
        "parameterTypes": [ ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "isAttachment",
        "parameterTypes": [ ]
      },
      {
        "name": "getReadDate",
        "parameterTypes": [ ]
      },
      {
        "name": "getSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getCreationDate",
        "parameterTypes": [ ]
      },
      {
        "name": "isInline",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.hibernate.service.jta.platform.internal.NoJtaPlatform",
    "allDeclaredConstructors": true
  },
  {
    "name": "io.github.resilience4j.spring6.retry.configure.RetryAspect",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "retryAroundAdvice",
        "parameterTypes": [
          "org.aspectj.lang.ProceedingJoinPoint",
          "io.github.resilience4j.retry.annotation.Retry"
        ]
      },
      {
        "name": "close",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean",
    "allPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "java.time.Duration"
  },
  {
    "name": "com.david.vehicleservice.VehicleServiceApplication",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.netflix.discovery.EurekaClient",
    "allPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "shutdown",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerConfigurationOnMissingBean",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "io.github.resilience4j.spring6.circuitbreaker.configure.CircuitBreakerConfigurationProperties"
        ]
      },
      {
        "name": "eventConsumerRegistry",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.reactor.DebugAgentEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.domain.Pageable",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getPageSize",
        "parameterTypes": [ ]
      },
      {
        "name": "isUnpaged",
        "parameterTypes": [ ]
      },
      {
        "name": "isPaged",
        "parameterTypes": [ ]
      },
      {
        "name": "getSort",
        "parameterTypes": [ ]
      },
      {
        "name": "getOffset",
        "parameterTypes": [ ]
      },
      {
        "name": "getPageNumber",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Session",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCookie",
        "parameterTypes": [ ]
      },
      {
        "name": "isPersistent",
        "parameterTypes": [ ]
      },
      {
        "name": "getTrackingModes",
        "parameterTypes": [ ]
      },
      {
        "name": "getStoreDir",
        "parameterTypes": [ ]
      },
      {
        "name": "setTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setStoreDir",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "setPersistent",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getSessionStoreDirectory",
        "parameterTypes": [ ]
      },
      {
        "name": "setTrackingModes",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "com.david.vehicleservice.repository.PositionRepository",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyNameFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "io.github.resilience4j.ratelimiter.RateLimiterRegistry",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "platformTransactionManagerCustomizers",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.springboot3.retry.autoconfigure.RetryConfigurationOnMissingBean$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.servlet.AdditionalHealthEndpointPathsWebMvcHandlerMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.WebProperties",
          "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
          "org.springframework.beans.factory.ListableBeanFactory",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "viewResolver",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "requestContextFilter",
        "parameterTypes": [ ]
      },
      {
        "name": "defaultViewResolver",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springdoc.api.ErrorMessage",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "setMessage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMessage",
        "parameterTypes": [ ]
      },
      {
        "name": "getId",
        "parameterTypes": [ ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.util.UUID"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Netty",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setIdleTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setConnectionTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setH2cMaxContentLength",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getH2cMaxContentLength",
        "parameterTypes": [ ]
      },
      {
        "name": "getIdleTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxKeepAliveRequests",
        "parameterTypes": [ ]
      },
      {
        "name": "isValidateHeaders",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxChunkSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getInitialBufferSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxChunkSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectionTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "setValidateHeaders",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMaxInitialLineLength",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setInitialBufferSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getMaxInitialLineLength",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxKeepAliveRequests",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.ManagementContextFactory",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerAutoConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.providers.SpringWebProvider",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.format.support.FormattingConversionService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration$MeterFilterConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "metricsHttpServerUriTagFilter",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties",
          "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.properties.AbstractSwaggerUiConfigProperties$SwaggerUrl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "getDisplayName",
        "parameterTypes": [ ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUrl",
        "parameterTypes": [ ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor",
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.http.converter.StringHttpMessageConverter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.metrics.web.client.ObservationRestTemplateCustomizer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.util.ProxyUtils$ProxyDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.servlet.HandlerExceptionResolver",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setRejectIllegalHeader",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUriEncoding",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "getThreads",
        "parameterTypes": [ ]
      },
      {
        "name": "setRelaxedQueryChars",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getRelaxedQueryChars",
        "parameterTypes": [ ]
      },
      {
        "name": "setBasedir",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "isUseRelativeRedirects",
        "parameterTypes": [ ]
      },
      {
        "name": "setUseRelativeRedirects",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getMaxSwallowSize",
        "parameterTypes": [ ]
      },
      {
        "name": "setKeepAliveTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getMbeanregistry",
        "parameterTypes": [ ]
      },
      {
        "name": "getBasedir",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxConnections",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxSwallowSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getRelaxedPathChars",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeepAliveTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "setRedirectContextRoot",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getMaxHttpFormPostSize",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxHttpResponseHeaderSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getBackgroundProcessorDelay",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxKeepAliveRequests",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setConnectionTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setAdditionalTldSkipPatterns",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setBackgroundProcessorDelay",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getMaxKeepAliveRequests",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxHttpFormPostSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getMaxHttpResponseHeaderSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getRedirectContextRoot",
        "parameterTypes": [ ]
      },
      {
        "name": "setAcceptCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getResource",
        "parameterTypes": [ ]
      },
      {
        "name": "getProcessorCache",
        "parameterTypes": [ ]
      },
      {
        "name": "isRejectIllegalHeader",
        "parameterTypes": [ ]
      },
      {
        "name": "getAccesslog",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxConnections",
        "parameterTypes": [ ]
      },
      {
        "name": "setRelaxedPathChars",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getRemoteip",
        "parameterTypes": [ ]
      },
      {
        "name": "getUriEncoding",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectionTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getAdditionalTldSkipPatterns",
        "parameterTypes": [ ]
      },
      {
        "name": "setProcessorCache",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getAcceptCount",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.springboot3.retry.autoconfigure.RetryAutoConfiguration$RetryAutoEndpointConfiguration",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthComponent",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getStatus",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.projection.SpelEvaluatingMethodInterceptor$TargetWrapper",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.client.actuator.HasFeatures",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.validation.Validator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.HttpCodeStatusMapper",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.PropertyNamingStrategies",
    "fields": [
      {
        "name": "LOWER_DOT_CASE"
      },
      {
        "name": "KEBAB_CASE"
      },
      {
        "name": "LOWER_CASE"
      },
      {
        "name": "UPPER_CAMEL_CASE"
      },
      {
        "name": "SNAKE_CASE"
      },
      {
        "name": "LOWER_CAMEL_CASE"
      },
      {
        "name": "UPPER_SNAKE_CASE"
      }
    ]
  },
  {
    "name": "com.netflix.discovery.converters.jackson.DataCenterTypeInfoResolver",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.data.web.PageableHandlerMethodArgumentResolver",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.bootstrap.RefreshBootstrapRegistryInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "io.github.resilience4j.core.registry.RegistryEventConsumer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterAutoConfiguration$TimeLimiterAutoEndpointConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.servlet.ManagementServletContext",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.core.service.GenericParameterService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "healthEndpointWebExtension",
        "parameterTypes": [
          "org.springframework.boot.actuate.health.HealthContributorRegistry",
          "org.springframework.boot.actuate.health.HealthEndpointGroups",
          "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.view.ContentNegotiatingViewResolver",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.core.extractor.DelegatingMethodParameter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "javax.sql.DataSource",
          "org.springframework.boot.autoconfigure.orm.jpa.JpaProperties",
          "org.springframework.beans.factory.config.ConfigurableListableBeanFactory",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "com.netflix.discovery.shared.transport.EurekaHttpResponse",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.media.FileSchema",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.responses.ApiResponses",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getClients",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.properties.AbstractSwaggerUiConfigProperties",
    "methods": [
      {
        "name": "setPersistAuthorization",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setFilter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setShowCommonExtensions",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDocExpansion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDefaultModelsExpandDepth",
        "parameterTypes": [ ]
      },
      {
        "name": "setOperationsSorter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConfigUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMaxDisplayedTags",
        "parameterTypes": [ ]
      },
      {
        "name": "setDefaultModelsExpandDepth",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getUrl",
        "parameterTypes": [ ]
      },
      {
        "name": "setDefaultModelExpandDepth",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getOperationsSorter",
        "parameterTypes": [ ]
      },
      {
        "name": "getTryItOutEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUrls",
        "parameterTypes": [ ]
      },
      {
        "name": "getDeepLinking",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultModelRendering",
        "parameterTypes": [ ]
      },
      {
        "name": "getShowCommonExtensions",
        "parameterTypes": [ ]
      },
      {
        "name": "getGroupsOrder",
        "parameterTypes": [ ]
      },
      {
        "name": "setSupportedSubmitMethods",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getPersistAuthorization",
        "parameterTypes": [ ]
      },
      {
        "name": "getPath",
        "parameterTypes": [ ]
      },
      {
        "name": "setTagsSorter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUrls",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setDefaultModelRendering",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLayout",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getShowExtensions",
        "parameterTypes": [ ]
      },
      {
        "name": "setDeepLinking",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getDefaultModelExpandDepth",
        "parameterTypes": [ ]
      },
      {
        "name": "setGroupsOrder",
        "parameterTypes": [
          "org.springdoc.core.properties.AbstractSwaggerUiConfigProperties$Direction"
        ]
      },
      {
        "name": "getWithCredentials",
        "parameterTypes": [ ]
      },
      {
        "name": "setTryItOutEnabled",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setUrlsPrimaryName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLayout",
        "parameterTypes": [ ]
      },
      {
        "name": "getConfigUrl",
        "parameterTypes": [ ]
      },
      {
        "name": "getTagsSorter",
        "parameterTypes": [ ]
      },
      {
        "name": "setOauth2RedirectUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDisplayOperationId",
        "parameterTypes": [ ]
      },
      {
        "name": "getDocExpansion",
        "parameterTypes": [ ]
      },
      {
        "name": "getOauth2RedirectUrl",
        "parameterTypes": [ ]
      },
      {
        "name": "setDisplayRequestDuration",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setWithCredentials",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getQueryConfigEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setShowExtensions",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setValidatorUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFilter",
        "parameterTypes": [ ]
      },
      {
        "name": "getDisplayRequestDuration",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxDisplayedTags",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSupportedSubmitMethods",
        "parameterTypes": [ ]
      },
      {
        "name": "setQueryConfigEnabled",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getValidatorUrl",
        "parameterTypes": [ ]
      },
      {
        "name": "getUrlsPrimaryName",
        "parameterTypes": [ ]
      },
      {
        "name": "setDisplayOperationId",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$OnlyMetricsConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "metricsObservationHandlerGrouping",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.swagger.v3.core.jackson.mixin.OperationMixin",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.netflix.eureka.config.EurekaConfigServerBootstrapConfiguration",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springdoc.core.service.OperationService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.MessageSourceProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCacheDuration",
        "parameterTypes": [ ]
      },
      {
        "name": "setUseCodeAsDefaultMessage",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": [ ]
      },
      {
        "name": "isUseCodeAsDefaultMessage",
        "parameterTypes": [ ]
      },
      {
        "name": "getBasename",
        "parameterTypes": [ ]
      },
      {
        "name": "isAlwaysUseMessageFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "setBasename",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCacheDuration",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setFallbackToSystemLocale",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setAlwaysUseMessageFormat",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isFallbackToSystemLocale",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "standardJacksonObjectMapperBuilderCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jooq.NoDslContextBeanFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$Retry$Backoff",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setJitter",
        "parameterTypes": [
          "double"
        ]
      },
      {
        "name": "getMaxBackoff",
        "parameterTypes": [ ]
      },
      {
        "name": "getJitter",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxBackoff",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setMinBackoff",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getMinBackoff",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.spring6.circuitbreaker.configure.CircuitBreakerConfigurationProperties",
    "methods": [
      {
        "name": "setCircuitBreakerAspectOrder",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getCircuitBreakerAspectOrder",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.FileSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "io.github.resilience4j.spring6.fallback.FallbackExecutor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerAutoConfiguration$CircuitBreakerEndpointAutoConfiguration$$SpringCGLIB$$FastClass$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerAutoConfiguration$CircuitBreakerEndpointAutoConfiguration$$SpringCGLIB$$FastClass$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springdoc.core.configuration.SpringDocConfiguration$SpringDocSpringDataWebPropertiesProvider",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "springDataWebPropertiesProvider",
        "parameterTypes": [
          "java.util.Optional"
        ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicLongSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BeanNotOfRequiredTypeFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.google.gson.GsonBuilder",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.HikariDriverConfigurationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springdoc.core.converters.FileSupportConverter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.core.properties.SpringDocConfigProperties$ModelConverters$PageableConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.domain.support.AuditingEntityListener",
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "setFilename",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFormat",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog$FORMAT"
        ]
      },
      {
        "name": "isAppend",
        "parameterTypes": [ ]
      },
      {
        "name": "getFilename",
        "parameterTypes": [ ]
      },
      {
        "name": "setIgnorePaths",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAppend",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRetentionPeriod",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getCustomFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "getIgnorePaths",
        "parameterTypes": [ ]
      },
      {
        "name": "getFileDateFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "getRetentionPeriod",
        "parameterTypes": [ ]
      },
      {
        "name": "setCustomFormat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFileDateFormat",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "sslPropertiesSslBundleRegistrar",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.ssl.SslProperties"
        ]
      },
      {
        "name": "sslBundleRegistry",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.env.EnvironmentPostProcessorApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.ValidationExceptionFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.http.converter.HttpMessageConverter[]"
  },
  {
    "name": "com.david.vehicleservice.VehicleServiceApplication$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.swagger.v3.oas.models.parameters.RequestBody",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration$ServiceRegistryEndpointConfiguration",
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "registration"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "dataSourceScriptDatabaseInitializer",
        "parameterTypes": [
          "javax.sql.DataSource",
          "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties"
        ]
      }
    ]
  },
  {
    "name": "io.swagger.v3.oas.models.ExternalDocumentation",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "defaultEurekaClientHttpRequestFactorySupplier",
        "parameterTypes": [
          "org.springframework.cloud.netflix.eureka.RestTemplateTimeoutProperties"
        ]
      },
      {
        "name": "restTemplateDiscoveryClientOptionalArgs",
        "parameterTypes": [
          "org.springframework.cloud.configuration.TlsProperties",
          "org.springframework.cloud.netflix.eureka.http.EurekaClientHttpRequestFactorySupplier"
        ]
      },
      {
        "name": "restTemplateTransportClientFactories",
        "parameterTypes": [
          "org.springframework.cloud.netflix.eureka.http.RestTemplateDiscoveryClientOptionalArgs"
        ]
      },
      {
        "name": "tlsProperties",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterAutoConfiguration$RateLimiterEndpointAutoConfiguration$$SpringCGLIB$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "byte[]"
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConverters",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "healthHttpCodeStatusMapper",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
        ]
      },
      {
        "name": "healthContributorRegistry",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.actuate.health.HealthEndpointGroups",
          "java.util.Map",
          "java.util.Map"
        ]
      },
      {
        "name": "healthEndpointGroups",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
        ]
      },
      {
        "name": "healthEndpointGroupMembershipValidator",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties",
          "org.springframework.boot.actuate.health.HealthContributorRegistry"
        ]
      },
      {
        "name": "healthEndpointGroupsBeanPostProcessor",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "healthEndpoint",
        "parameterTypes": [
          "org.springframework.boot.actuate.health.HealthContributorRegistry",
          "org.springframework.boot.actuate.health.HealthEndpointGroups",
          "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
        ]
      },
      {
        "name": "healthStatusAggregator",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isCallGetWithRequestOnDelegates",
        "parameterTypes": [ ]
      },
      {
        "name": "setRetry",
        "parameterTypes": [
          "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$Retry"
        ]
      },
      {
        "name": "getRetry",
        "parameterTypes": [ ]
      },
      {
        "name": "setHealthCheck",
        "parameterTypes": [
          "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$HealthCheck"
        ]
      },
      {
        "name": "setCallGetWithRequestOnDelegates",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getHintHeaderName",
        "parameterTypes": [ ]
      },
      {
        "name": "getHealthCheck",
        "parameterTypes": [ ]
      },
      {
        "name": "setxForwarded",
        "parameterTypes": [
          "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$XForwarded"
        ]
      },
      {
        "name": "getStickySession",
        "parameterTypes": [ ]
      },
      {
        "name": "setHintHeaderName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHint",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setStickySession",
        "parameterTypes": [
          "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$StickySession"
        ]
      },
      {
        "name": "getHint",
        "parameterTypes": [ ]
      },
      {
        "name": "getXForwarded",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.netflix.discovery.DiscoveryClient",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeepAlive",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getQueueCapacity",
        "parameterTypes": [ ]
      },
      {
        "name": "getCoreSize",
        "parameterTypes": [ ]
      },
      {
        "name": "setKeepAlive",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setCoreSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setAllowCoreThreadTimeout",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMaxSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isAllowCoreThreadTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "setQueueCapacity",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "com.netflix.appinfo.InstanceInfo",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactories",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.core.filter.SpecFilter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.openfeign.support.FeignEncoderProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setCharsetFromContentType",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isCharsetFromContentType",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.openfeign.loadbalancer.XForwardedHeadersTransformer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Threads",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getWorker",
        "parameterTypes": [ ]
      },
      {
        "name": "setIo",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getIo",
        "parameterTypes": [ ]
      },
      {
        "name": "setWorker",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.providers.ObjectMapperProvider",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakersHealthIndicatorAutoConfiguration$$SpringCGLIB$$FastClass$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.Link",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getHref",
        "parameterTypes": [ ]
      },
      {
        "name": "isTemplated",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$Xa",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDataSourceClassName",
        "parameterTypes": [ ]
      },
      {
        "name": "getProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "setDataSourceClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProperties",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "logbackMetrics",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.context.properties.ConfigurationPropertiesRebinder",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.logging.logback.LogbackLoggingSystem$Factory",
    "allDeclaredConstructors": true
  },
  {
    "name": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakersHealthIndicatorAutoConfiguration$$SpringCGLIB$$FastClass$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springdoc.core.properties.SpringDocConfigProperties$SortConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.support.EntityManagerBeanDefinitionRegistrarPostProcessor",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.PatternParseFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getServer",
        "parameterTypes": [ ]
      },
      {
        "name": "getClient",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.circuitbreaker.resilience4j.Resilience4JAutoConfiguration$ObservationRegistryCustomizerResilience4jCustomizer",
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "observationRegistry"
      },
      {
        "name": "factory"
      }
    ],
    "methods": [
      {
        "name": "init",
        "parameterTypes": [ ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.micrometer.tagged.TaggedTimeLimiterMetricsPublisher",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.media.XML",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.info.Info",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.github.resilience4j.springboot3.retry.autoconfigure.RetryAutoConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.netflix.eureka.http.RestTemplateDiscoveryClientOptionalArgs",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.netflix.eureka.RestTemplateTimeoutProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getSocketTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectRequestTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "setConnectRequestTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setConnectTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setSocketTimeout",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.orm.jpa.JpaDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.health.Status",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDescription",
        "parameterTypes": [ ]
      },
      {
        "name": "getCode",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.system.ProcessorMetrics",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Contentnegotiation",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getParameterName",
        "parameterTypes": [ ]
      },
      {
        "name": "isFavorParameter",
        "parameterTypes": [ ]
      },
      {
        "name": "getMediaTypes",
        "parameterTypes": [ ]
      },
      {
        "name": "setFavorParameter",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setParameterName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMediaTypes",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataProperties$Activate",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.cloud.CloudPlatform",
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.config.MeterFilter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.ParameterNameDiscoverer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.client.discovery.health.DiscoveryCompositeHealthContributor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.binder.system.UptimeMetrics",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "defaultLifecycleProcessor",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.context.LifecycleProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.webmvc.api.OpenApiWebMvcResource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "openapiYaml",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.String",
          "java.util.Locale"
        ]
      },
      {
        "name": "openapiJson",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.String",
          "java.util.Locale"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.builder.ParentContextCloserApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "blockingLoadBalancerClient",
        "parameterTypes": [
          "org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory"
        ]
      },
      {
        "name": "loadBalancerServiceInstanceCookieTransformer",
        "parameterTypes": [
          "org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory"
        ]
      },
      {
        "name": "xForwarderHeadersTransformer",
        "parameterTypes": [
          "org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.configuration.SleuthPresentVerifier",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.swagger.v3.oas.models.security.Scopes",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BeanDefinitionOverrideFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.task.TaskSchedulerBuilder",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.github.resilience4j.spring6.spelresolver.SpelResolver",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.github.resilience4j.springboot3.retry.autoconfigure.RetryAutoConfiguration$RetryAutoEndpointConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration$EndpointObjectMapperWebMvcConfigurer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.LazyInitializationExcludeFilter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jacksonObjectMapper",
        "parameterTypes": [
          "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.core.service.OpenAPIService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.examples.Example",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.bootstrap.BootstrapConfiguration",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.util.CustomCollectionRegistrar",
    "allDeclaredConstructors": true
  },
  {
    "name": "jakarta.servlet.MultipartConfigElement",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.filter.CharacterEncodingFilter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.david.vehicleservice.exceptionhandler.ExceptionHandlerGeneral",
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "messageSource"
      }
    ],
    "methods": [
      {
        "name": "handleEmptyResultDataAccessException",
        "parameterTypes": [
          "com.david.vehicleservice.exceptionhandler.ResourceNotFoundException",
          "org.springframework.web.context.request.WebRequest"
        ]
      },
      {
        "name": "handleUncaught",
        "parameterTypes": [
          "java.lang.Exception",
          "org.springframework.web.context.request.WebRequest"
        ]
      },
      {
        "name": "handleEmptyResultDataAccessException",
        "parameterTypes": [
          "org.springframework.dao.EmptyResultDataAccessException",
          "org.springframework.web.context.request.WebRequest"
        ]
      },
      {
        "name": "handleDataIntegrityViolationException",
        "parameterTypes": [
          "org.springframework.dao.DataIntegrityViolationException",
          "org.springframework.web.context.request.WebRequest"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.micrometer.prometheus.PrometheusMeterRegistry",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "servletExposeExcludePropertyEndpointFilter",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.context.event.DefaultEventListenerFactory",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.http.ResponseEntity",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getStatusCodeValue",
        "parameterTypes": [ ]
      },
      {
        "name": "getStatusCode",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.swagger.v3.core.jackson.mixin.SchemaMixin",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "jakarta.inject.Inject"
  },
  {
    "name": "org.springframework.boot.actuate.health.StatusAggregator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.springboot3.retry.autoconfigure.RetryAutoConfiguration$RetryAutoEndpointConfiguration$$SpringCGLIB$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.repository.query.ReactiveQueryByExampleExecutor",
    "allPublicMethods": true
  },
  {
    "name": "org.springdoc.core.utils.Constants",
    "allDeclaredFields": true
  },
  {
    "name": "jakarta.persistence.Query",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getResultStream",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.configuration.TlsProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyStore",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyStoreType",
        "parameterTypes": [ ]
      },
      {
        "name": "setTrustStore",
        "parameterTypes": [
          "org.springframework.core.io.Resource"
        ]
      },
      {
        "name": "getTrustStore",
        "parameterTypes": [ ]
      },
      {
        "name": "setKeyStore",
        "parameterTypes": [
          "org.springframework.core.io.Resource"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getTrustStoreType",
        "parameterTypes": [ ]
      },
      {
        "name": "setKeyStoreType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrustStorePassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getKeyStorePassword",
        "parameterTypes": [ ]
      },
      {
        "name": "setTrustStoreType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeyPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTrustStorePassword",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "setKeyStorePassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "io.swagger.v3.oas.models.media.NumberSchema",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "pingHealthContributor",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "java.lang.module.ResolvedModule",
    "allDeclaredMethods": true
  },
  {
    "name": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.AbstractRateLimiterConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Exposure",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setInclude",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setExclude",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "getInclude",
        "parameterTypes": [ ]
      },
      {
        "name": "getExclude",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.FailureAnalysisReporter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationImportFilter",
    "allDeclaredConstructors": true
  },
  {
    "name": "io.github.resilience4j.spring6.fallback.CompletionStageFallbackDecorator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.github.resilience4j.springboot3.retry.autoconfigure.AbstractRetryConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "websocketServletWebServerCustomizer",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.david.vehicleservice.service.impl.PositionServiceImpl",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.Long",
          "java.lang.Object"
        ]
      },
      {
        "name": "findById",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.Long",
          "com.david.vehicleservice.model.Position"
        ]
      },
      {
        "name": "deleteById",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deleteById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.david.vehicleservice.repository.PositionRepository"
        ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterAutoConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.circuitbreaker.resilience4j.Resilience4JAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "customizers"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "resilience4jCircuitBreakerFactory",
        "parameterTypes": [
          "io.github.resilience4j.circuitbreaker.CircuitBreakerRegistry",
          "io.github.resilience4j.timelimiter.TimeLimiterRegistry",
          "org.springframework.cloud.circuitbreaker.resilience4j.Resilience4jBulkheadProvider",
          "org.springframework.cloud.circuitbreaker.resilience4j.Resilience4JConfigurationProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshScopeBeanDefinitionEnhancer",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.openfeign.FeignClientProperties$FeignClientConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEncoder",
        "parameterTypes": [ ]
      },
      {
        "name": "getMicrometer",
        "parameterTypes": [ ]
      },
      {
        "name": "setConnectTimeout",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setFollowRedirects",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setEncoder",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setQueryMapEncoder",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getDefaultQueryParameters",
        "parameterTypes": [ ]
      },
      {
        "name": "setDefaultRequestHeaders",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setDismiss404",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getDefaultRequestHeaders",
        "parameterTypes": [ ]
      },
      {
        "name": "getRetryer",
        "parameterTypes": [ ]
      },
      {
        "name": "getDismiss404",
        "parameterTypes": [ ]
      },
      {
        "name": "setRetryer",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getContract",
        "parameterTypes": [ ]
      },
      {
        "name": "getResponseInterceptor",
        "parameterTypes": [ ]
      },
      {
        "name": "setMicrometer",
        "parameterTypes": [
          "org.springframework.cloud.openfeign.FeignClientProperties$MicrometerProperties"
        ]
      },
      {
        "name": "setCapabilities",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "isFollowRedirects",
        "parameterTypes": [ ]
      },
      {
        "name": "getErrorDecoder",
        "parameterTypes": [ ]
      },
      {
        "name": "getRequestInterceptors",
        "parameterTypes": [ ]
      },
      {
        "name": "setDecoder",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getReadTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getExceptionPropagationPolicy",
        "parameterTypes": [ ]
      },
      {
        "name": "getUrl",
        "parameterTypes": [ ]
      },
      {
        "name": "setExceptionPropagationPolicy",
        "parameterTypes": [
          "feign.ExceptionPropagationPolicy"
        ]
      },
      {
        "name": "getQueryMapEncoder",
        "parameterTypes": [ ]
      },
      {
        "name": "setReadTimeout",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setErrorDecoder",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setLoggerLevel",
        "parameterTypes": [
          "feign.Logger$Level"
        ]
      },
      {
        "name": "getCapabilities",
        "parameterTypes": [ ]
      },
      {
        "name": "setRequestInterceptors",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setResponseInterceptor",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getDecoder",
        "parameterTypes": [ ]
      },
      {
        "name": "setContract",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setDefaultQueryParameters",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "getLoggerLevel",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "persistenceExceptionTranslationPostProcessor",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.orm.jpa.JpaProperties"
        ]
      },
      {
        "name": "openEntityManagerInViewInterceptor",
        "parameterTypes": [ ]
      },
      {
        "name": "openEntityManagerInViewInterceptorConfigurer",
        "parameterTypes": [
          "org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.customizers.SpringDocCustomizers",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport",
    "allPublicMethods": true,
    "methods": [
      {
        "name": "setLazyInit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNamedQueries",
        "parameterTypes": [
          "org.springframework.data.repository.core.NamedQueries"
        ]
      },
      {
        "name": "setRepositoryFragments",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments"
        ]
      },
      {
        "name": "setQueryLookupStrategyKey",
        "parameterTypes": [
          "org.springframework.data.repository.query.QueryLookupStrategy$Key"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAdditionalPropertySourcesToRetain",
        "parameterTypes": [ ]
      },
      {
        "name": "setAdditionalPropertySourcesToRetain",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getFileSizeThreshold",
        "parameterTypes": [ ]
      },
      {
        "name": "isResolveLazily",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMaxRequestSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getLocation",
        "parameterTypes": [ ]
      },
      {
        "name": "setResolveLazily",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getMaxRequestSize",
        "parameterTypes": [ ]
      },
      {
        "name": "setFileSizeThreshold",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMaxFileSize",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxFileSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getEnabled",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setThreshold",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "getPath",
        "parameterTypes": [ ]
      },
      {
        "name": "getThreshold",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.HostInfoEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.bootstrap.encrypt.DecryptEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.common.timelimiter.configuration.CommonTimeLimiterConfigurationProperties$InstanceProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setBaseConfig",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTimeoutDuration",
        "parameterTypes": [ ]
      },
      {
        "name": "getCancelRunningFuture",
        "parameterTypes": [ ]
      },
      {
        "name": "getBaseConfig",
        "parameterTypes": [ ]
      },
      {
        "name": "setCancelRunningFuture",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setEventConsumerBufferSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getEventConsumerBufferSize",
        "parameterTypes": [ ]
      },
      {
        "name": "setTimeoutDuration",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.geo.GeoModule",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.config.ProjectingArgumentResolverRegistrar",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "projectingArgumentResolverBeanPostProcessor",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectFactory"
        ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.springboot3.retry.autoconfigure.RetryMetricsAutoConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "hikariPoolDataSourceMetadataProvider",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties$Pageable",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getSizeParameter",
        "parameterTypes": [ ]
      },
      {
        "name": "getPageParameter",
        "parameterTypes": [ ]
      },
      {
        "name": "setDefaultPageSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setQualifierDelimiter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMaxPageSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getQualifierDelimiter",
        "parameterTypes": [ ]
      },
      {
        "name": "getPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultPageSize",
        "parameterTypes": [ ]
      },
      {
        "name": "setSizeParameter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPageParameter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMaxPageSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setOneIndexedParameters",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isOneIndexedParameters",
        "parameterTypes": [ ]
      },
      {
        "name": "setPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.ReactiveHealthEndpointConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "reactiveHealthContributorRegistry",
        "parameterTypes": [
          "java.util.Map",
          "java.util.Map",
          "org.springframework.boot.actuate.health.HealthEndpointGroups"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties$Http$Client",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getRequests",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.util.MimeType",
    "methods": [
      {
        "name": "getType",
        "parameterTypes": [ ]
      },
      {
        "name": "getSubtype",
        "parameterTypes": [ ]
      },
      {
        "name": "getParameters",
        "parameterTypes": [ ]
      },
      {
        "name": "getSubtypeSuffix",
        "parameterTypes": [ ]
      },
      {
        "name": "isWildcardType",
        "parameterTypes": [ ]
      },
      {
        "name": "isConcrete",
        "parameterTypes": [ ]
      },
      {
        "name": "getCharset",
        "parameterTypes": [ ]
      },
      {
        "name": "isWildcardSubtype",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getBasePath",
        "parameterTypes": [ ]
      },
      {
        "name": "getPort",
        "parameterTypes": [ ]
      },
      {
        "name": "getSsl",
        "parameterTypes": [ ]
      },
      {
        "name": "getAddress",
        "parameterTypes": [ ]
      },
      {
        "name": "setBasePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSsl",
        "parameterTypes": [
          "org.springframework.boot.web.server.Ssl"
        ]
      },
      {
        "name": "setAddress",
        "parameterTypes": [
          "java.net.InetAddress"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "defaultErrorView",
        "parameterTypes": [ ]
      },
      {
        "name": "beanNameViewResolver",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.metrics.data.MetricsRepositoryMethodInvocationListener",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.openfeign.FeignAutoConfiguration$DefaultFeignTargeterConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "feignTargeter",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.swagger.v3.core.jackson.mixin.DateSchemaMixin",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Reactive",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getSession",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.BeanFactory",
    "allPublicMethods": true
  },
  {
    "name": "java.net.InetSocketAddress"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties$Logging",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setSlowIndicatorThreshold",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getSlowIndicatorThreshold",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.swagger.v3.oas.models.security.OAuthFlow",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.converters.PolymorphicModelConverter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "compositeDiscoveryClient",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDdlAuto",
        "parameterTypes": [ ]
      },
      {
        "name": "setDdlAuto",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getNaming",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.springboot3.retry.autoconfigure.RetryMetricsAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "taggedRetryMetricsPublisher",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties$Http$Server$ServerRequests",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "propertySourcesPlaceholderConfigurer",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.david.vehicleservice.modal.mapper.VeihicleMapperImpl",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.swagger.v3.oas.models.media.DateSchema",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.github.resilience4j.common.CommonProperties",
    "methods": [
      {
        "name": "setTags",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "getTags",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.interceptor.TransactionAttributeSource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.jackson.EndpointObjectMapper",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.FileEncodingApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.AnsiOutputApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.ValidationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "restTemplateCustomizer",
        "parameterTypes": [
          "org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor"
        ]
      },
      {
        "name": "loadBalancerInterceptor",
        "parameterTypes": [
          "org.springframework.cloud.client.loadbalancer.LoadBalancerClient",
          "org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory"
        ]
      }
    ]
  },
  {
    "name": "io.swagger.v3.oas.models.security.SecurityScheme",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.BoundConfigurationProperties",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.netflix.discovery.shared.resolver.DefaultEndpoint",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.github.resilience4j.common.CompositeCustomizer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "managementServletContext",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"
        ]
      },
      {
        "name": "servletWebChildContextFactory",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.springboot3.retry.autoconfigure.RetryProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.netflix.discovery.shared.resolver.EurekaEndpoint",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.HttpRange",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$StickySession",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setAddServiceInstanceCookie",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setInstanceIdCookieName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isAddServiceInstanceCookie",
        "parameterTypes": [ ]
      },
      {
        "name": "getInstanceIdCookieName",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.core.RepositoryMetadata",
    "allPublicMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicIntegerSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.beans.factory.SmartInitializingSingleton",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.core.discoverer.SpringDocParameterNameDiscoverer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.repository.query.QueryByExampleExecutor",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.jpa.repository.config.JpaMetamodelMappingContextFactoryBean",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "endpointObjectMapper",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.FlashMapManager",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.bootstrap.LoggingSystemShutdownListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "io.swagger.v3.oas.models.links.Link",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.openfeign.Targeter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "loadBalancerEagerContextInitializer",
        "parameterTypes": [
          "org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory",
          "org.springframework.cloud.client.loadbalancer.LoadBalancerEagerLoadProperties"
        ]
      },
      {
        "name": "loadBalancerClientFactory",
        "parameterTypes": [
          "org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "zoneConfig",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Format",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getTime",
        "parameterTypes": [ ]
      },
      {
        "name": "getDate",
        "parameterTypes": [ ]
      },
      {
        "name": "getDateTime",
        "parameterTypes": [ ]
      },
      {
        "name": "setTime",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDateTime",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDate",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties$Group",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getShowDetails",
        "parameterTypes": [ ]
      },
      {
        "name": "getAdditionalPath",
        "parameterTypes": [ ]
      },
      {
        "name": "setShowDetails",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.Show"
        ]
      },
      {
        "name": "setExclude",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "getInclude",
        "parameterTypes": [ ]
      },
      {
        "name": "getExclude",
        "parameterTypes": [ ]
      },
      {
        "name": "setAdditionalPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInclude",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.parsers.ReturnTypeParser",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.PathMapper",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.configuration.SpringBootVersionVerifier",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.circuitbreaker.resilience4j.Resilience4JConfigurationProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnableGroupMeterFilter",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isEnableSemaphoreDefaultBulkhead",
        "parameterTypes": [ ]
      },
      {
        "name": "isDisableThreadPool",
        "parameterTypes": [ ]
      },
      {
        "name": "setDisableThreadPool",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDefaultGroupTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDefaultGroupTag",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnableGroupMeterFilter",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnableSemaphoreDefaultBulkhead",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getFixed",
        "parameterTypes": [ ]
      },
      {
        "name": "getContent",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.swagger.v3.core.jackson.ApiResponsesSerializer",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration$HealthEndpointGroupMembershipValidator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.AutoTimeProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getPercentiles",
        "parameterTypes": [ ]
      },
      {
        "name": "isPercentilesHistogram",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setPercentiles",
        "parameterTypes": [
          "double[]"
        ]
      },
      {
        "name": "setPercentilesHistogram",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.context.restart.RestartListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.openfeign.FeignClientFactoryBean",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.core.env.ConfigurableEnvironment"
        ]
      },
      {
        "name": "eurekaFeature",
        "parameterTypes": [ ]
      },
      {
        "name": "eurekaClientConfigBean",
        "parameterTypes": [
          "org.springframework.core.env.ConfigurableEnvironment"
        ]
      },
      {
        "name": "eurekaInstanceConfigBean",
        "parameterTypes": [
          "org.springframework.cloud.commons.util.InetUtils",
          "org.springframework.cloud.netflix.eureka.metadata.ManagementMetadataProvider"
        ]
      },
      {
        "name": "eurekaAutoServiceRegistration",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry",
          "org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration"
        ]
      },
      {
        "name": "serviceManagementMetadataProvider",
        "parameterTypes": [ ]
      },
      {
        "name": "eurekaServiceRegistry",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakersHealthIndicatorAutoConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.domain.Page",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getTotalElements",
        "parameterTypes": [ ]
      },
      {
        "name": "getTotalPages",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springdoc.webmvc.core.providers.RouterFunctionWebMvcProvider",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "transactionAdvisor",
        "parameterTypes": [
          "org.springframework.transaction.interceptor.TransactionAttributeSource",
          "org.springframework.transaction.interceptor.TransactionInterceptor"
        ]
      },
      {
        "name": "transactionInterceptor",
        "parameterTypes": [
          "org.springframework.transaction.interceptor.TransactionAttributeSource"
        ]
      },
      {
        "name": "transactionAttributeSource",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.JksSslBundleProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getTruststore",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeystore",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.jackson.JsonMixinModule",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.Components",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.support.DefaultLifecycleProcessor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializerDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.servlet.ThemeResolver",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.JpaProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setShowSql",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setOpenInView",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "getDatabasePlatform",
        "parameterTypes": [ ]
      },
      {
        "name": "getDatabase",
        "parameterTypes": [ ]
      },
      {
        "name": "setDatabasePlatform",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isShowSql",
        "parameterTypes": [ ]
      },
      {
        "name": "getMappingResources",
        "parameterTypes": [ ]
      },
      {
        "name": "getOpenInView",
        "parameterTypes": [ ]
      },
      {
        "name": "setProperties",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setDatabase",
        "parameterTypes": [
          "org.springframework.orm.jpa.vendor.Database"
        ]
      },
      {
        "name": "isGenerateDdl",
        "parameterTypes": [ ]
      },
      {
        "name": "setGenerateDdl",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BindFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.netflix.eureka.loadbalancer.EurekaLoadBalancerProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setApproximateZoneFromHostname",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isApproximateZoneFromHostname",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "java.lang.Long"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ErrorProperties$Whitelabel",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.LocaleResolver",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getHttp",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.properties.AbstractSwaggerUiConfigProperties$Direction",
    "methods": [
      {
        "name": "isAscending",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "java.util.Locale$LanguageRange"
  },
  {
    "name": "io.swagger.v3.core.jackson.mixin.Schema31Mixin",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.util.Map"
  },
  {
    "name": "org.springframework.cloud.netflix.eureka.config.EurekaConfigServerBootstrapper",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.context.MessageSource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicatorProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setUseServicesQuery",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isIncludeDescription",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setIncludeDescription",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isUseServicesQuery",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.commons.util.UtilAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "inetUtils",
        "parameterTypes": [
          "org.springframework.cloud.commons.util.InetUtilsProperties"
        ]
      },
      {
        "name": "inetUtilsProperties",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Client$ClientRequest",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getMetricName",
        "parameterTypes": [ ]
      },
      {
        "name": "setMetricName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "com.david.vehicleservice.model.Vehicle",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "positions"
      }
    ],
    "methods": [
      {
        "name": "getPositions",
        "parameterTypes": [ ]
      },
      {
        "name": "getPlaca",
        "parameterTypes": [ ]
      },
      {
        "name": "setPositions",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setPlaca",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor$MappingsProvider",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.filter.RequestContextFilter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.micrometer.observation.ObservationRegistry",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.security.SecurityScheme$In",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.health.RefreshScopeHealthIndicator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.MediaType",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getQualityValue",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicBooleanSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerAutoConfiguration$CircuitBreakerEndpointAutoConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.FailureAnalyzers",
    "allDeclaredConstructors": true
  },
  {
    "name": "io.github.resilience4j.spring6.fallback.FallbackDecorators",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.function.support.HandlerFunctionAdapter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.domain.Slice",
    "methods": [
      {
        "name": "getNumber",
        "parameterTypes": [ ]
      },
      {
        "name": "getSort",
        "parameterTypes": [ ]
      },
      {
        "name": "getPageable",
        "parameterTypes": [ ]
      },
      {
        "name": "isFirst",
        "parameterTypes": [ ]
      },
      {
        "name": "isLast",
        "parameterTypes": [ ]
      },
      {
        "name": "getContent",
        "parameterTypes": [ ]
      },
      {
        "name": "getSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getNumberOfElements",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "java.util.stream.Stream"
  },
  {
    "name": "org.springframework.aop.framework.ProxyConfig",
    "methods": [
      {
        "name": "setProxyTargetClass",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.openfeign.support.FeignHttpClientProperties$Hc5Properties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getSocketTimeoutUnit",
        "parameterTypes": [ ]
      },
      {
        "name": "getSocketTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "setSocketTimeoutUnit",
        "parameterTypes": [
          "java.util.concurrent.TimeUnit"
        ]
      },
      {
        "name": "getConnectionRequestTimeoutUnit",
        "parameterTypes": [ ]
      },
      {
        "name": "getPoolConcurrencyPolicy",
        "parameterTypes": [ ]
      },
      {
        "name": "setSocketTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPoolReusePolicy",
        "parameterTypes": [
          "org.springframework.cloud.openfeign.support.FeignHttpClientProperties$Hc5Properties$PoolReusePolicy"
        ]
      },
      {
        "name": "setConnectionRequestTimeoutUnit",
        "parameterTypes": [
          "java.util.concurrent.TimeUnit"
        ]
      },
      {
        "name": "setPoolConcurrencyPolicy",
        "parameterTypes": [
          "org.springframework.cloud.openfeign.support.FeignHttpClientProperties$Hc5Properties$PoolConcurrencyPolicy"
        ]
      },
      {
        "name": "getPoolReusePolicy",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectionRequestTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "setConnectionRequestTimeout",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointFilter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.security.SecurityScheme$Type",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDescriptions",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isDescriptions",
        "parameterTypes": [ ]
      },
      {
        "name": "setStep",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getHistogramFlavor",
        "parameterTypes": [ ]
      },
      {
        "name": "getStep",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setHistogramFlavor",
        "parameterTypes": [
          "io.micrometer.prometheus.HistogramFlavor"
        ]
      },
      {
        "name": "getPushgateway",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getThreads",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectionIdleTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxHttpFormPostSize",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxHttpFormPostSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getAccesslog",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxHttpResponseHeaderSize",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxHttpResponseHeaderSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setConnectionIdleTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.WebMvcConfigurer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.time.ZonedDateTime"
  },
  {
    "name": "org.springframework.data.jpa.repository.Query",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport",
    "queriedMethods": [
      {
        "name": "mvcViewResolver",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager"
        ]
      },
      {
        "name": "handlerFunctionAdapter",
        "parameterTypes": [ ]
      },
      {
        "name": "requestMappingHandlerMapping",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "mvcPatternParser",
        "parameterTypes": [ ]
      },
      {
        "name": "viewControllerHandlerMapping",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "simpleControllerHandlerAdapter",
        "parameterTypes": [ ]
      },
      {
        "name": "defaultServletHandlerMapping",
        "parameterTypes": [ ]
      },
      {
        "name": "mvcHandlerMappingIntrospector",
        "parameterTypes": [ ]
      },
      {
        "name": "routerFunctionMapping",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "handlerExceptionResolver",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager"
        ]
      },
      {
        "name": "mvcPathMatcher",
        "parameterTypes": [ ]
      },
      {
        "name": "viewNameTranslator",
        "parameterTypes": [ ]
      },
      {
        "name": "resourceHandlerMapping",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "beanNameHandlerMapping",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "mvcUriComponentsContributor",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
        ]
      },
      {
        "name": "mvcResourceUrlProvider",
        "parameterTypes": [ ]
      },
      {
        "name": "mvcUrlPathHelper",
        "parameterTypes": [ ]
      },
      {
        "name": "httpRequestHandlerAdapter",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthContributorRegistry",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.system.DiskSpaceHealthIndicator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.BackgroundPreinitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springdoc.webmvc.ui.SwaggerWebMvcConfigurer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class[]"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.utils.PropertyResolverUtils",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.commons.util.InetUtilsProperties",
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "timeoutSeconds"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getTimeoutSeconds",
        "parameterTypes": [ ]
      },
      {
        "name": "isUseOnlySiteLocalInterfaces",
        "parameterTypes": [ ]
      },
      {
        "name": "setPreferredNetworks",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getPreferredNetworks",
        "parameterTypes": [ ]
      },
      {
        "name": "setIgnoredInterfaces",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getIgnoredInterfaces",
        "parameterTypes": [ ]
      },
      {
        "name": "setTimeoutSeconds",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getDefaultHostname",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultIpAddress",
        "parameterTypes": [ ]
      },
      {
        "name": "setDefaultIpAddress",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDefaultHostname",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUseOnlySiteLocalInterfaces",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.autoconfigure.RefreshEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "refreshScopeHealthIndicator",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.cloud.context.properties.ConfigurationPropertiesRebinder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.HttpMethod",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.loadbalancer.cache.LoadBalancerCacheProperties$Caffeine",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getSpec",
        "parameterTypes": [ ]
      },
      {
        "name": "setSpec",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.sql.Date",
    "condition": {
      "typeReachable": "java.sql.Date"
    },
    "methods": [
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "toLocalDate",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.query.FluentQuery$ReactiveFluentQuery",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.env.PropertySourceLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.http.HttpStatus",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "isError",
        "parameterTypes": [ ]
      },
      {
        "name": "is1xxInformational",
        "parameterTypes": [ ]
      },
      {
        "name": "is3xxRedirection",
        "parameterTypes": [ ]
      },
      {
        "name": "getReasonPhrase",
        "parameterTypes": [ ]
      },
      {
        "name": "is4xxClientError",
        "parameterTypes": [ ]
      },
      {
        "name": "is5xxServerError",
        "parameterTypes": [ ]
      },
      {
        "name": "is2xxSuccessful",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.core.properties.SpringDocConfigProperties$ModelConverters$DeprecatingConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancerEagerLoadProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getClients",
        "parameterTypes": [ ]
      },
      {
        "name": "setClients",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.circuitbreaker.resilience4j.Resilience4JCircuitBreakerFactory",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.core.converters.AdditionalModelsConverter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.task.TaskExecutorBuilder",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.servlet.Servlet"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.properties.SwaggerUiConfigProperties$SyntaxHighlight",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setActivated",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getActivated",
        "parameterTypes": [ ]
      },
      {
        "name": "isPresent",
        "parameterTypes": [ ]
      },
      {
        "name": "setTheme",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTheme",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.openfeign.support.PageJacksonModule",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.datatype.jsr310.JavaTimeModule",
    "condition": {
      "typeReachable": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "com.google.gson.Gson",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getResources",
        "parameterTypes": [ ]
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "java.util.Locale"
        ]
      },
      {
        "name": "getLocaleResolver",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocale",
        "parameterTypes": [ ]
      },
      {
        "name": "setLocaleResolver",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.WebProperties$LocaleResolver"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration",
    "queriedMethods": [
      {
        "name": "entityManagerFactory",
        "parameterTypes": [
          "org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder",
          "org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes"
        ]
      },
      {
        "name": "jpaVendorAdapter",
        "parameterTypes": [ ]
      },
      {
        "name": "transactionManager",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "entityManagerFactoryBuilder",
        "parameterTypes": [
          "org.springframework.orm.jpa.JpaVendorAdapter",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.spring6.timelimiter.configure.TimeLimiterConfigurationProperties",
    "methods": [
      {
        "name": "setTimeLimiterAspectOrder",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getTimeLimiterAspectOrder",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.PropertiesMeterFilter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Options",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getSocket",
        "parameterTypes": [ ]
      },
      {
        "name": "getServer",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.integration.IntegrationPropertiesEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.bootstrap.BootstrapApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.SpringApplicationRunListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerMetricsAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "taggedCircuitBreakerMetricsPublisher",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "io.swagger.v3.oas.models.media.MapSchema",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler",
    "methods": [
      {
        "name": "handle",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.github.resilience4j.springboot3.fallback.autoconfigure.FallbackConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "io.swagger.v3.oas.models.media.StringSchema",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springdoc.core.properties.SpringDocConfigProperties$ApiDocs",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setGroups",
        "parameterTypes": [
          "org.springdoc.core.properties.SpringDocConfigProperties$Groups"
        ]
      },
      {
        "name": "getVersion",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getPath",
        "parameterTypes": [ ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "org.springdoc.core.properties.SpringDocConfigProperties$ApiDocs$OpenApiVersion"
        ]
      },
      {
        "name": "getGroups",
        "parameterTypes": [ ]
      },
      {
        "name": "setResolveSchemaProperties",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isResolveSchemaProperties",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Server$ServerRequest",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getMetricName",
        "parameterTypes": [ ]
      },
      {
        "name": "setMetricName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterMetricsAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "taggedRateLimiterMetricsPublisher",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties$Http$Server",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getRequests",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache$Cachecontrol",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setStaleWhileRevalidate",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setCachePrivate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setMustRevalidate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setCachePublic",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getCachePrivate",
        "parameterTypes": [ ]
      },
      {
        "name": "getProxyRevalidate",
        "parameterTypes": [ ]
      },
      {
        "name": "setNoTransform",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getNoCache",
        "parameterTypes": [ ]
      },
      {
        "name": "setStaleIfError",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setNoCache",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getNoTransform",
        "parameterTypes": [ ]
      },
      {
        "name": "getCachePublic",
        "parameterTypes": [ ]
      },
      {
        "name": "setSMaxAge",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getNoStore",
        "parameterTypes": [ ]
      },
      {
        "name": "getStaleIfError",
        "parameterTypes": [ ]
      },
      {
        "name": "getMustRevalidate",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxAge",
        "parameterTypes": [ ]
      },
      {
        "name": "getSMaxAge",
        "parameterTypes": [ ]
      },
      {
        "name": "setProxyRevalidate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setNoStore",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getStaleWhileRevalidate",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxAge",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "java.lang.Object",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getThreadNamePrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "getShutdown",
        "parameterTypes": [ ]
      },
      {
        "name": "setThreadNamePrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPool",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.context.ApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthEndpointGroups",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationImportListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.repository.query.FluentQuery",
    "allPublicMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.parameters.Parameter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jsonMixinModule",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.jackson.JsonMixinModuleEntries"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.converters.ResponseSupportConverter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springdoc.core.configuration.SpringDocPageableConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "delegatingMethodParameterCustomizer",
        "parameterTypes": [
          "java.util.Optional",
          "java.util.Optional"
        ]
      },
      {
        "name": "pageableOpenAPIConverter",
        "parameterTypes": [
          "org.springdoc.core.providers.ObjectMapperProvider"
        ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.circuitbreaker.CircuitBreakerRegistry",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.github.resilience4j.springboot3.fallback.autoconfigure.FallbackConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.netflix.appinfo.InstanceInfo$PortWrapper",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.ReactiveHealthContributorRegistry",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.batch.JobRepositoryDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.http.ProblemDetail",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "setStatus",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "getDetail",
        "parameterTypes": [ ]
      },
      {
        "name": "getInstance",
        "parameterTypes": [ ]
      },
      {
        "name": "getTitle",
        "parameterTypes": [ ]
      },
      {
        "name": "getType",
        "parameterTypes": [ ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDetail",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInstance",
        "parameterTypes": [
          "java.net.URI"
        ]
      },
      {
        "name": "getStatus",
        "parameterTypes": [ ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "org.springframework.http.HttpStatus"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.net.URI"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataLocation",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "boolean",
          "java.lang.String",
          "org.springframework.boot.origin.Origin"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$View",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setSuffix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "getSuffix",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.ssl.DefaultSslBundleRegistry",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.media.EmailSchema",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.HttpStatusCode",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "is1xxInformational",
        "parameterTypes": [ ]
      },
      {
        "name": "isError",
        "parameterTypes": [ ]
      },
      {
        "name": "is2xxSuccessful",
        "parameterTypes": [ ]
      },
      {
        "name": "is3xxRedirection",
        "parameterTypes": [ ]
      },
      {
        "name": "is4xxClientError",
        "parameterTypes": [ ]
      },
      {
        "name": "is5xxServerError",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.netflix.discovery.shared.Application",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.cloud.autoconfigure.PauseResumeEndpointsConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.task.TaskExecutorMetricsAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "eagerTaskExecutorMetrics",
        "parameterTypes": [ ]
      },
      {
        "name": "bindTaskExecutorsToRegistry",
        "parameterTypes": [
          "java.util.Map",
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.support.DefaultJpaContext",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.spring6.ratelimiter.configure.RateLimiterAspect",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "rateLimiterAroundAdvice",
        "parameterTypes": [
          "org.aspectj.lang.ProceedingJoinPoint",
          "io.github.resilience4j.ratelimiter.annotation.RateLimiter"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jdbcConnectionDetails",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getRollbackOnCommitFailure",
        "parameterTypes": [ ]
      },
      {
        "name": "setDefaultTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setRollbackOnCommitFailure",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.filter.OrderedFormContentFilter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "dispatcherServletRegistration",
        "parameterTypes": [
          "org.springframework.web.servlet.DispatcherServlet",
          "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.Ssl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "setProtocol",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTrustStorePassword",
        "parameterTypes": [ ]
      },
      {
        "name": "setKeyStorePassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrustCertificate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getKeyStore",
        "parameterTypes": [ ]
      },
      {
        "name": "setKeyPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTrustStoreProvider",
        "parameterTypes": [ ]
      },
      {
        "name": "setKeyStoreType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTrustCertificate",
        "parameterTypes": [ ]
      },
      {
        "name": "setTrustStorePassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEnabledProtocols",
        "parameterTypes": [ ]
      },
      {
        "name": "getTrustStoreType",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabledProtocols",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "getKeyAlias",
        "parameterTypes": [ ]
      },
      {
        "name": "setKeyAlias",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getKeyStoreType",
        "parameterTypes": [ ]
      },
      {
        "name": "setTrustStoreType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getClientAuth",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyStoreProvider",
        "parameterTypes": [ ]
      },
      {
        "name": "getProtocol",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyStorePassword",
        "parameterTypes": [ ]
      },
      {
        "name": "setKeyStoreProvider",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getBundle",
        "parameterTypes": [ ]
      },
      {
        "name": "setTrustStoreProvider",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrustCertificatePrivateKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTrustStore",
        "parameterTypes": [ ]
      },
      {
        "name": "getCiphers",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getTrustCertificatePrivateKey",
        "parameterTypes": [ ]
      },
      {
        "name": "setCertificatePrivateKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrustStore",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCertificate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setClientAuth",
        "parameterTypes": [
          "org.springframework.boot.web.server.Ssl$ClientAuth"
        ]
      },
      {
        "name": "getCertificate",
        "parameterTypes": [ ]
      },
      {
        "name": "setBundle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getCertificatePrivateKey",
        "parameterTypes": [ ]
      },
      {
        "name": "setCiphers",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setKeyStore",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "com.zaxxer.hikari.HikariConfig",
    "methods": [
      {
        "name": "getCatalog",
        "parameterTypes": [ ]
      },
      {
        "name": "getMinimumIdle",
        "parameterTypes": [ ]
      },
      {
        "name": "setCatalog",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getConnectionTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "isIsolateInternalQueries",
        "parameterTypes": [ ]
      },
      {
        "name": "getIdleTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "setDataSourceProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setDataSource",
        "parameterTypes": [
          "javax.sql.DataSource"
        ]
      },
      {
        "name": "getExceptionOverrideClassName",
        "parameterTypes": [ ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPoolName",
        "parameterTypes": [ ]
      },
      {
        "name": "setReadOnly",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMaximumPoolSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isAllowPoolSuspension",
        "parameterTypes": [ ]
      },
      {
        "name": "getDataSourceProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "setAllowPoolSuspension",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAutoCommit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getSchema",
        "parameterTypes": [ ]
      },
      {
        "name": "setConnectionInitSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHealthCheckRegistry",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getConnectionTestQuery",
        "parameterTypes": [ ]
      },
      {
        "name": "isReadOnly",
        "parameterTypes": [ ]
      },
      {
        "name": "getHealthCheckProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "isRegisterMbeans",
        "parameterTypes": [ ]
      },
      {
        "name": "setLeakDetectionThreshold",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setMetricsTrackerFactory",
        "parameterTypes": [
          "com.zaxxer.hikari.metrics.MetricsTrackerFactory"
        ]
      },
      {
        "name": "getDataSourceJNDI",
        "parameterTypes": [ ]
      },
      {
        "name": "setKeepaliveTime",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setIsolateInternalQueries",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getInitializationFailTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "setMinimumIdle",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setDataSourceJNDI",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLeakDetectionThreshold",
        "parameterTypes": [ ]
      },
      {
        "name": "getValidationTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getJdbcUrl",
        "parameterTypes": [ ]
      },
      {
        "name": "setInitializationFailTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setValidationTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDataSource",
        "parameterTypes": [ ]
      },
      {
        "name": "getHealthCheckRegistry",
        "parameterTypes": [ ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "setExceptionOverrideClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMetricsTrackerFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "getScheduledExecutor",
        "parameterTypes": [ ]
      },
      {
        "name": "setHealthCheckProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setRegisterMbeans",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getMaximumPoolSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getTransactionIsolation",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectionInitSql",
        "parameterTypes": [ ]
      },
      {
        "name": "setConnectionTestQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIdleTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getMaxLifetime",
        "parameterTypes": [ ]
      },
      {
        "name": "setThreadFactory",
        "parameterTypes": [
          "java.util.concurrent.ThreadFactory"
        ]
      },
      {
        "name": "setMetricRegistry",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setDataSourceClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDriverClassName",
        "parameterTypes": [ ]
      },
      {
        "name": "setTransactionIsolation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDataSourceClassName",
        "parameterTypes": [ ]
      },
      {
        "name": "isAutoCommit",
        "parameterTypes": [ ]
      },
      {
        "name": "setScheduledExecutor",
        "parameterTypes": [
          "java.util.concurrent.ScheduledExecutorService"
        ]
      },
      {
        "name": "getThreadFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeepaliveTime",
        "parameterTypes": [ ]
      },
      {
        "name": "setDriverClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMaxLifetime",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setJdbcUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMetricRegistry",
        "parameterTypes": [ ]
      },
      {
        "name": "setConnectionTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setPoolName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUsername",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.configuration.CompositeCompatibilityVerifier",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getStrategy",
        "parameterTypes": [ ]
      },
      {
        "name": "isCache",
        "parameterTypes": [ ]
      },
      {
        "name": "setCompressed",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCache",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isCompressed",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getEnabled",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.support.JpaRepositoryFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.gson.GsonProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getExcludeFieldsWithoutExposeAnnotation",
        "parameterTypes": [ ]
      },
      {
        "name": "setPrettyPrinting",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getDateFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "setLenient",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setExcludeFieldsWithoutExposeAnnotation",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getDisableHtmlEscaping",
        "parameterTypes": [ ]
      },
      {
        "name": "setDisableInnerClassSerialization",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getLenient",
        "parameterTypes": [ ]
      },
      {
        "name": "setGenerateNonExecutableJson",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setFieldNamingPolicy",
        "parameterTypes": [
          "com.google.gson.FieldNamingPolicy"
        ]
      },
      {
        "name": "setDisableHtmlEscaping",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getGenerateNonExecutableJson",
        "parameterTypes": [ ]
      },
      {
        "name": "setDateFormat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSerializeNulls",
        "parameterTypes": [ ]
      },
      {
        "name": "setLongSerializationPolicy",
        "parameterTypes": [
          "com.google.gson.LongSerializationPolicy"
        ]
      },
      {
        "name": "getLongSerializationPolicy",
        "parameterTypes": [ ]
      },
      {
        "name": "getFieldNamingPolicy",
        "parameterTypes": [ ]
      },
      {
        "name": "getPrettyPrinting",
        "parameterTypes": [ ]
      },
      {
        "name": "getEnableComplexMapKeySerialization",
        "parameterTypes": [ ]
      },
      {
        "name": "setSerializeNulls",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getDisableInnerClassSerialization",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnableComplexMapKeySerialization",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.NotConstructorBoundInjectionFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springdoc.core.providers.WebConversionServiceProvider",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.Double"
  },
  {
    "name": "com.netflix.discovery.shared.Applications",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAllowCredentials",
        "parameterTypes": [ ]
      },
      {
        "name": "setAllowedHeaders",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setExposedHeaders",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAllowedMethods",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getMaxAge",
        "parameterTypes": [ ]
      },
      {
        "name": "getExposedHeaders",
        "parameterTypes": [ ]
      },
      {
        "name": "setAllowedOriginPatterns",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getAllowedOriginPatterns",
        "parameterTypes": [ ]
      },
      {
        "name": "getAllowedHeaders",
        "parameterTypes": [ ]
      },
      {
        "name": "setAllowedOrigins",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAllowCredentials",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getAllowedOrigins",
        "parameterTypes": [ ]
      },
      {
        "name": "getAllowedMethods",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxAge",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.properties.SpringDocConfigProperties$GroupConfig",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setProducesToMatch",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setConsumesToMatch",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setPathsToExclude",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getDisplayName",
        "parameterTypes": [ ]
      },
      {
        "name": "getPathsToMatch",
        "parameterTypes": [ ]
      },
      {
        "name": "setPathsToMatch",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getPathsToExclude",
        "parameterTypes": [ ]
      },
      {
        "name": "setPackagesToExclude",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getConsumesToMatch",
        "parameterTypes": [ ]
      },
      {
        "name": "setHeadersToMatch",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getPackagesToExclude",
        "parameterTypes": [ ]
      },
      {
        "name": "getGroup",
        "parameterTypes": [ ]
      },
      {
        "name": "getProducesToMatch",
        "parameterTypes": [ ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGroup",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPackagesToScan",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getPackagesToScan",
        "parameterTypes": [ ]
      },
      {
        "name": "getHeadersToMatch",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy$Fixed",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setPaths",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "getPaths",
        "parameterTypes": [ ]
      },
      {
        "name": "getVersion",
        "parameterTypes": [ ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.properties.SwaggerUiConfigProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setSyntaxHighlight",
        "parameterTypes": [
          "org.springdoc.core.properties.SwaggerUiConfigProperties$SyntaxHighlight"
        ]
      },
      {
        "name": "isUseRootPath",
        "parameterTypes": [ ]
      },
      {
        "name": "getCsrf",
        "parameterTypes": [ ]
      },
      {
        "name": "getVersion",
        "parameterTypes": [ ]
      },
      {
        "name": "setUseRootPath",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDisableSwaggerDefaultUrl",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isCsrfEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isDisableSwaggerDefaultUrl",
        "parameterTypes": [ ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSyntaxHighlight",
        "parameterTypes": [ ]
      },
      {
        "name": "setCsrf",
        "parameterTypes": [
          "org.springdoc.core.properties.SwaggerUiConfigProperties$Csrf"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.swagger.v3.oas.models.security.OAuthFlows",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.media.ArraySchema",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.endpoint.event.RefreshEventListener",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Pathmatch",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setMatchingStrategy",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$MatchingStrategy"
        ]
      },
      {
        "name": "getMatchingStrategy",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.JsonSerializer[]"
  },
  {
    "name": "org.springdoc.core.converters.SchemaPropertyDeprecatingConverter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.error.DefaultErrorAttributes",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Distribution",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getPercentiles",
        "parameterTypes": [ ]
      },
      {
        "name": "getExpiry",
        "parameterTypes": [ ]
      },
      {
        "name": "getSlo",
        "parameterTypes": [ ]
      },
      {
        "name": "getMinimumExpectedValue",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaximumExpectedValue",
        "parameterTypes": [ ]
      },
      {
        "name": "getPercentilesHistogram",
        "parameterTypes": [ ]
      },
      {
        "name": "getBufferLength",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.service.SecurityService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.netflix.appinfo.ApplicationInfoManager",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BeanCurrentlyInCreationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "io.prometheus.client.CollectorRegistry",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration$MeterFilterConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "metricsHttpClientUriTagFilter",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties",
          "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "java.util.Set"
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyValueFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "io.swagger.v3.oas.models.media.MediaType",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      },
      {
        "name": "preserveErrorControllerTargetClassPostProcessor",
        "parameterTypes": [ ]
      },
      {
        "name": "errorAttributes",
        "parameterTypes": [ ]
      },
      {
        "name": "basicErrorController",
        "parameterTypes": [
          "org.springframework.boot.web.servlet.error.ErrorAttributes",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "errorPageCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath"
        ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimitersHealthIndicatorAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.MutuallyExclusiveConfigurationPropertiesFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "ch.qos.logback.core.rolling.helper.DateTokenConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "formContentFilter",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.swagger.v3.oas.models.servers.ServerVariable",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.util.Streamable",
    "methods": [
      {
        "name": "isEmpty",
        "parameterTypes": [ ]
      },
      {
        "name": "get",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.bootstrap.encrypt.EncryptionBootstrapConfiguration",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.openfeign.FeignAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "configurations"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "feignFeature",
        "parameterTypes": [ ]
      },
      {
        "name": "feignContext",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.swagger.v3.core.jackson.mixin.OpenAPIMixin",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.JksSslBundleProperties$Store",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getType",
        "parameterTypes": [ ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getProvider",
        "parameterTypes": [ ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLocation",
        "parameterTypes": [ ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProvider",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.FilterRegistrationBean",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.jpa.util.JpaMetamodelCacheCleanup",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.david.vehicleservice.config.SwaggerConfig",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "myOpenAPI",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$RequestExecutor",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Servlet",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getJsp",
        "parameterTypes": [ ]
      },
      {
        "name": "setContextPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getContextParameters",
        "parameterTypes": [ ]
      },
      {
        "name": "getSession",
        "parameterTypes": [ ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": [ ]
      },
      {
        "name": "getContextPath",
        "parameterTypes": [ ]
      },
      {
        "name": "setApplicationDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getApplicationDisplayName",
        "parameterTypes": [ ]
      },
      {
        "name": "setRegisterDefaultServlet",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isRegisterDefaultServlet",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.properties.SwaggerUiConfigParameters",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springdoc.core.properties.SwaggerUiConfigProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.loadbalancer.support.LoadBalancerEagerContextInitializer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.models.OpenAPI",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Remoteip",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getRemoteIpHeader",
        "parameterTypes": [ ]
      },
      {
        "name": "getProtocolHeaderHttpsValue",
        "parameterTypes": [ ]
      },
      {
        "name": "getProtocolHeader",
        "parameterTypes": [ ]
      },
      {
        "name": "getPortHeader",
        "parameterTypes": [ ]
      },
      {
        "name": "getInternalProxies",
        "parameterTypes": [ ]
      },
      {
        "name": "setRemoteIpHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPortHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTrustedProxies",
        "parameterTypes": [ ]
      },
      {
        "name": "setProtocolHeaderHttpsValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrustedProxies",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getHostHeader",
        "parameterTypes": [ ]
      },
      {
        "name": "setInternalProxies",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHostHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProtocolHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "environmentManager",
        "parameterTypes": [
          "org.springframework.core.env.ConfigurableEnvironment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Encoding",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCharset",
        "parameterTypes": [ ]
      },
      {
        "name": "setForce",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCharset",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "isForceRequest",
        "parameterTypes": [ ]
      },
      {
        "name": "getMapping",
        "parameterTypes": [ ]
      },
      {
        "name": "setMapping",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "isForceResponse",
        "parameterTypes": [ ]
      },
      {
        "name": "setForceResponse",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setForceRequest",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isForce",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.web.config.ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "messageConverters",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "io.swagger.v3.oas.models.media.Discriminator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationRegistryPostProcessor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.commons.security.ResourceServerTokenRelayAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.swagger.v3.oas.models.responses.ApiResponse",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFactorySupport",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springdoc.core.customizers.DelegatingMethodParameterCustomizer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerConfigurationOnMissingBean$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "io.github.resilience4j.spring6.circuitbreaker.configure.CircuitBreakerConfigurationProperties"
        ]
      }
    ]
  },
  {
    "name": "com.david.vehicleservice.resource.PositionResource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.Long",
          "com.david.vehicleservice.modal.PositionModal"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "findById",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "search",
        "parameterTypes": [
          "com.david.vehicleservice.modal.VehicleDataSearchModal"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.david.vehicleservice.service.PositionService",
          "com.david.vehicleservice.modal.mapper.PositionMapper"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.autoconfigure.web.WebProperties"
        ]
      },
      {
        "name": "conventionErrorViewResolver",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.Http2",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "endpointOperationParameterMapper",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "endpointCachingOperationInvokerAdvisor",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterMetricsAutoConfiguration$$SpringCGLIB$$FastClass$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterMetricsAutoConfiguration$$SpringCGLIB$$FastClass$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointDiscoverer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.JsonDeserializer[]"
  },
  {
    "name": "org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.logging.LoggingApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springdoc.core.properties.SwaggerUiOAuthProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setUsePkceWithAuthorizationCodeGrant",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getConfigParameters",
        "parameterTypes": [ ]
      },
      {
        "name": "setRealm",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAdditionalQueryStringParams",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "getRealm",
        "parameterTypes": [ ]
      },
      {
        "name": "getAdditionalQueryStringParams",
        "parameterTypes": [ ]
      },
      {
        "name": "setClientSecret",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUsePkceWithAuthorizationCodeGrant",
        "parameterTypes": [ ]
      },
      {
        "name": "getUseBasicAuthenticationWithAccessCodeGrant",
        "parameterTypes": [ ]
      },
      {
        "name": "setUseBasicAuthenticationWithAccessCodeGrant",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setScopeSeparator",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getScopes",
        "parameterTypes": [ ]
      },
      {
        "name": "setScopes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getAppName",
        "parameterTypes": [ ]
      },
      {
        "name": "setAppName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getScopeSeparator",
        "parameterTypes": [ ]
      },
      {
        "name": "getClientId",
        "parameterTypes": [ ]
      },
      {
        "name": "getClientSecret",
        "parameterTypes": [ ]
      },
      {
        "name": "setClientId",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.swagger.v3.core.converter.ModelConverters",
    "fields": [
      {
        "name": "converters"
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "diskSpaceHealthIndicator",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties"
        ]
      }
    ]
  },
  {
    "name": "io.swagger.v3.core.jackson.mixin.Components31Mixin",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContextFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "mappingJackson2HttpMessageConverter",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.ObjectMapper"
        ]
      }
    ]
  },
  {
    "name": "io.swagger.v3.core.jackson.mixin.ExtensionsMixin",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.rsa.crypto.RsaSecretEncryptor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springdoc.core.properties.SpringDocConfigProperties$ModelConverters",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDeprecatingConverter",
        "parameterTypes": [ ]
      },
      {
        "name": "getPolymorphicConverter",
        "parameterTypes": [ ]
      },
      {
        "name": "setPolymorphicConverter",
        "parameterTypes": [
          "org.springdoc.core.properties.SpringDocConfigProperties$ModelConverters$PolymorphicConverter"
        ]
      },
      {
        "name": "getPageableConverter",
        "parameterTypes": [ ]
      },
      {
        "name": "setDeprecatingConverter",
        "parameterTypes": [
          "org.springdoc.core.properties.SpringDocConfigProperties$ModelConverters$DeprecatingConverter"
        ]
      },
      {
        "name": "setPageableConverter",
        "parameterTypes": [
          "org.springdoc.core.properties.SpringDocConfigProperties$ModelConverters$PageableConverter"
        ]
      }
    ]
  },
  {
    "name": "io.swagger.v3.oas.models.Operation",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties$Naming",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getImplicitStrategy",
        "parameterTypes": [ ]
      },
      {
        "name": "setPhysicalStrategy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPhysicalStrategy",
        "parameterTypes": [ ]
      },
      {
        "name": "setImplicitStrategy",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "byAnnotation",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.DatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.metrics.system.DiskSpaceMetricsBinder",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Discovery",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.AbstractCircuitBreakerConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "java.lang.Enum",
    "methods": [
      {
        "name": "getDeclaringClass",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.event.EventPublishingRunListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "dataSource",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties",
          "org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails"
        ]
      },
      {
        "name": "jdbcConnectionDetailsHikariBeanPostProcessor",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.springboot3.retry.autoconfigure.RetryAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.quartz.SchedulerDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "io.github.resilience4j.springboot3.retry.autoconfigure.RetryMetricsAutoConfiguration$$SpringCGLIB$$FastClass$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "io.github.resilience4j.springboot3.retry.autoconfigure.RetryMetricsAutoConfiguration$$SpringCGLIB$$FastClass$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "dispatcherServlet",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.service.GenericResponseService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ObjectMapper",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties$Http$Client$ClientRequests",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.springboot3.retry.autoconfigure.RetryConfigurationOnMissingBean",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "retryEventConsumerRegistry",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.Health",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getStatus",
        "parameterTypes": [ ]
      },
      {
        "name": "getDetails",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.orm.jpa.JpaVendorAdapter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.event.TransactionalEventListenerFactory",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.netflix.appinfo.InstanceInfo$ActionType",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "meterRegistryPostProcessor",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "propertiesMeterFilter",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
        ]
      },
      {
        "name": "micrometerClock",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setUseLastModified",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getPeriod",
        "parameterTypes": [ ]
      },
      {
        "name": "getCachecontrol",
        "parameterTypes": [ ]
      },
      {
        "name": "isUseLastModified",
        "parameterTypes": [ ]
      },
      {
        "name": "setPeriod",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.netflix.eureka.EurekaServiceInstance",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springdoc.core.converters.SortOpenAPIConverter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterMetricsAutoConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.ErrorPageRegistrarBeanPostProcessor",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUsername",
        "parameterTypes": [ ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setXa",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$Xa"
        ]
      },
      {
        "name": "getEmbeddedDatabaseConnection",
        "parameterTypes": [ ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "setEmbeddedDatabaseConnection",
        "parameterTypes": [
          "org.springframework.boot.jdbc.EmbeddedDatabaseConnection"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setGenerateUniqueName",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDriverClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isGenerateUniqueName",
        "parameterTypes": [ ]
      },
      {
        "name": "getDriverClassName",
        "parameterTypes": [ ]
      },
      {
        "name": "getUrl",
        "parameterTypes": [ ]
      },
      {
        "name": "getType",
        "parameterTypes": [ ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getXa",
        "parameterTypes": [ ]
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "getClassLoader",
        "parameterTypes": [ ]
      },
      {
        "name": "setJndiName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getJndiName",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WelcomePageNotAcceptableHandlerMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.github.resilience4j.springboot3.retry.autoconfigure.AbstractRetryConfigurationOnMissingBean",
    "queriedMethods": [
      {
        "name": "retryAspect",
        "parameterTypes": [
          "io.github.resilience4j.spring6.retry.configure.RetryConfigurationProperties",
          "io.github.resilience4j.retry.RetryRegistry",
          "java.util.List",
          "io.github.resilience4j.spring6.fallback.FallbackExecutor",
          "io.github.resilience4j.spring6.spelresolver.SpelResolver",
          "io.github.resilience4j.core.ContextAwareScheduledThreadPoolExecutor"
        ]
      },
      {
        "name": "retryRegistryEventConsumer",
        "parameterTypes": [
          "java.util.Optional"
        ]
      },
      {
        "name": "compositeRetryCustomizer",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "retryRegistry",
        "parameterTypes": [
          "io.github.resilience4j.spring6.retry.configure.RetryConfigurationProperties",
          "io.github.resilience4j.consumer.EventConsumerRegistry",
          "io.github.resilience4j.core.registry.RegistryEventConsumer",
          "io.github.resilience4j.common.CompositeCustomizer"
        ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.spring6.retry.configure.RetryConfigurationProperties",
    "methods": [
      {
        "name": "getRetryAspectOrder",
        "parameterTypes": [ ]
      },
      {
        "name": "setRetryAspectOrder",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.util.random.CachedRandomPropertySourceEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jsonComponentModule",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.yaml.snakeyaml.Yaml",
    "condition": {
      "typeReachable": "org.springframework.boot.env.YamlPropertySourceLoader"
    }
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.RequestToViewNameTranslator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterAutoConfiguration$RateLimiterEndpointAutoConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy",
    "condition": {
      "typeReachable": "org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory"
    },
    "methods": [
      {
        "name": "shutdown",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.autoconfigure.RefreshEndpointAutoConfiguration$RefreshEndpointConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslBundleProperties$Options",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getEnabledProtocols",
        "parameterTypes": [ ]
      },
      {
        "name": "getCiphers",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabledProtocols",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setCiphers",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.method.support.CompositeUriComponentsContributor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "tomcatServletWebServerFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.rolling.helper.IntegerTokenConverter",
    "allPublicConstructors": true
  },
  {
    "name": "java.net.URI",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getShutdown",
        "parameterTypes": [ ]
      },
      {
        "name": "getPool",
        "parameterTypes": [ ]
      },
      {
        "name": "getThreadNamePrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "setThreadNamePrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.function.support.RouterFunctionMapping",
    "queryAllDeclaredMethods": true
  }
]
